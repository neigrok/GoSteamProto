// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: webuimessages_steamos.proto

package steam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgFactoryResetState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsRunning                *bool   `protobuf:"varint,1,opt,name=is_running,json=isRunning" json:"is_running,omitempty"`
	Progress                 *int32  `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	IsRestartPending         *bool   `protobuf:"varint,3,opt,name=is_restart_pending,json=isRestartPending" json:"is_restart_pending,omitempty"`
	RtimeEstimatedCompletion *uint32 `protobuf:"fixed32,4,opt,name=rtime_estimated_completion,json=rtimeEstimatedCompletion" json:"rtime_estimated_completion,omitempty"`
}

func (x *CMsgFactoryResetState) Reset() {
	*x = CMsgFactoryResetState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFactoryResetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFactoryResetState) ProtoMessage() {}

func (x *CMsgFactoryResetState) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFactoryResetState.ProtoReflect.Descriptor instead.
func (*CMsgFactoryResetState) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgFactoryResetState) GetIsRunning() bool {
	if x != nil && x.IsRunning != nil {
		return *x.IsRunning
	}
	return false
}

func (x *CMsgFactoryResetState) GetProgress() int32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *CMsgFactoryResetState) GetIsRestartPending() bool {
	if x != nil && x.IsRestartPending != nil {
		return *x.IsRestartPending
	}
	return false
}

func (x *CMsgFactoryResetState) GetRtimeEstimatedCompletion() uint32 {
	if x != nil && x.RtimeEstimatedCompletion != nil {
		return *x.RtimeEstimatedCompletion
	}
	return 0
}

type CSteamOSManagerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsServiceAvailable                *bool                  `protobuf:"varint,1,opt,name=is_service_available,json=isServiceAvailable" json:"is_service_available,omitempty"`
	OsVersion                         *string                `protobuf:"bytes,2,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	IsMandatoryUpdateAvailable        *bool                  `protobuf:"varint,3,opt,name=is_mandatory_update_available,json=isMandatoryUpdateAvailable" json:"is_mandatory_update_available,omitempty"`
	StartupMovieVariant               *EStartupMovieVariant  `protobuf:"varint,4,opt,name=startup_movie_variant,json=startupMovieVariant,enum=EStartupMovieVariant,def=0" json:"startup_movie_variant,omitempty"`
	IsStatusLedControlAvailable       *bool                  `protobuf:"varint,5,opt,name=is_status_led_control_available,json=isStatusLedControlAvailable" json:"is_status_led_control_available,omitempty"`
	FactoryResetState                 *CMsgFactoryResetState `protobuf:"bytes,6,opt,name=factory_reset_state,json=factoryResetState" json:"factory_reset_state,omitempty"`
	IsTdpLimitAvailable               *bool                  `protobuf:"varint,7,opt,name=is_tdp_limit_available,json=isTdpLimitAvailable" json:"is_tdp_limit_available,omitempty"`
	TdpLimitMin                       *int32                 `protobuf:"varint,8,opt,name=tdp_limit_min,json=tdpLimitMin" json:"tdp_limit_min,omitempty"`
	TdpLimitMax                       *int32                 `protobuf:"varint,9,opt,name=tdp_limit_max,json=tdpLimitMax" json:"tdp_limit_max,omitempty"`
	IsCecAvailable                    *bool                  `protobuf:"varint,10,opt,name=is_cec_available,json=isCecAvailable" json:"is_cec_available,omitempty"`
	IsWifiDebugSupported              *bool                  `protobuf:"varint,11,opt,name=is_wifi_debug_supported,json=isWifiDebugSupported" json:"is_wifi_debug_supported,omitempty"`
	IsWifiDebugForceDisabled          *bool                  `protobuf:"varint,12,opt,name=is_wifi_debug_force_disabled,json=isWifiDebugForceDisabled" json:"is_wifi_debug_force_disabled,omitempty"`
	IsWifiForceWpaSupplicantSupported *bool                  `protobuf:"varint,13,opt,name=is_wifi_force_wpa_supplicant_supported,json=isWifiForceWpaSupplicantSupported" json:"is_wifi_force_wpa_supplicant_supported,omitempty"`
}

// Default values for CSteamOSManagerState fields.
const (
	Default_CSteamOSManagerState_StartupMovieVariant = EStartupMovieVariant_k_EStartupMovieVariant_Invalid
)

func (x *CSteamOSManagerState) Reset() {
	*x = CSteamOSManagerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManagerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManagerState) ProtoMessage() {}

func (x *CSteamOSManagerState) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManagerState.ProtoReflect.Descriptor instead.
func (*CSteamOSManagerState) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{1}
}

func (x *CSteamOSManagerState) GetIsServiceAvailable() bool {
	if x != nil && x.IsServiceAvailable != nil {
		return *x.IsServiceAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *CSteamOSManagerState) GetIsMandatoryUpdateAvailable() bool {
	if x != nil && x.IsMandatoryUpdateAvailable != nil {
		return *x.IsMandatoryUpdateAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetStartupMovieVariant() EStartupMovieVariant {
	if x != nil && x.StartupMovieVariant != nil {
		return *x.StartupMovieVariant
	}
	return Default_CSteamOSManagerState_StartupMovieVariant
}

func (x *CSteamOSManagerState) GetIsStatusLedControlAvailable() bool {
	if x != nil && x.IsStatusLedControlAvailable != nil {
		return *x.IsStatusLedControlAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetFactoryResetState() *CMsgFactoryResetState {
	if x != nil {
		return x.FactoryResetState
	}
	return nil
}

func (x *CSteamOSManagerState) GetIsTdpLimitAvailable() bool {
	if x != nil && x.IsTdpLimitAvailable != nil {
		return *x.IsTdpLimitAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetTdpLimitMin() int32 {
	if x != nil && x.TdpLimitMin != nil {
		return *x.TdpLimitMin
	}
	return 0
}

func (x *CSteamOSManagerState) GetTdpLimitMax() int32 {
	if x != nil && x.TdpLimitMax != nil {
		return *x.TdpLimitMax
	}
	return 0
}

func (x *CSteamOSManagerState) GetIsCecAvailable() bool {
	if x != nil && x.IsCecAvailable != nil {
		return *x.IsCecAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetIsWifiDebugSupported() bool {
	if x != nil && x.IsWifiDebugSupported != nil {
		return *x.IsWifiDebugSupported
	}
	return false
}

func (x *CSteamOSManagerState) GetIsWifiDebugForceDisabled() bool {
	if x != nil && x.IsWifiDebugForceDisabled != nil {
		return *x.IsWifiDebugForceDisabled
	}
	return false
}

func (x *CSteamOSManagerState) GetIsWifiForceWpaSupplicantSupported() bool {
	if x != nil && x.IsWifiForceWpaSupplicantSupported != nil {
		return *x.IsWifiForceWpaSupplicantSupported
	}
	return false
}

type CSteamOSManager_GetState_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSManager_GetState_Request) Reset() {
	*x = CSteamOSManager_GetState_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_GetState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_GetState_Request) ProtoMessage() {}

func (x *CSteamOSManager_GetState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_GetState_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_GetState_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{2}
}

type CSteamOSManager_GetState_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *CSteamOSManagerState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (x *CSteamOSManager_GetState_Response) Reset() {
	*x = CSteamOSManager_GetState_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_GetState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_GetState_Response) ProtoMessage() {}

func (x *CSteamOSManager_GetState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_GetState_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_GetState_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{3}
}

func (x *CSteamOSManager_GetState_Response) GetState() *CSteamOSManagerState {
	if x != nil {
		return x.State
	}
	return nil
}

type CSteamOSManager_StateChanged_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSManager_StateChanged_Notification) Reset() {
	*x = CSteamOSManager_StateChanged_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_StateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_StateChanged_Notification) ProtoMessage() {}

func (x *CSteamOSManager_StateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_StateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_StateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{4}
}

type CSteamOSManager_IsTelemetryHelperAvailable_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etype *ESLSHelper `protobuf:"varint,1,opt,name=etype,enum=ESLSHelper,def=0" json:"etype,omitempty"`
}

// Default values for CSteamOSManager_IsTelemetryHelperAvailable_Request fields.
const (
	Default_CSteamOSManager_IsTelemetryHelperAvailable_Request_Etype = ESLSHelper_k_ESLSHelper_Invalid
)

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) Reset() {
	*x = CSteamOSManager_IsTelemetryHelperAvailable_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_IsTelemetryHelperAvailable_Request) ProtoMessage() {}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_IsTelemetryHelperAvailable_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_IsTelemetryHelperAvailable_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{5}
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) GetEtype() ESLSHelper {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_CSteamOSManager_IsTelemetryHelperAvailable_Request_Etype
}

type CSteamOSManager_IsTelemetryHelperAvailable_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available *bool `protobuf:"varint,1,opt,name=available" json:"available,omitempty"`
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) Reset() {
	*x = CSteamOSManager_IsTelemetryHelperAvailable_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_IsTelemetryHelperAvailable_Response) ProtoMessage() {}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_IsTelemetryHelperAvailable_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_IsTelemetryHelperAvailable_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{6}
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) GetAvailable() bool {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return false
}

type CSteamOSManager_OptOutOfSideloadedClient_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Request) Reset() {
	*x = CSteamOSManager_OptOutOfSideloadedClient_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_OptOutOfSideloadedClient_Request) ProtoMessage() {}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_OptOutOfSideloadedClient_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_OptOutOfSideloadedClient_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{7}
}

type CSteamOSManager_OptOutOfSideloadedClient_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Response) Reset() {
	*x = CSteamOSManager_OptOutOfSideloadedClient_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_OptOutOfSideloadedClient_Response) ProtoMessage() {}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_OptOutOfSideloadedClient_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_OptOutOfSideloadedClient_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{8}
}

type CSteamOSManager_ApplyMandatoryUpdate_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Request) Reset() {
	*x = CSteamOSManager_ApplyMandatoryUpdate_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_ApplyMandatoryUpdate_Request) ProtoMessage() {}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_ApplyMandatoryUpdate_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_ApplyMandatoryUpdate_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{9}
}

type CSteamOSManager_ApplyMandatoryUpdate_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Response) Reset() {
	*x = CSteamOSManager_ApplyMandatoryUpdate_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_ApplyMandatoryUpdate_Response) ProtoMessage() {}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_ApplyMandatoryUpdate_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_ApplyMandatoryUpdate_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{10}
}

type CSteamOSManager_FactoryReset_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResetOs       *bool `protobuf:"varint,1,opt,name=reset_os,json=resetOs" json:"reset_os,omitempty"`
	ResetUserData *bool `protobuf:"varint,2,opt,name=reset_user_data,json=resetUserData" json:"reset_user_data,omitempty"`
}

func (x *CSteamOSManager_FactoryReset_Request) Reset() {
	*x = CSteamOSManager_FactoryReset_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_FactoryReset_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_FactoryReset_Request) ProtoMessage() {}

func (x *CSteamOSManager_FactoryReset_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_FactoryReset_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_FactoryReset_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{11}
}

func (x *CSteamOSManager_FactoryReset_Request) GetResetOs() bool {
	if x != nil && x.ResetOs != nil {
		return *x.ResetOs
	}
	return false
}

func (x *CSteamOSManager_FactoryReset_Request) GetResetUserData() bool {
	if x != nil && x.ResetUserData != nil {
		return *x.ResetUserData
	}
	return false
}

type CSteamOSManager_FactoryReset_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSManager_FactoryReset_Response) Reset() {
	*x = CSteamOSManager_FactoryReset_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSManager_FactoryReset_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_FactoryReset_Response) ProtoMessage() {}

func (x *CSteamOSManager_FactoryReset_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_FactoryReset_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_FactoryReset_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{12}
}

type CSteamOSSLSPlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etype       *ESLSHelper `protobuf:"varint,1,opt,name=etype,enum=ESLSHelper,def=0" json:"etype,omitempty"`
	IsAvailable *bool       `protobuf:"varint,2,opt,name=is_available,json=isAvailable" json:"is_available,omitempty"`
	IsEnabled   *bool       `protobuf:"varint,3,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
}

// Default values for CSteamOSSLSPlugin fields.
const (
	Default_CSteamOSSLSPlugin_Etype = ESLSHelper_k_ESLSHelper_Invalid
)

func (x *CSteamOSSLSPlugin) Reset() {
	*x = CSteamOSSLSPlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLSPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLSPlugin) ProtoMessage() {}

func (x *CSteamOSSLSPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLSPlugin.ProtoReflect.Descriptor instead.
func (*CSteamOSSLSPlugin) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{13}
}

func (x *CSteamOSSLSPlugin) GetEtype() ESLSHelper {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_CSteamOSSLSPlugin_Etype
}

func (x *CSteamOSSLSPlugin) GetIsAvailable() bool {
	if x != nil && x.IsAvailable != nil {
		return *x.IsAvailable
	}
	return false
}

func (x *CSteamOSSLSPlugin) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

type CSteamOSSLSState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAvailable *bool                `protobuf:"varint,1,opt,name=is_available,json=isAvailable" json:"is_available,omitempty"`
	IsEnabled   *bool                `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	Plugins     []*CSteamOSSLSPlugin `protobuf:"bytes,3,rep,name=plugins" json:"plugins,omitempty"`
}

func (x *CSteamOSSLSState) Reset() {
	*x = CSteamOSSLSState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLSState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLSState) ProtoMessage() {}

func (x *CSteamOSSLSState) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLSState.ProtoReflect.Descriptor instead.
func (*CSteamOSSLSState) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{14}
}

func (x *CSteamOSSLSState) GetIsAvailable() bool {
	if x != nil && x.IsAvailable != nil {
		return *x.IsAvailable
	}
	return false
}

func (x *CSteamOSSLSState) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

func (x *CSteamOSSLSState) GetPlugins() []*CSteamOSSLSPlugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type CSteamOSSLS_GetState_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSSLS_GetState_Request) Reset() {
	*x = CSteamOSSLS_GetState_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLS_GetState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_GetState_Request) ProtoMessage() {}

func (x *CSteamOSSLS_GetState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_GetState_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_GetState_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{15}
}

type CSteamOSSLS_GetState_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *CSteamOSSLSState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
}

func (x *CSteamOSSLS_GetState_Response) Reset() {
	*x = CSteamOSSLS_GetState_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLS_GetState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_GetState_Response) ProtoMessage() {}

func (x *CSteamOSSLS_GetState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_GetState_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_GetState_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{16}
}

func (x *CSteamOSSLS_GetState_Response) GetState() *CSteamOSSLSState {
	if x != nil {
		return x.State
	}
	return nil
}

type CSteamOSSLS_StateChanged_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSSLS_StateChanged_Notification) Reset() {
	*x = CSteamOSSLS_StateChanged_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLS_StateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_StateChanged_Notification) ProtoMessage() {}

func (x *CSteamOSSLS_StateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_StateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_StateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{17}
}

type CSteamOSSLS_SetEnabled_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *CSteamOSSLS_SetEnabled_Request) Reset() {
	*x = CSteamOSSLS_SetEnabled_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLS_SetEnabled_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetEnabled_Request) ProtoMessage() {}

func (x *CSteamOSSLS_SetEnabled_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetEnabled_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetEnabled_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{18}
}

func (x *CSteamOSSLS_SetEnabled_Request) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type CSteamOSSLS_SetEnabled_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSSLS_SetEnabled_Response) Reset() {
	*x = CSteamOSSLS_SetEnabled_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLS_SetEnabled_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetEnabled_Response) ProtoMessage() {}

func (x *CSteamOSSLS_SetEnabled_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetEnabled_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetEnabled_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{19}
}

type CSteamOSSLS_SetPluginEnabled_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etype   *ESLSHelper `protobuf:"varint,1,opt,name=etype,enum=ESLSHelper,def=0" json:"etype,omitempty"`
	Enabled *bool       `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
}

// Default values for CSteamOSSLS_SetPluginEnabled_Request fields.
const (
	Default_CSteamOSSLS_SetPluginEnabled_Request_Etype = ESLSHelper_k_ESLSHelper_Invalid
)

func (x *CSteamOSSLS_SetPluginEnabled_Request) Reset() {
	*x = CSteamOSSLS_SetPluginEnabled_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLS_SetPluginEnabled_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetPluginEnabled_Request) ProtoMessage() {}

func (x *CSteamOSSLS_SetPluginEnabled_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetPluginEnabled_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetPluginEnabled_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{20}
}

func (x *CSteamOSSLS_SetPluginEnabled_Request) GetEtype() ESLSHelper {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_CSteamOSSLS_SetPluginEnabled_Request_Etype
}

func (x *CSteamOSSLS_SetPluginEnabled_Request) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type CSteamOSSLS_SetPluginEnabled_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamOSSLS_SetPluginEnabled_Response) Reset() {
	*x = CSteamOSSLS_SetPluginEnabled_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_webuimessages_steamos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamOSSLS_SetPluginEnabled_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetPluginEnabled_Response) ProtoMessage() {}

func (x *CSteamOSSLS_SetPluginEnabled_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetPluginEnabled_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetPluginEnabled_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{21}
}

var File_webuimessages_steamos_proto protoreflect.FileDescriptor

var file_webuimessages_steamos_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x77, 0x65, 0x62, 0x75, 0x69, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x77, 0x65, 0x62, 0x75, 0x69, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe,
	0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x69, 0x73, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x07, 0x52, 0x18, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x94, 0x06, 0x0a, 0x14, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x1d, 0x69, 0x73, 0x5f,
	0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1a, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x69, 0x0a, 0x15,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x45, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x3a, 0x1e, 0x6b, 0x5f, 0x45, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x1f, 0x69, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1b, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x65, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x46, 0x0a,
	0x13, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x11, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x74, 0x64, 0x70, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x54, 0x64, 0x70, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x64,
	0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x74, 0x64, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x69, 0x6e, 0x12, 0x22,
	0x0a, 0x0d, 0x74, 0x64, 0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x64, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d,
	0x61, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x63, 0x65, 0x63, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x43, 0x65, 0x63, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x17,
	0x69, 0x73, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69,
	0x73, 0x57, 0x69, 0x66, 0x69, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a, 0x1c, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x64,
	0x65, 0x62, 0x75, 0x67, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x69, 0x73, 0x57, 0x69, 0x66,
	0x69, 0x44, 0x65, 0x62, 0x75, 0x67, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x51, 0x0a, 0x26, 0x69, 0x73, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x5f, 0x77, 0x70, 0x61, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x21, 0x69, 0x73, 0x57, 0x69, 0x66, 0x69, 0x46, 0x6f, 0x72, 0x63, 0x65,
	0x57, 0x70, 0x61, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x21, 0x43, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2b, 0x0a, 0x29,
	0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x32, 0x43, 0x53, 0x74,
	0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x49, 0x73, 0x54,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b,
	0x2e, 0x45, 0x53, 0x4c, 0x53, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x3a, 0x14, 0x6b, 0x5f, 0x45,
	0x53, 0x4c, 0x53, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x52, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x22, 0x53, 0x0a, 0x33, 0x43, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x49, 0x73, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x32, 0x0a,
	0x30, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x69, 0x64, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x33, 0x0a, 0x31, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x69, 0x64,
	0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x2c, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d,
	0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a, 0x2d, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d,
	0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x24, 0x43, 0x53, 0x74, 0x65, 0x61,
	0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x27, 0x0a, 0x25, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x11,
	0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x45, 0x53, 0x4c, 0x53, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x3a, 0x14, 0x6b,
	0x5f, 0x45, 0x53, 0x4c, 0x53, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x52, 0x05, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x82, 0x01, 0x0a,
	0x10, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53,
	0x4c, 0x53, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53,
	0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x48, 0x0a, 0x1d, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53,
	0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x43,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x1e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53,
	0x53, 0x4c, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x21, 0x0a, 0x1f, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f,
	0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x79, 0x0a, 0x24, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53,
	0x4c, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x45, 0x53, 0x4c,
	0x53, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x3a, 0x14, 0x6b, 0x5f, 0x45, 0x53, 0x4c, 0x53, 0x48,
	0x65, 0x6c, 0x70, 0x65, 0x72, 0x5f, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x05, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x27,
	0x0a, 0x25, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x53, 0x65,
	0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x97, 0x04, 0x0a, 0x0e, 0x53, 0x74, 0x65, 0x61,
	0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f,
	0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x43, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x12, 0x2a, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x10, 0x2e, 0x57, 0x65, 0x62, 0x55, 0x49, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x69,
	0x64, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x31,
	0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x69, 0x64, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x5f, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x53, 0x69, 0x64, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61,
	0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x2e,
	0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x43,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0c,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x43,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x04, 0x80, 0x97, 0x22,
	0x01, 0x32, 0xe1, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53,
	0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x43,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x26, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x57, 0x65, 0x62, 0x55,
	0x49, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x53,
	0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x2e, 0x43, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x43, 0x53, 0x74,
	0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x25, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x53,
	0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x4f, 0x53, 0x53, 0x4c, 0x53, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a,
	0x04, 0x80, 0x97, 0x22, 0x01, 0x42, 0x05, 0x48, 0x01, 0x80, 0x01, 0x01,
}

var (
	file_webuimessages_steamos_proto_rawDescOnce sync.Once
	file_webuimessages_steamos_proto_rawDescData = file_webuimessages_steamos_proto_rawDesc
)

func file_webuimessages_steamos_proto_rawDescGZIP() []byte {
	file_webuimessages_steamos_proto_rawDescOnce.Do(func() {
		file_webuimessages_steamos_proto_rawDescData = protoimpl.X.CompressGZIP(file_webuimessages_steamos_proto_rawDescData)
	})
	return file_webuimessages_steamos_proto_rawDescData
}

var file_webuimessages_steamos_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_webuimessages_steamos_proto_goTypes = []any{
	(*CMsgFactoryResetState)(nil),                               // 0: CMsgFactoryResetState
	(*CSteamOSManagerState)(nil),                                // 1: CSteamOSManagerState
	(*CSteamOSManager_GetState_Request)(nil),                    // 2: CSteamOSManager_GetState_Request
	(*CSteamOSManager_GetState_Response)(nil),                   // 3: CSteamOSManager_GetState_Response
	(*CSteamOSManager_StateChanged_Notification)(nil),           // 4: CSteamOSManager_StateChanged_Notification
	(*CSteamOSManager_IsTelemetryHelperAvailable_Request)(nil),  // 5: CSteamOSManager_IsTelemetryHelperAvailable_Request
	(*CSteamOSManager_IsTelemetryHelperAvailable_Response)(nil), // 6: CSteamOSManager_IsTelemetryHelperAvailable_Response
	(*CSteamOSManager_OptOutOfSideloadedClient_Request)(nil),    // 7: CSteamOSManager_OptOutOfSideloadedClient_Request
	(*CSteamOSManager_OptOutOfSideloadedClient_Response)(nil),   // 8: CSteamOSManager_OptOutOfSideloadedClient_Response
	(*CSteamOSManager_ApplyMandatoryUpdate_Request)(nil),        // 9: CSteamOSManager_ApplyMandatoryUpdate_Request
	(*CSteamOSManager_ApplyMandatoryUpdate_Response)(nil),       // 10: CSteamOSManager_ApplyMandatoryUpdate_Response
	(*CSteamOSManager_FactoryReset_Request)(nil),                // 11: CSteamOSManager_FactoryReset_Request
	(*CSteamOSManager_FactoryReset_Response)(nil),               // 12: CSteamOSManager_FactoryReset_Response
	(*CSteamOSSLSPlugin)(nil),                                   // 13: CSteamOSSLSPlugin
	(*CSteamOSSLSState)(nil),                                    // 14: CSteamOSSLSState
	(*CSteamOSSLS_GetState_Request)(nil),                        // 15: CSteamOSSLS_GetState_Request
	(*CSteamOSSLS_GetState_Response)(nil),                       // 16: CSteamOSSLS_GetState_Response
	(*CSteamOSSLS_StateChanged_Notification)(nil),               // 17: CSteamOSSLS_StateChanged_Notification
	(*CSteamOSSLS_SetEnabled_Request)(nil),                      // 18: CSteamOSSLS_SetEnabled_Request
	(*CSteamOSSLS_SetEnabled_Response)(nil),                     // 19: CSteamOSSLS_SetEnabled_Response
	(*CSteamOSSLS_SetPluginEnabled_Request)(nil),                // 20: CSteamOSSLS_SetPluginEnabled_Request
	(*CSteamOSSLS_SetPluginEnabled_Response)(nil),               // 21: CSteamOSSLS_SetPluginEnabled_Response
	(EStartupMovieVariant)(0),                                   // 22: EStartupMovieVariant
	(ESLSHelper)(0),                                             // 23: ESLSHelper
	(*WebUINoResponse)(nil),                                     // 24: WebUINoResponse
}
var file_webuimessages_steamos_proto_depIdxs = []int32{
	22, // 0: CSteamOSManagerState.startup_movie_variant:type_name -> EStartupMovieVariant
	0,  // 1: CSteamOSManagerState.factory_reset_state:type_name -> CMsgFactoryResetState
	1,  // 2: CSteamOSManager_GetState_Response.state:type_name -> CSteamOSManagerState
	23, // 3: CSteamOSManager_IsTelemetryHelperAvailable_Request.etype:type_name -> ESLSHelper
	23, // 4: CSteamOSSLSPlugin.etype:type_name -> ESLSHelper
	13, // 5: CSteamOSSLSState.plugins:type_name -> CSteamOSSLSPlugin
	14, // 6: CSteamOSSLS_GetState_Response.state:type_name -> CSteamOSSLSState
	23, // 7: CSteamOSSLS_SetPluginEnabled_Request.etype:type_name -> ESLSHelper
	2,  // 8: SteamOSManager.GetState:input_type -> CSteamOSManager_GetState_Request
	4,  // 9: SteamOSManager.NotifyStateChanged:input_type -> CSteamOSManager_StateChanged_Notification
	7,  // 10: SteamOSManager.OptOutOfSideloadedClient:input_type -> CSteamOSManager_OptOutOfSideloadedClient_Request
	9,  // 11: SteamOSManager.ApplyMandatoryUpdate:input_type -> CSteamOSManager_ApplyMandatoryUpdate_Request
	11, // 12: SteamOSManager.FactoryReset:input_type -> CSteamOSManager_FactoryReset_Request
	15, // 13: SteamOSSLS.GetState:input_type -> CSteamOSSLS_GetState_Request
	17, // 14: SteamOSSLS.NotifyStateChanged:input_type -> CSteamOSSLS_StateChanged_Notification
	18, // 15: SteamOSSLS.SetEnabled:input_type -> CSteamOSSLS_SetEnabled_Request
	20, // 16: SteamOSSLS.SetPluginEnabled:input_type -> CSteamOSSLS_SetPluginEnabled_Request
	3,  // 17: SteamOSManager.GetState:output_type -> CSteamOSManager_GetState_Response
	24, // 18: SteamOSManager.NotifyStateChanged:output_type -> WebUINoResponse
	8,  // 19: SteamOSManager.OptOutOfSideloadedClient:output_type -> CSteamOSManager_OptOutOfSideloadedClient_Response
	10, // 20: SteamOSManager.ApplyMandatoryUpdate:output_type -> CSteamOSManager_ApplyMandatoryUpdate_Response
	12, // 21: SteamOSManager.FactoryReset:output_type -> CSteamOSManager_FactoryReset_Response
	16, // 22: SteamOSSLS.GetState:output_type -> CSteamOSSLS_GetState_Response
	24, // 23: SteamOSSLS.NotifyStateChanged:output_type -> WebUINoResponse
	19, // 24: SteamOSSLS.SetEnabled:output_type -> CSteamOSSLS_SetEnabled_Response
	21, // 25: SteamOSSLS.SetPluginEnabled:output_type -> CSteamOSSLS_SetPluginEnabled_Response
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_webuimessages_steamos_proto_init() }
func file_webuimessages_steamos_proto_init() {
	if File_webuimessages_steamos_proto != nil {
		return
	}
	file_enums_proto_init()
	file_steammessages_base_proto_init()
	file_webuimessages_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_webuimessages_steamos_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgFactoryResetState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManagerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_GetState_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_GetState_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_StateChanged_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_IsTelemetryHelperAvailable_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_IsTelemetryHelperAvailable_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_OptOutOfSideloadedClient_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_OptOutOfSideloadedClient_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_ApplyMandatoryUpdate_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_ApplyMandatoryUpdate_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_FactoryReset_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSManager_FactoryReset_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLSPlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLSState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLS_GetState_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLS_GetState_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLS_StateChanged_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLS_SetEnabled_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLS_SetEnabled_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLS_SetPluginEnabled_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_webuimessages_steamos_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamOSSLS_SetPluginEnabled_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_webuimessages_steamos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_webuimessages_steamos_proto_goTypes,
		DependencyIndexes: file_webuimessages_steamos_proto_depIdxs,
		MessageInfos:      file_webuimessages_steamos_proto_msgTypes,
	}.Build()
	File_webuimessages_steamos_proto = out.File
	file_webuimessages_steamos_proto_rawDesc = nil
	file_webuimessages_steamos_proto_goTypes = nil
	file_webuimessages_steamos_proto_depIdxs = nil
}
