// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: steammessages_clientserver_2.proto

package steam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgClientUpdateUserGameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamidIdgs *uint64 `protobuf:"fixed64,1,opt,name=steamid_idgs,json=steamidIdgs" json:"steamid_idgs,omitempty"`
	Gameid      *uint64 `protobuf:"fixed64,2,opt,name=gameid" json:"gameid,omitempty"`
	GameIp      *uint32 `protobuf:"varint,3,opt,name=game_ip,json=gameIp" json:"game_ip,omitempty"`
	GamePort    *uint32 `protobuf:"varint,4,opt,name=game_port,json=gamePort" json:"game_port,omitempty"`
	Token       []byte  `protobuf:"bytes,5,opt,name=token" json:"token,omitempty"`
}

func (x *CMsgClientUpdateUserGameInfo) Reset() {
	*x = CMsgClientUpdateUserGameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUpdateUserGameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUpdateUserGameInfo) ProtoMessage() {}

func (x *CMsgClientUpdateUserGameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUpdateUserGameInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientUpdateUserGameInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgClientUpdateUserGameInfo) GetSteamidIdgs() uint64 {
	if x != nil && x.SteamidIdgs != nil {
		return *x.SteamidIdgs
	}
	return 0
}

func (x *CMsgClientUpdateUserGameInfo) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *CMsgClientUpdateUserGameInfo) GetGameIp() uint32 {
	if x != nil && x.GameIp != nil {
		return *x.GameIp
	}
	return 0
}

func (x *CMsgClientUpdateUserGameInfo) GetGamePort() uint32 {
	if x != nil && x.GamePort != nil {
		return *x.GamePort
	}
	return 0
}

func (x *CMsgClientUpdateUserGameInfo) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type CMsgClientRichPresenceUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichPresenceKv   []byte   `protobuf:"bytes,1,opt,name=rich_presence_kv,json=richPresenceKv" json:"rich_presence_kv,omitempty"`
	SteamidBroadcast []uint64 `protobuf:"fixed64,2,rep,name=steamid_broadcast,json=steamidBroadcast" json:"steamid_broadcast,omitempty"`
}

func (x *CMsgClientRichPresenceUpload) Reset() {
	*x = CMsgClientRichPresenceUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRichPresenceUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRichPresenceUpload) ProtoMessage() {}

func (x *CMsgClientRichPresenceUpload) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRichPresenceUpload.ProtoReflect.Descriptor instead.
func (*CMsgClientRichPresenceUpload) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgClientRichPresenceUpload) GetRichPresenceKv() []byte {
	if x != nil {
		return x.RichPresenceKv
	}
	return nil
}

func (x *CMsgClientRichPresenceUpload) GetSteamidBroadcast() []uint64 {
	if x != nil {
		return x.SteamidBroadcast
	}
	return nil
}

type CMsgClientRichPresenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamidRequest []uint64 `protobuf:"fixed64,1,rep,name=steamid_request,json=steamidRequest" json:"steamid_request,omitempty"`
}

func (x *CMsgClientRichPresenceRequest) Reset() {
	*x = CMsgClientRichPresenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRichPresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRichPresenceRequest) ProtoMessage() {}

func (x *CMsgClientRichPresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRichPresenceRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientRichPresenceRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClientRichPresenceRequest) GetSteamidRequest() []uint64 {
	if x != nil {
		return x.SteamidRequest
	}
	return nil
}

type CMsgClientRichPresenceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichPresence []*CMsgClientRichPresenceInfo_RichPresence `protobuf:"bytes,1,rep,name=rich_presence,json=richPresence" json:"rich_presence,omitempty"`
}

func (x *CMsgClientRichPresenceInfo) Reset() {
	*x = CMsgClientRichPresenceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRichPresenceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRichPresenceInfo) ProtoMessage() {}

func (x *CMsgClientRichPresenceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRichPresenceInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientRichPresenceInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgClientRichPresenceInfo) GetRichPresence() []*CMsgClientRichPresenceInfo_RichPresence {
	if x != nil {
		return x.RichPresence
	}
	return nil
}

type CMsgClientCheckFileSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *CMsgClientCheckFileSignature) Reset() {
	*x = CMsgClientCheckFileSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientCheckFileSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCheckFileSignature) ProtoMessage() {}

func (x *CMsgClientCheckFileSignature) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCheckFileSignature.ProtoReflect.Descriptor instead.
func (*CMsgClientCheckFileSignature) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientCheckFileSignature) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type CMsgClientCheckFileSignatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId                      *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Pid                        *uint32 `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	Eresult                    *uint32 `protobuf:"varint,3,opt,name=eresult" json:"eresult,omitempty"`
	Filename                   *string `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	Esignatureresult           *uint32 `protobuf:"varint,5,opt,name=esignatureresult" json:"esignatureresult,omitempty"`
	ShaFile                    []byte  `protobuf:"bytes,6,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	Signatureheader            []byte  `protobuf:"bytes,7,opt,name=signatureheader" json:"signatureheader,omitempty"`
	Filesize                   *uint32 `protobuf:"varint,8,opt,name=filesize" json:"filesize,omitempty"`
	Getlasterror               *uint32 `protobuf:"varint,9,opt,name=getlasterror" json:"getlasterror,omitempty"`
	Evalvesignaturecheckdetail *uint32 `protobuf:"varint,10,opt,name=evalvesignaturecheckdetail" json:"evalvesignaturecheckdetail,omitempty"`
}

func (x *CMsgClientCheckFileSignatureResponse) Reset() {
	*x = CMsgClientCheckFileSignatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientCheckFileSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCheckFileSignatureResponse) ProtoMessage() {}

func (x *CMsgClientCheckFileSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCheckFileSignatureResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientCheckFileSignatureResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientCheckFileSignatureResponse) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientCheckFileSignatureResponse) GetPid() uint32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *CMsgClientCheckFileSignatureResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgClientCheckFileSignatureResponse) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgClientCheckFileSignatureResponse) GetEsignatureresult() uint32 {
	if x != nil && x.Esignatureresult != nil {
		return *x.Esignatureresult
	}
	return 0
}

func (x *CMsgClientCheckFileSignatureResponse) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientCheckFileSignatureResponse) GetSignatureheader() []byte {
	if x != nil {
		return x.Signatureheader
	}
	return nil
}

func (x *CMsgClientCheckFileSignatureResponse) GetFilesize() uint32 {
	if x != nil && x.Filesize != nil {
		return *x.Filesize
	}
	return 0
}

func (x *CMsgClientCheckFileSignatureResponse) GetGetlasterror() uint32 {
	if x != nil && x.Getlasterror != nil {
		return *x.Getlasterror
	}
	return 0
}

func (x *CMsgClientCheckFileSignatureResponse) GetEvalvesignaturecheckdetail() uint32 {
	if x != nil && x.Evalvesignaturecheckdetail != nil {
		return *x.Evalvesignaturecheckdetail
	}
	return 0
}

type CMsgClientReadMachineAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename  *string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Offset    *uint32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Cubtoread *uint32 `protobuf:"varint,3,opt,name=cubtoread" json:"cubtoread,omitempty"`
}

func (x *CMsgClientReadMachineAuth) Reset() {
	*x = CMsgClientReadMachineAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientReadMachineAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientReadMachineAuth) ProtoMessage() {}

func (x *CMsgClientReadMachineAuth) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientReadMachineAuth.ProtoReflect.Descriptor instead.
func (*CMsgClientReadMachineAuth) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgClientReadMachineAuth) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgClientReadMachineAuth) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *CMsgClientReadMachineAuth) GetCubtoread() uint32 {
	if x != nil && x.Cubtoread != nil {
		return *x.Cubtoread
	}
	return 0
}

type CMsgClientReadMachineAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename       *string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Eresult        *uint32 `protobuf:"varint,2,opt,name=eresult" json:"eresult,omitempty"`
	Filesize       *uint32 `protobuf:"varint,3,opt,name=filesize" json:"filesize,omitempty"`
	ShaFile        []byte  `protobuf:"bytes,4,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	Getlasterror   *uint32 `protobuf:"varint,5,opt,name=getlasterror" json:"getlasterror,omitempty"`
	Offset         *uint32 `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	Cubread        *uint32 `protobuf:"varint,7,opt,name=cubread" json:"cubread,omitempty"`
	BytesRead      []byte  `protobuf:"bytes,8,opt,name=bytes_read,json=bytesRead" json:"bytes_read,omitempty"`
	FilenameSentry *string `protobuf:"bytes,9,opt,name=filename_sentry,json=filenameSentry" json:"filename_sentry,omitempty"`
}

func (x *CMsgClientReadMachineAuthResponse) Reset() {
	*x = CMsgClientReadMachineAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientReadMachineAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientReadMachineAuthResponse) ProtoMessage() {}

func (x *CMsgClientReadMachineAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientReadMachineAuthResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientReadMachineAuthResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgClientReadMachineAuthResponse) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgClientReadMachineAuthResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgClientReadMachineAuthResponse) GetFilesize() uint32 {
	if x != nil && x.Filesize != nil {
		return *x.Filesize
	}
	return 0
}

func (x *CMsgClientReadMachineAuthResponse) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientReadMachineAuthResponse) GetGetlasterror() uint32 {
	if x != nil && x.Getlasterror != nil {
		return *x.Getlasterror
	}
	return 0
}

func (x *CMsgClientReadMachineAuthResponse) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *CMsgClientReadMachineAuthResponse) GetCubread() uint32 {
	if x != nil && x.Cubread != nil {
		return *x.Cubread
	}
	return 0
}

func (x *CMsgClientReadMachineAuthResponse) GetBytesRead() []byte {
	if x != nil {
		return x.BytesRead
	}
	return nil
}

func (x *CMsgClientReadMachineAuthResponse) GetFilenameSentry() string {
	if x != nil && x.FilenameSentry != nil {
		return *x.FilenameSentry
	}
	return ""
}

type CMsgClientUpdateMachineAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename        *string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Offset          *uint32 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Cubtowrite      *uint32 `protobuf:"varint,3,opt,name=cubtowrite" json:"cubtowrite,omitempty"`
	Bytes           []byte  `protobuf:"bytes,4,opt,name=bytes" json:"bytes,omitempty"`
	OtpType         *uint32 `protobuf:"varint,5,opt,name=otp_type,json=otpType" json:"otp_type,omitempty"`
	OtpIdentifier   *string `protobuf:"bytes,6,opt,name=otp_identifier,json=otpIdentifier" json:"otp_identifier,omitempty"`
	OtpSharedsecret []byte  `protobuf:"bytes,7,opt,name=otp_sharedsecret,json=otpSharedsecret" json:"otp_sharedsecret,omitempty"`
	OtpTimedrift    *uint32 `protobuf:"varint,8,opt,name=otp_timedrift,json=otpTimedrift" json:"otp_timedrift,omitempty"`
}

func (x *CMsgClientUpdateMachineAuth) Reset() {
	*x = CMsgClientUpdateMachineAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUpdateMachineAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUpdateMachineAuth) ProtoMessage() {}

func (x *CMsgClientUpdateMachineAuth) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUpdateMachineAuth.ProtoReflect.Descriptor instead.
func (*CMsgClientUpdateMachineAuth) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgClientUpdateMachineAuth) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgClientUpdateMachineAuth) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuth) GetCubtowrite() uint32 {
	if x != nil && x.Cubtowrite != nil {
		return *x.Cubtowrite
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuth) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *CMsgClientUpdateMachineAuth) GetOtpType() uint32 {
	if x != nil && x.OtpType != nil {
		return *x.OtpType
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuth) GetOtpIdentifier() string {
	if x != nil && x.OtpIdentifier != nil {
		return *x.OtpIdentifier
	}
	return ""
}

func (x *CMsgClientUpdateMachineAuth) GetOtpSharedsecret() []byte {
	if x != nil {
		return x.OtpSharedsecret
	}
	return nil
}

func (x *CMsgClientUpdateMachineAuth) GetOtpTimedrift() uint32 {
	if x != nil && x.OtpTimedrift != nil {
		return *x.OtpTimedrift
	}
	return 0
}

type CMsgClientUpdateMachineAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename      *string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Eresult       *uint32 `protobuf:"varint,2,opt,name=eresult" json:"eresult,omitempty"`
	Filesize      *uint32 `protobuf:"varint,3,opt,name=filesize" json:"filesize,omitempty"`
	ShaFile       []byte  `protobuf:"bytes,4,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	Getlasterror  *uint32 `protobuf:"varint,5,opt,name=getlasterror" json:"getlasterror,omitempty"`
	Offset        *uint32 `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	Cubwrote      *uint32 `protobuf:"varint,7,opt,name=cubwrote" json:"cubwrote,omitempty"`
	OtpType       *int32  `protobuf:"varint,8,opt,name=otp_type,json=otpType" json:"otp_type,omitempty"`
	OtpValue      *uint32 `protobuf:"varint,9,opt,name=otp_value,json=otpValue" json:"otp_value,omitempty"`
	OtpIdentifier *string `protobuf:"bytes,10,opt,name=otp_identifier,json=otpIdentifier" json:"otp_identifier,omitempty"`
}

func (x *CMsgClientUpdateMachineAuthResponse) Reset() {
	*x = CMsgClientUpdateMachineAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUpdateMachineAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUpdateMachineAuthResponse) ProtoMessage() {}

func (x *CMsgClientUpdateMachineAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUpdateMachineAuthResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUpdateMachineAuthResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgClientUpdateMachineAuthResponse) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgClientUpdateMachineAuthResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuthResponse) GetFilesize() uint32 {
	if x != nil && x.Filesize != nil {
		return *x.Filesize
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuthResponse) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUpdateMachineAuthResponse) GetGetlasterror() uint32 {
	if x != nil && x.Getlasterror != nil {
		return *x.Getlasterror
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuthResponse) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuthResponse) GetCubwrote() uint32 {
	if x != nil && x.Cubwrote != nil {
		return *x.Cubwrote
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuthResponse) GetOtpType() int32 {
	if x != nil && x.OtpType != nil {
		return *x.OtpType
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuthResponse) GetOtpValue() uint32 {
	if x != nil && x.OtpValue != nil {
		return *x.OtpValue
	}
	return 0
}

func (x *CMsgClientUpdateMachineAuthResponse) GetOtpIdentifier() string {
	if x != nil && x.OtpIdentifier != nil {
		return *x.OtpIdentifier
	}
	return ""
}

type CMsgClientRegisterKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (x *CMsgClientRegisterKey) Reset() {
	*x = CMsgClientRegisterKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRegisterKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRegisterKey) ProtoMessage() {}

func (x *CMsgClientRegisterKey) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRegisterKey.ProtoReflect.Descriptor instead.
func (*CMsgClientRegisterKey) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgClientRegisterKey) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

type CMsgClientPurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult               *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	PurchaseResultDetails *int32 `protobuf:"varint,2,opt,name=purchase_result_details,json=purchaseResultDetails" json:"purchase_result_details,omitempty"`
	PurchaseReceiptInfo   []byte `protobuf:"bytes,3,opt,name=purchase_receipt_info,json=purchaseReceiptInfo" json:"purchase_receipt_info,omitempty"`
}

// Default values for CMsgClientPurchaseResponse fields.
const (
	Default_CMsgClientPurchaseResponse_Eresult = int32(2)
)

func (x *CMsgClientPurchaseResponse) Reset() {
	*x = CMsgClientPurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPurchaseResponse) ProtoMessage() {}

func (x *CMsgClientPurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPurchaseResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientPurchaseResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientPurchaseResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientPurchaseResponse_Eresult
}

func (x *CMsgClientPurchaseResponse) GetPurchaseResultDetails() int32 {
	if x != nil && x.PurchaseResultDetails != nil {
		return *x.PurchaseResultDetails
	}
	return 0
}

func (x *CMsgClientPurchaseResponse) GetPurchaseReceiptInfo() []byte {
	if x != nil {
		return x.PurchaseReceiptInfo
	}
	return nil
}

type CMsgClientActivateOEMLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiosManufacturer      *string `protobuf:"bytes,1,opt,name=bios_manufacturer,json=biosManufacturer" json:"bios_manufacturer,omitempty"`
	BiosSerialnumber      *string `protobuf:"bytes,2,opt,name=bios_serialnumber,json=biosSerialnumber" json:"bios_serialnumber,omitempty"`
	LicenseFile           []byte  `protobuf:"bytes,3,opt,name=license_file,json=licenseFile" json:"license_file,omitempty"`
	MainboardManufacturer *string `protobuf:"bytes,4,opt,name=mainboard_manufacturer,json=mainboardManufacturer" json:"mainboard_manufacturer,omitempty"`
	MainboardProduct      *string `protobuf:"bytes,5,opt,name=mainboard_product,json=mainboardProduct" json:"mainboard_product,omitempty"`
	MainboardSerialnumber *string `protobuf:"bytes,6,opt,name=mainboard_serialnumber,json=mainboardSerialnumber" json:"mainboard_serialnumber,omitempty"`
}

func (x *CMsgClientActivateOEMLicense) Reset() {
	*x = CMsgClientActivateOEMLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientActivateOEMLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientActivateOEMLicense) ProtoMessage() {}

func (x *CMsgClientActivateOEMLicense) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientActivateOEMLicense.ProtoReflect.Descriptor instead.
func (*CMsgClientActivateOEMLicense) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgClientActivateOEMLicense) GetBiosManufacturer() string {
	if x != nil && x.BiosManufacturer != nil {
		return *x.BiosManufacturer
	}
	return ""
}

func (x *CMsgClientActivateOEMLicense) GetBiosSerialnumber() string {
	if x != nil && x.BiosSerialnumber != nil {
		return *x.BiosSerialnumber
	}
	return ""
}

func (x *CMsgClientActivateOEMLicense) GetLicenseFile() []byte {
	if x != nil {
		return x.LicenseFile
	}
	return nil
}

func (x *CMsgClientActivateOEMLicense) GetMainboardManufacturer() string {
	if x != nil && x.MainboardManufacturer != nil {
		return *x.MainboardManufacturer
	}
	return ""
}

func (x *CMsgClientActivateOEMLicense) GetMainboardProduct() string {
	if x != nil && x.MainboardProduct != nil {
		return *x.MainboardProduct
	}
	return ""
}

func (x *CMsgClientActivateOEMLicense) GetMainboardSerialnumber() string {
	if x != nil && x.MainboardSerialnumber != nil {
		return *x.MainboardSerialnumber
	}
	return ""
}

type CMsgClientRegisterOEMMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OemRegisterFile []byte `protobuf:"bytes,1,opt,name=oem_register_file,json=oemRegisterFile" json:"oem_register_file,omitempty"`
}

func (x *CMsgClientRegisterOEMMachine) Reset() {
	*x = CMsgClientRegisterOEMMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRegisterOEMMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRegisterOEMMachine) ProtoMessage() {}

func (x *CMsgClientRegisterOEMMachine) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRegisterOEMMachine.ProtoReflect.Descriptor instead.
func (*CMsgClientRegisterOEMMachine) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgClientRegisterOEMMachine) GetOemRegisterFile() []byte {
	if x != nil {
		return x.OemRegisterFile
	}
	return nil
}

type CMsgClientRegisterOEMMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *uint32 `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
}

func (x *CMsgClientRegisterOEMMachineResponse) Reset() {
	*x = CMsgClientRegisterOEMMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRegisterOEMMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRegisterOEMMachineResponse) ProtoMessage() {}

func (x *CMsgClientRegisterOEMMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRegisterOEMMachineResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientRegisterOEMMachineResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgClientRegisterOEMMachineResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

type CMsgClientPurchaseWithMachineID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId   *uint32 `protobuf:"varint,1,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	MachineInfo []byte  `protobuf:"bytes,2,opt,name=machine_info,json=machineInfo" json:"machine_info,omitempty"`
}

func (x *CMsgClientPurchaseWithMachineID) Reset() {
	*x = CMsgClientPurchaseWithMachineID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPurchaseWithMachineID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPurchaseWithMachineID) ProtoMessage() {}

func (x *CMsgClientPurchaseWithMachineID) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPurchaseWithMachineID.ProtoReflect.Descriptor instead.
func (*CMsgClientPurchaseWithMachineID) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgClientPurchaseWithMachineID) GetPackageId() uint32 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *CMsgClientPurchaseWithMachineID) GetMachineInfo() []byte {
	if x != nil {
		return x.MachineInfo
	}
	return nil
}

type CMsgTrading_InitiateTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeRequestId *uint32 `protobuf:"varint,1,opt,name=trade_request_id,json=tradeRequestId" json:"trade_request_id,omitempty"`
	OtherSteamid   *uint64 `protobuf:"varint,2,opt,name=other_steamid,json=otherSteamid" json:"other_steamid,omitempty"`
	OtherName      *string `protobuf:"bytes,3,opt,name=other_name,json=otherName" json:"other_name,omitempty"`
}

func (x *CMsgTrading_InitiateTradeRequest) Reset() {
	*x = CMsgTrading_InitiateTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTrading_InitiateTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTrading_InitiateTradeRequest) ProtoMessage() {}

func (x *CMsgTrading_InitiateTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTrading_InitiateTradeRequest.ProtoReflect.Descriptor instead.
func (*CMsgTrading_InitiateTradeRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgTrading_InitiateTradeRequest) GetTradeRequestId() uint32 {
	if x != nil && x.TradeRequestId != nil {
		return *x.TradeRequestId
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeRequest) GetOtherSteamid() uint64 {
	if x != nil && x.OtherSteamid != nil {
		return *x.OtherSteamid
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeRequest) GetOtherName() string {
	if x != nil && x.OtherName != nil {
		return *x.OtherName
	}
	return ""
}

type CMsgTrading_InitiateTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response                          *uint32 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
	TradeRequestId                    *uint32 `protobuf:"varint,2,opt,name=trade_request_id,json=tradeRequestId" json:"trade_request_id,omitempty"`
	OtherSteamid                      *uint64 `protobuf:"varint,3,opt,name=other_steamid,json=otherSteamid" json:"other_steamid,omitempty"`
	SteamguardRequiredDays            *uint32 `protobuf:"varint,4,opt,name=steamguard_required_days,json=steamguardRequiredDays" json:"steamguard_required_days,omitempty"`
	NewDeviceCooldownDays             *uint32 `protobuf:"varint,5,opt,name=new_device_cooldown_days,json=newDeviceCooldownDays" json:"new_device_cooldown_days,omitempty"`
	DefaultPasswordResetProbationDays *uint32 `protobuf:"varint,6,opt,name=default_password_reset_probation_days,json=defaultPasswordResetProbationDays" json:"default_password_reset_probation_days,omitempty"`
	PasswordResetProbationDays        *uint32 `protobuf:"varint,7,opt,name=password_reset_probation_days,json=passwordResetProbationDays" json:"password_reset_probation_days,omitempty"`
	DefaultEmailChangeProbationDays   *uint32 `protobuf:"varint,8,opt,name=default_email_change_probation_days,json=defaultEmailChangeProbationDays" json:"default_email_change_probation_days,omitempty"`
	EmailChangeProbationDays          *uint32 `protobuf:"varint,9,opt,name=email_change_probation_days,json=emailChangeProbationDays" json:"email_change_probation_days,omitempty"`
}

func (x *CMsgTrading_InitiateTradeResponse) Reset() {
	*x = CMsgTrading_InitiateTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTrading_InitiateTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTrading_InitiateTradeResponse) ProtoMessage() {}

func (x *CMsgTrading_InitiateTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTrading_InitiateTradeResponse.ProtoReflect.Descriptor instead.
func (*CMsgTrading_InitiateTradeResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgTrading_InitiateTradeResponse) GetResponse() uint32 {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetTradeRequestId() uint32 {
	if x != nil && x.TradeRequestId != nil {
		return *x.TradeRequestId
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetOtherSteamid() uint64 {
	if x != nil && x.OtherSteamid != nil {
		return *x.OtherSteamid
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetSteamguardRequiredDays() uint32 {
	if x != nil && x.SteamguardRequiredDays != nil {
		return *x.SteamguardRequiredDays
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetNewDeviceCooldownDays() uint32 {
	if x != nil && x.NewDeviceCooldownDays != nil {
		return *x.NewDeviceCooldownDays
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetDefaultPasswordResetProbationDays() uint32 {
	if x != nil && x.DefaultPasswordResetProbationDays != nil {
		return *x.DefaultPasswordResetProbationDays
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetPasswordResetProbationDays() uint32 {
	if x != nil && x.PasswordResetProbationDays != nil {
		return *x.PasswordResetProbationDays
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetDefaultEmailChangeProbationDays() uint32 {
	if x != nil && x.DefaultEmailChangeProbationDays != nil {
		return *x.DefaultEmailChangeProbationDays
	}
	return 0
}

func (x *CMsgTrading_InitiateTradeResponse) GetEmailChangeProbationDays() uint32 {
	if x != nil && x.EmailChangeProbationDays != nil {
		return *x.EmailChangeProbationDays
	}
	return 0
}

type CMsgTrading_CancelTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherSteamid *uint64 `protobuf:"varint,1,opt,name=other_steamid,json=otherSteamid" json:"other_steamid,omitempty"`
}

func (x *CMsgTrading_CancelTradeRequest) Reset() {
	*x = CMsgTrading_CancelTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTrading_CancelTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTrading_CancelTradeRequest) ProtoMessage() {}

func (x *CMsgTrading_CancelTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTrading_CancelTradeRequest.ProtoReflect.Descriptor instead.
func (*CMsgTrading_CancelTradeRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgTrading_CancelTradeRequest) GetOtherSteamid() uint64 {
	if x != nil && x.OtherSteamid != nil {
		return *x.OtherSteamid
	}
	return 0
}

type CMsgTrading_StartSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtherSteamid *uint64 `protobuf:"varint,1,opt,name=other_steamid,json=otherSteamid" json:"other_steamid,omitempty"`
}

func (x *CMsgTrading_StartSession) Reset() {
	*x = CMsgTrading_StartSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTrading_StartSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTrading_StartSession) ProtoMessage() {}

func (x *CMsgTrading_StartSession) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTrading_StartSession.ProtoReflect.Descriptor instead.
func (*CMsgTrading_StartSession) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgTrading_StartSession) GetOtherSteamid() uint64 {
	if x != nil && x.OtherSteamid != nil {
		return *x.OtherSteamid
	}
	return 0
}

type CMsgClientGetDepotDecryptionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DepotId *uint32 `protobuf:"varint,1,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	AppId   *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *CMsgClientGetDepotDecryptionKey) Reset() {
	*x = CMsgClientGetDepotDecryptionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetDepotDecryptionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetDepotDecryptionKey) ProtoMessage() {}

func (x *CMsgClientGetDepotDecryptionKey) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetDepotDecryptionKey.ProtoReflect.Descriptor instead.
func (*CMsgClientGetDepotDecryptionKey) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgClientGetDepotDecryptionKey) GetDepotId() uint32 {
	if x != nil && x.DepotId != nil {
		return *x.DepotId
	}
	return 0
}

func (x *CMsgClientGetDepotDecryptionKey) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type CMsgClientGetDepotDecryptionKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult            *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	DepotId            *uint32 `protobuf:"varint,2,opt,name=depot_id,json=depotId" json:"depot_id,omitempty"`
	DepotEncryptionKey []byte  `protobuf:"bytes,3,opt,name=depot_encryption_key,json=depotEncryptionKey" json:"depot_encryption_key,omitempty"`
}

// Default values for CMsgClientGetDepotDecryptionKeyResponse fields.
const (
	Default_CMsgClientGetDepotDecryptionKeyResponse_Eresult = int32(2)
)

func (x *CMsgClientGetDepotDecryptionKeyResponse) Reset() {
	*x = CMsgClientGetDepotDecryptionKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetDepotDecryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetDepotDecryptionKeyResponse) ProtoMessage() {}

func (x *CMsgClientGetDepotDecryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetDepotDecryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientGetDepotDecryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgClientGetDepotDecryptionKeyResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientGetDepotDecryptionKeyResponse_Eresult
}

func (x *CMsgClientGetDepotDecryptionKeyResponse) GetDepotId() uint32 {
	if x != nil && x.DepotId != nil {
		return *x.DepotId
	}
	return 0
}

func (x *CMsgClientGetDepotDecryptionKeyResponse) GetDepotEncryptionKey() []byte {
	if x != nil {
		return x.DepotEncryptionKey
	}
	return nil
}

type CMsgClientCheckAppBetaPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Betapassword *string `protobuf:"bytes,2,opt,name=betapassword" json:"betapassword,omitempty"`
	Language     *int32  `protobuf:"varint,3,opt,name=language" json:"language,omitempty"`
}

func (x *CMsgClientCheckAppBetaPassword) Reset() {
	*x = CMsgClientCheckAppBetaPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientCheckAppBetaPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCheckAppBetaPassword) ProtoMessage() {}

func (x *CMsgClientCheckAppBetaPassword) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCheckAppBetaPassword.ProtoReflect.Descriptor instead.
func (*CMsgClientCheckAppBetaPassword) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgClientCheckAppBetaPassword) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientCheckAppBetaPassword) GetBetapassword() string {
	if x != nil && x.Betapassword != nil {
		return *x.Betapassword
	}
	return ""
}

func (x *CMsgClientCheckAppBetaPassword) GetLanguage() int32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

type CMsgClientCheckAppBetaPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult       *int32                                                 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Betapasswords []*CMsgClientCheckAppBetaPasswordResponse_BetaPassword `protobuf:"bytes,4,rep,name=betapasswords" json:"betapasswords,omitempty"`
}

// Default values for CMsgClientCheckAppBetaPasswordResponse fields.
const (
	Default_CMsgClientCheckAppBetaPasswordResponse_Eresult = int32(2)
)

func (x *CMsgClientCheckAppBetaPasswordResponse) Reset() {
	*x = CMsgClientCheckAppBetaPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientCheckAppBetaPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCheckAppBetaPasswordResponse) ProtoMessage() {}

func (x *CMsgClientCheckAppBetaPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCheckAppBetaPasswordResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientCheckAppBetaPasswordResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgClientCheckAppBetaPasswordResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientCheckAppBetaPasswordResponse_Eresult
}

func (x *CMsgClientCheckAppBetaPasswordResponse) GetBetapasswords() []*CMsgClientCheckAppBetaPasswordResponse_BetaPassword {
	if x != nil {
		return x.Betapasswords
	}
	return nil
}

type CMsgClientUGSGetGlobalStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gameid               *uint64 `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	HistoryDaysRequested *uint32 `protobuf:"varint,2,opt,name=history_days_requested,json=historyDaysRequested" json:"history_days_requested,omitempty"`
	TimeLastRequested    *uint32 `protobuf:"fixed32,3,opt,name=time_last_requested,json=timeLastRequested" json:"time_last_requested,omitempty"`
	FirstDayCached       *uint32 `protobuf:"varint,4,opt,name=first_day_cached,json=firstDayCached" json:"first_day_cached,omitempty"`
	DaysCached           *uint32 `protobuf:"varint,5,opt,name=days_cached,json=daysCached" json:"days_cached,omitempty"`
}

func (x *CMsgClientUGSGetGlobalStats) Reset() {
	*x = CMsgClientUGSGetGlobalStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUGSGetGlobalStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUGSGetGlobalStats) ProtoMessage() {}

func (x *CMsgClientUGSGetGlobalStats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUGSGetGlobalStats.ProtoReflect.Descriptor instead.
func (*CMsgClientUGSGetGlobalStats) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgClientUGSGetGlobalStats) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStats) GetHistoryDaysRequested() uint32 {
	if x != nil && x.HistoryDaysRequested != nil {
		return *x.HistoryDaysRequested
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStats) GetTimeLastRequested() uint32 {
	if x != nil && x.TimeLastRequested != nil {
		return *x.TimeLastRequested
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStats) GetFirstDayCached() uint32 {
	if x != nil && x.FirstDayCached != nil {
		return *x.FirstDayCached
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStats) GetDaysCached() uint32 {
	if x != nil && x.DaysCached != nil {
		return *x.DaysCached
	}
	return 0
}

type CMsgClientUGSGetGlobalStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult    *int32                                     `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Timestamp  *uint32                                    `protobuf:"fixed32,2,opt,name=timestamp" json:"timestamp,omitempty"`
	DayCurrent *int32                                     `protobuf:"varint,3,opt,name=day_current,json=dayCurrent" json:"day_current,omitempty"`
	Days       []*CMsgClientUGSGetGlobalStatsResponse_Day `protobuf:"bytes,4,rep,name=days" json:"days,omitempty"`
}

// Default values for CMsgClientUGSGetGlobalStatsResponse fields.
const (
	Default_CMsgClientUGSGetGlobalStatsResponse_Eresult = int32(2)
)

func (x *CMsgClientUGSGetGlobalStatsResponse) Reset() {
	*x = CMsgClientUGSGetGlobalStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUGSGetGlobalStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUGSGetGlobalStatsResponse) ProtoMessage() {}

func (x *CMsgClientUGSGetGlobalStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUGSGetGlobalStatsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUGSGetGlobalStatsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgClientUGSGetGlobalStatsResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUGSGetGlobalStatsResponse_Eresult
}

func (x *CMsgClientUGSGetGlobalStatsResponse) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStatsResponse) GetDayCurrent() int32 {
	if x != nil && x.DayCurrent != nil {
		return *x.DayCurrent
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStatsResponse) GetDays() []*CMsgClientUGSGetGlobalStatsResponse_Day {
	if x != nil {
		return x.Days
	}
	return nil
}

type CMsgClientRedeemGuestPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuestPassId *uint64 `protobuf:"fixed64,1,opt,name=guest_pass_id,json=guestPassId" json:"guest_pass_id,omitempty"`
}

func (x *CMsgClientRedeemGuestPass) Reset() {
	*x = CMsgClientRedeemGuestPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRedeemGuestPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRedeemGuestPass) ProtoMessage() {}

func (x *CMsgClientRedeemGuestPass) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRedeemGuestPass.ProtoReflect.Descriptor instead.
func (*CMsgClientRedeemGuestPass) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgClientRedeemGuestPass) GetGuestPassId() uint64 {
	if x != nil && x.GuestPassId != nil {
		return *x.GuestPassId
	}
	return 0
}

type CMsgClientRedeemGuestPassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult      *uint32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	PackageId    *uint32 `protobuf:"varint,2,opt,name=package_id,json=packageId" json:"package_id,omitempty"`
	MustOwnAppid *uint32 `protobuf:"varint,3,opt,name=must_own_appid,json=mustOwnAppid" json:"must_own_appid,omitempty"`
}

// Default values for CMsgClientRedeemGuestPassResponse fields.
const (
	Default_CMsgClientRedeemGuestPassResponse_Eresult = uint32(2)
)

func (x *CMsgClientRedeemGuestPassResponse) Reset() {
	*x = CMsgClientRedeemGuestPassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRedeemGuestPassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRedeemGuestPassResponse) ProtoMessage() {}

func (x *CMsgClientRedeemGuestPassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRedeemGuestPassResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientRedeemGuestPassResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgClientRedeemGuestPassResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientRedeemGuestPassResponse_Eresult
}

func (x *CMsgClientRedeemGuestPassResponse) GetPackageId() uint32 {
	if x != nil && x.PackageId != nil {
		return *x.PackageId
	}
	return 0
}

func (x *CMsgClientRedeemGuestPassResponse) GetMustOwnAppid() uint32 {
	if x != nil && x.MustOwnAppid != nil {
		return *x.MustOwnAppid
	}
	return 0
}

type CMsgClientGetClanActivityCounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamidClans []uint64 `protobuf:"varint,1,rep,name=steamid_clans,json=steamidClans" json:"steamid_clans,omitempty"`
}

func (x *CMsgClientGetClanActivityCounts) Reset() {
	*x = CMsgClientGetClanActivityCounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetClanActivityCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClanActivityCounts) ProtoMessage() {}

func (x *CMsgClientGetClanActivityCounts) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClanActivityCounts.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClanActivityCounts) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgClientGetClanActivityCounts) GetSteamidClans() []uint64 {
	if x != nil {
		return x.SteamidClans
	}
	return nil
}

type CMsgClientGetClanActivityCountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *uint32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
}

// Default values for CMsgClientGetClanActivityCountsResponse fields.
const (
	Default_CMsgClientGetClanActivityCountsResponse_Eresult = uint32(2)
)

func (x *CMsgClientGetClanActivityCountsResponse) Reset() {
	*x = CMsgClientGetClanActivityCountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetClanActivityCountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClanActivityCountsResponse) ProtoMessage() {}

func (x *CMsgClientGetClanActivityCountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClanActivityCountsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClanActivityCountsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgClientGetClanActivityCountsResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientGetClanActivityCountsResponse_Eresult
}

type CMsgClientOGSReportString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accumulated *bool   `protobuf:"varint,1,opt,name=accumulated" json:"accumulated,omitempty"`
	Sessionid   *uint64 `protobuf:"varint,2,opt,name=sessionid" json:"sessionid,omitempty"`
	Severity    *int32  `protobuf:"varint,3,opt,name=severity" json:"severity,omitempty"`
	Formatter   *string `protobuf:"bytes,4,opt,name=formatter" json:"formatter,omitempty"`
	Varargs     []byte  `protobuf:"bytes,5,opt,name=varargs" json:"varargs,omitempty"`
}

func (x *CMsgClientOGSReportString) Reset() {
	*x = CMsgClientOGSReportString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientOGSReportString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientOGSReportString) ProtoMessage() {}

func (x *CMsgClientOGSReportString) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientOGSReportString.ProtoReflect.Descriptor instead.
func (*CMsgClientOGSReportString) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgClientOGSReportString) GetAccumulated() bool {
	if x != nil && x.Accumulated != nil {
		return *x.Accumulated
	}
	return false
}

func (x *CMsgClientOGSReportString) GetSessionid() uint64 {
	if x != nil && x.Sessionid != nil {
		return *x.Sessionid
	}
	return 0
}

func (x *CMsgClientOGSReportString) GetSeverity() int32 {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return 0
}

func (x *CMsgClientOGSReportString) GetFormatter() string {
	if x != nil && x.Formatter != nil {
		return *x.Formatter
	}
	return ""
}

func (x *CMsgClientOGSReportString) GetVarargs() []byte {
	if x != nil {
		return x.Varargs
	}
	return nil
}

type CMsgClientOGSReportBug struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessionid  *uint64 `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	Bugtext    *string `protobuf:"bytes,2,opt,name=bugtext" json:"bugtext,omitempty"`
	Screenshot []byte  `protobuf:"bytes,3,opt,name=screenshot" json:"screenshot,omitempty"`
}

func (x *CMsgClientOGSReportBug) Reset() {
	*x = CMsgClientOGSReportBug{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientOGSReportBug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientOGSReportBug) ProtoMessage() {}

func (x *CMsgClientOGSReportBug) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientOGSReportBug.ProtoReflect.Descriptor instead.
func (*CMsgClientOGSReportBug) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgClientOGSReportBug) GetSessionid() uint64 {
	if x != nil && x.Sessionid != nil {
		return *x.Sessionid
	}
	return 0
}

func (x *CMsgClientOGSReportBug) GetBugtext() string {
	if x != nil && x.Bugtext != nil {
		return *x.Bugtext
	}
	return ""
}

func (x *CMsgClientOGSReportBug) GetScreenshot() []byte {
	if x != nil {
		return x.Screenshot
	}
	return nil
}

type CMsgClientSentLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientSentLogs) Reset() {
	*x = CMsgClientSentLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientSentLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSentLogs) ProtoMessage() {}

func (x *CMsgClientSentLogs) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSentLogs.ProtoReflect.Descriptor instead.
func (*CMsgClientSentLogs) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{32}
}

type CMsgGCClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid   *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Msgtype *uint32 `protobuf:"varint,2,opt,name=msgtype" json:"msgtype,omitempty"`
	Payload []byte  `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	Steamid *uint64 `protobuf:"fixed64,4,opt,name=steamid" json:"steamid,omitempty"`
	Gcname  *string `protobuf:"bytes,5,opt,name=gcname" json:"gcname,omitempty"`
	Ip      *uint32 `protobuf:"varint,6,opt,name=ip" json:"ip,omitempty"`
}

func (x *CMsgGCClient) Reset() {
	*x = CMsgGCClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGCClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGCClient) ProtoMessage() {}

func (x *CMsgGCClient) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGCClient.ProtoReflect.Descriptor instead.
func (*CMsgGCClient) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgGCClient) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgGCClient) GetMsgtype() uint32 {
	if x != nil && x.Msgtype != nil {
		return *x.Msgtype
	}
	return 0
}

func (x *CMsgGCClient) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CMsgGCClient) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgGCClient) GetGcname() string {
	if x != nil && x.Gcname != nil {
		return *x.Gcname
	}
	return ""
}

func (x *CMsgGCClient) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

type CMsgClientRequestFreeLicense struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids []uint32 `protobuf:"varint,2,rep,name=appids" json:"appids,omitempty"`
}

func (x *CMsgClientRequestFreeLicense) Reset() {
	*x = CMsgClientRequestFreeLicense{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRequestFreeLicense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestFreeLicense) ProtoMessage() {}

func (x *CMsgClientRequestFreeLicense) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestFreeLicense.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestFreeLicense) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgClientRequestFreeLicense) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

type CMsgClientRequestFreeLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult           *uint32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	GrantedPackageids []uint32 `protobuf:"varint,2,rep,name=granted_packageids,json=grantedPackageids" json:"granted_packageids,omitempty"`
	GrantedAppids     []uint32 `protobuf:"varint,3,rep,name=granted_appids,json=grantedAppids" json:"granted_appids,omitempty"`
}

// Default values for CMsgClientRequestFreeLicenseResponse fields.
const (
	Default_CMsgClientRequestFreeLicenseResponse_Eresult = uint32(2)
)

func (x *CMsgClientRequestFreeLicenseResponse) Reset() {
	*x = CMsgClientRequestFreeLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRequestFreeLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestFreeLicenseResponse) ProtoMessage() {}

func (x *CMsgClientRequestFreeLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestFreeLicenseResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestFreeLicenseResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgClientRequestFreeLicenseResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientRequestFreeLicenseResponse_Eresult
}

func (x *CMsgClientRequestFreeLicenseResponse) GetGrantedPackageids() []uint32 {
	if x != nil {
		return x.GrantedPackageids
	}
	return nil
}

func (x *CMsgClientRequestFreeLicenseResponse) GetGrantedAppids() []uint32 {
	if x != nil {
		return x.GrantedAppids
	}
	return nil
}

type CMsgDRMDownloadRequestWithCrashData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadFlags      *uint32 `protobuf:"varint,1,opt,name=download_flags,json=downloadFlags" json:"download_flags,omitempty"`
	DownloadTypesKnown *uint32 `protobuf:"varint,2,opt,name=download_types_known,json=downloadTypesKnown" json:"download_types_known,omitempty"`
	GuidDrm            []byte  `protobuf:"bytes,3,opt,name=guid_drm,json=guidDrm" json:"guid_drm,omitempty"`
	GuidSplit          []byte  `protobuf:"bytes,4,opt,name=guid_split,json=guidSplit" json:"guid_split,omitempty"`
	GuidMerge          []byte  `protobuf:"bytes,5,opt,name=guid_merge,json=guidMerge" json:"guid_merge,omitempty"`
	ModuleName         *string `protobuf:"bytes,6,opt,name=module_name,json=moduleName" json:"module_name,omitempty"`
	ModulePath         *string `protobuf:"bytes,7,opt,name=module_path,json=modulePath" json:"module_path,omitempty"`
	CrashData          []byte  `protobuf:"bytes,8,opt,name=crash_data,json=crashData" json:"crash_data,omitempty"`
}

func (x *CMsgDRMDownloadRequestWithCrashData) Reset() {
	*x = CMsgDRMDownloadRequestWithCrashData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDRMDownloadRequestWithCrashData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDRMDownloadRequestWithCrashData) ProtoMessage() {}

func (x *CMsgDRMDownloadRequestWithCrashData) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDRMDownloadRequestWithCrashData.ProtoReflect.Descriptor instead.
func (*CMsgDRMDownloadRequestWithCrashData) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetDownloadFlags() uint32 {
	if x != nil && x.DownloadFlags != nil {
		return *x.DownloadFlags
	}
	return 0
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetDownloadTypesKnown() uint32 {
	if x != nil && x.DownloadTypesKnown != nil {
		return *x.DownloadTypesKnown
	}
	return 0
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetGuidDrm() []byte {
	if x != nil {
		return x.GuidDrm
	}
	return nil
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetGuidSplit() []byte {
	if x != nil {
		return x.GuidSplit
	}
	return nil
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetGuidMerge() []byte {
	if x != nil {
		return x.GuidMerge
	}
	return nil
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetModuleName() string {
	if x != nil && x.ModuleName != nil {
		return *x.ModuleName
	}
	return ""
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetModulePath() string {
	if x != nil && x.ModulePath != nil {
		return *x.ModulePath
	}
	return ""
}

func (x *CMsgDRMDownloadRequestWithCrashData) GetCrashData() []byte {
	if x != nil {
		return x.CrashData
	}
	return nil
}

type CMsgDRMDownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult             *uint32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	AppId               *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	BlobDownloadType    *uint32 `protobuf:"varint,3,opt,name=blob_download_type,json=blobDownloadType" json:"blob_download_type,omitempty"`
	MergeGuid           []byte  `protobuf:"bytes,4,opt,name=merge_guid,json=mergeGuid" json:"merge_guid,omitempty"`
	DownloadFileDfsIp   *uint32 `protobuf:"varint,5,opt,name=download_file_dfs_ip,json=downloadFileDfsIp" json:"download_file_dfs_ip,omitempty"`
	DownloadFileDfsPort *uint32 `protobuf:"varint,6,opt,name=download_file_dfs_port,json=downloadFileDfsPort" json:"download_file_dfs_port,omitempty"`
	DownloadFileUrl     *string `protobuf:"bytes,7,opt,name=download_file_url,json=downloadFileUrl" json:"download_file_url,omitempty"`
	ModulePath          *string `protobuf:"bytes,8,opt,name=module_path,json=modulePath" json:"module_path,omitempty"`
}

// Default values for CMsgDRMDownloadResponse fields.
const (
	Default_CMsgDRMDownloadResponse_Eresult = uint32(2)
)

func (x *CMsgDRMDownloadResponse) Reset() {
	*x = CMsgDRMDownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDRMDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDRMDownloadResponse) ProtoMessage() {}

func (x *CMsgDRMDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDRMDownloadResponse.ProtoReflect.Descriptor instead.
func (*CMsgDRMDownloadResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgDRMDownloadResponse) GetEresult() uint32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgDRMDownloadResponse_Eresult
}

func (x *CMsgDRMDownloadResponse) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgDRMDownloadResponse) GetBlobDownloadType() uint32 {
	if x != nil && x.BlobDownloadType != nil {
		return *x.BlobDownloadType
	}
	return 0
}

func (x *CMsgDRMDownloadResponse) GetMergeGuid() []byte {
	if x != nil {
		return x.MergeGuid
	}
	return nil
}

func (x *CMsgDRMDownloadResponse) GetDownloadFileDfsIp() uint32 {
	if x != nil && x.DownloadFileDfsIp != nil {
		return *x.DownloadFileDfsIp
	}
	return 0
}

func (x *CMsgDRMDownloadResponse) GetDownloadFileDfsPort() uint32 {
	if x != nil && x.DownloadFileDfsPort != nil {
		return *x.DownloadFileDfsPort
	}
	return 0
}

func (x *CMsgDRMDownloadResponse) GetDownloadFileUrl() string {
	if x != nil && x.DownloadFileUrl != nil {
		return *x.DownloadFileUrl
	}
	return ""
}

func (x *CMsgDRMDownloadResponse) GetModulePath() string {
	if x != nil && x.ModulePath != nil {
		return *x.ModulePath
	}
	return ""
}

type CMsgDRMFinalResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EResult             *uint32 `protobuf:"varint,1,opt,name=eResult,def=2" json:"eResult,omitempty"`
	AppId               *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	BlobDownloadType    *uint32 `protobuf:"varint,3,opt,name=blob_download_type,json=blobDownloadType" json:"blob_download_type,omitempty"`
	ErrorDetail         *uint32 `protobuf:"varint,4,opt,name=error_detail,json=errorDetail" json:"error_detail,omitempty"`
	MergeGuid           []byte  `protobuf:"bytes,5,opt,name=merge_guid,json=mergeGuid" json:"merge_guid,omitempty"`
	DownloadFileDfsIp   *uint32 `protobuf:"varint,6,opt,name=download_file_dfs_ip,json=downloadFileDfsIp" json:"download_file_dfs_ip,omitempty"`
	DownloadFileDfsPort *uint32 `protobuf:"varint,7,opt,name=download_file_dfs_port,json=downloadFileDfsPort" json:"download_file_dfs_port,omitempty"`
	DownloadFileUrl     *string `protobuf:"bytes,8,opt,name=download_file_url,json=downloadFileUrl" json:"download_file_url,omitempty"`
}

// Default values for CMsgDRMFinalResult fields.
const (
	Default_CMsgDRMFinalResult_EResult = uint32(2)
)

func (x *CMsgDRMFinalResult) Reset() {
	*x = CMsgDRMFinalResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDRMFinalResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDRMFinalResult) ProtoMessage() {}

func (x *CMsgDRMFinalResult) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDRMFinalResult.ProtoReflect.Descriptor instead.
func (*CMsgDRMFinalResult) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgDRMFinalResult) GetEResult() uint32 {
	if x != nil && x.EResult != nil {
		return *x.EResult
	}
	return Default_CMsgDRMFinalResult_EResult
}

func (x *CMsgDRMFinalResult) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgDRMFinalResult) GetBlobDownloadType() uint32 {
	if x != nil && x.BlobDownloadType != nil {
		return *x.BlobDownloadType
	}
	return 0
}

func (x *CMsgDRMFinalResult) GetErrorDetail() uint32 {
	if x != nil && x.ErrorDetail != nil {
		return *x.ErrorDetail
	}
	return 0
}

func (x *CMsgDRMFinalResult) GetMergeGuid() []byte {
	if x != nil {
		return x.MergeGuid
	}
	return nil
}

func (x *CMsgDRMFinalResult) GetDownloadFileDfsIp() uint32 {
	if x != nil && x.DownloadFileDfsIp != nil {
		return *x.DownloadFileDfsIp
	}
	return 0
}

func (x *CMsgDRMFinalResult) GetDownloadFileDfsPort() uint32 {
	if x != nil && x.DownloadFileDfsPort != nil {
		return *x.DownloadFileDfsPort
	}
	return 0
}

func (x *CMsgDRMFinalResult) GetDownloadFileUrl() string {
	if x != nil && x.DownloadFileUrl != nil {
		return *x.DownloadFileUrl
	}
	return ""
}

type CMsgClientDPCheckSpecialSurvey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyId *uint32 `protobuf:"varint,1,opt,name=survey_id,json=surveyId" json:"survey_id,omitempty"`
}

func (x *CMsgClientDPCheckSpecialSurvey) Reset() {
	*x = CMsgClientDPCheckSpecialSurvey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientDPCheckSpecialSurvey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDPCheckSpecialSurvey) ProtoMessage() {}

func (x *CMsgClientDPCheckSpecialSurvey) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDPCheckSpecialSurvey.ProtoReflect.Descriptor instead.
func (*CMsgClientDPCheckSpecialSurvey) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgClientDPCheckSpecialSurvey) GetSurveyId() uint32 {
	if x != nil && x.SurveyId != nil {
		return *x.SurveyId
	}
	return 0
}

type CMsgClientDPCheckSpecialSurveyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EResult         *uint32 `protobuf:"varint,1,opt,name=eResult,def=2" json:"eResult,omitempty"`
	State           *uint32 `protobuf:"varint,2,opt,name=state" json:"state,omitempty"`
	Name            *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	CustomUrl       *string `protobuf:"bytes,4,opt,name=custom_url,json=customUrl" json:"custom_url,omitempty"`
	IncludeSoftware *bool   `protobuf:"varint,5,opt,name=include_software,json=includeSoftware" json:"include_software,omitempty"`
	Token           []byte  `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
}

// Default values for CMsgClientDPCheckSpecialSurveyResponse fields.
const (
	Default_CMsgClientDPCheckSpecialSurveyResponse_EResult = uint32(2)
)

func (x *CMsgClientDPCheckSpecialSurveyResponse) Reset() {
	*x = CMsgClientDPCheckSpecialSurveyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientDPCheckSpecialSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDPCheckSpecialSurveyResponse) ProtoMessage() {}

func (x *CMsgClientDPCheckSpecialSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDPCheckSpecialSurveyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientDPCheckSpecialSurveyResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgClientDPCheckSpecialSurveyResponse) GetEResult() uint32 {
	if x != nil && x.EResult != nil {
		return *x.EResult
	}
	return Default_CMsgClientDPCheckSpecialSurveyResponse_EResult
}

func (x *CMsgClientDPCheckSpecialSurveyResponse) GetState() uint32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *CMsgClientDPCheckSpecialSurveyResponse) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgClientDPCheckSpecialSurveyResponse) GetCustomUrl() string {
	if x != nil && x.CustomUrl != nil {
		return *x.CustomUrl
	}
	return ""
}

func (x *CMsgClientDPCheckSpecialSurveyResponse) GetIncludeSoftware() bool {
	if x != nil && x.IncludeSoftware != nil {
		return *x.IncludeSoftware
	}
	return false
}

func (x *CMsgClientDPCheckSpecialSurveyResponse) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type CMsgClientDPSendSpecialSurveyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurveyId *uint32 `protobuf:"varint,1,opt,name=survey_id,json=surveyId" json:"survey_id,omitempty"`
	Data     []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgClientDPSendSpecialSurveyResponse) Reset() {
	*x = CMsgClientDPSendSpecialSurveyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientDPSendSpecialSurveyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDPSendSpecialSurveyResponse) ProtoMessage() {}

func (x *CMsgClientDPSendSpecialSurveyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDPSendSpecialSurveyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientDPSendSpecialSurveyResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgClientDPSendSpecialSurveyResponse) GetSurveyId() uint32 {
	if x != nil && x.SurveyId != nil {
		return *x.SurveyId
	}
	return 0
}

func (x *CMsgClientDPSendSpecialSurveyResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgClientDPSendSpecialSurveyResponseReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EResult *uint32 `protobuf:"varint,1,opt,name=eResult,def=2" json:"eResult,omitempty"`
	Token   []byte  `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

// Default values for CMsgClientDPSendSpecialSurveyResponseReply fields.
const (
	Default_CMsgClientDPSendSpecialSurveyResponseReply_EResult = uint32(2)
)

func (x *CMsgClientDPSendSpecialSurveyResponseReply) Reset() {
	*x = CMsgClientDPSendSpecialSurveyResponseReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientDPSendSpecialSurveyResponseReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDPSendSpecialSurveyResponseReply) ProtoMessage() {}

func (x *CMsgClientDPSendSpecialSurveyResponseReply) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDPSendSpecialSurveyResponseReply.ProtoReflect.Descriptor instead.
func (*CMsgClientDPSendSpecialSurveyResponseReply) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgClientDPSendSpecialSurveyResponseReply) GetEResult() uint32 {
	if x != nil && x.EResult != nil {
		return *x.EResult
	}
	return Default_CMsgClientDPSendSpecialSurveyResponseReply_EResult
}

func (x *CMsgClientDPSendSpecialSurveyResponseReply) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type CMsgClientRequestForgottenPasswordEmail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountName   *string `protobuf:"bytes,1,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	PasswordTried *string `protobuf:"bytes,2,opt,name=password_tried,json=passwordTried" json:"password_tried,omitempty"`
}

func (x *CMsgClientRequestForgottenPasswordEmail) Reset() {
	*x = CMsgClientRequestForgottenPasswordEmail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRequestForgottenPasswordEmail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestForgottenPasswordEmail) ProtoMessage() {}

func (x *CMsgClientRequestForgottenPasswordEmail) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestForgottenPasswordEmail.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestForgottenPasswordEmail) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgClientRequestForgottenPasswordEmail) GetAccountName() string {
	if x != nil && x.AccountName != nil {
		return *x.AccountName
	}
	return ""
}

func (x *CMsgClientRequestForgottenPasswordEmail) GetPasswordTried() string {
	if x != nil && x.PasswordTried != nil {
		return *x.PasswordTried
	}
	return ""
}

type CMsgClientRequestForgottenPasswordEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EResult           *uint32 `protobuf:"varint,1,opt,name=eResult" json:"eResult,omitempty"`
	UseSecretQuestion *bool   `protobuf:"varint,2,opt,name=use_secret_question,json=useSecretQuestion" json:"use_secret_question,omitempty"`
}

func (x *CMsgClientRequestForgottenPasswordEmailResponse) Reset() {
	*x = CMsgClientRequestForgottenPasswordEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRequestForgottenPasswordEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestForgottenPasswordEmailResponse) ProtoMessage() {}

func (x *CMsgClientRequestForgottenPasswordEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestForgottenPasswordEmailResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestForgottenPasswordEmailResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgClientRequestForgottenPasswordEmailResponse) GetEResult() uint32 {
	if x != nil && x.EResult != nil {
		return *x.EResult
	}
	return 0
}

func (x *CMsgClientRequestForgottenPasswordEmailResponse) GetUseSecretQuestion() bool {
	if x != nil && x.UseSecretQuestion != nil {
		return *x.UseSecretQuestion
	}
	return false
}

type CMsgClientItemAnnouncements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountNewItems *uint32                                   `protobuf:"varint,1,opt,name=count_new_items,json=countNewItems" json:"count_new_items,omitempty"`
	UnseenItems   []*CMsgClientItemAnnouncements_UnseenItem `protobuf:"bytes,2,rep,name=unseen_items,json=unseenItems" json:"unseen_items,omitempty"`
}

func (x *CMsgClientItemAnnouncements) Reset() {
	*x = CMsgClientItemAnnouncements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientItemAnnouncements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientItemAnnouncements) ProtoMessage() {}

func (x *CMsgClientItemAnnouncements) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientItemAnnouncements.ProtoReflect.Descriptor instead.
func (*CMsgClientItemAnnouncements) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgClientItemAnnouncements) GetCountNewItems() uint32 {
	if x != nil && x.CountNewItems != nil {
		return *x.CountNewItems
	}
	return 0
}

func (x *CMsgClientItemAnnouncements) GetUnseenItems() []*CMsgClientItemAnnouncements_UnseenItem {
	if x != nil {
		return x.UnseenItems
	}
	return nil
}

type CMsgClientRequestItemAnnouncements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientRequestItemAnnouncements) Reset() {
	*x = CMsgClientRequestItemAnnouncements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRequestItemAnnouncements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestItemAnnouncements) ProtoMessage() {}

func (x *CMsgClientRequestItemAnnouncements) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestItemAnnouncements.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestItemAnnouncements) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{46}
}

type CMsgClientUserNotifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*CMsgClientUserNotifications_Notification `protobuf:"bytes,1,rep,name=notifications" json:"notifications,omitempty"`
}

func (x *CMsgClientUserNotifications) Reset() {
	*x = CMsgClientUserNotifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUserNotifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUserNotifications) ProtoMessage() {}

func (x *CMsgClientUserNotifications) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUserNotifications.ProtoReflect.Descriptor instead.
func (*CMsgClientUserNotifications) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgClientUserNotifications) GetNotifications() []*CMsgClientUserNotifications_Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type CMsgClientCommentNotifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountNewComments              *uint32 `protobuf:"varint,1,opt,name=count_new_comments,json=countNewComments" json:"count_new_comments,omitempty"`
	CountNewCommentsOwner         *uint32 `protobuf:"varint,2,opt,name=count_new_comments_owner,json=countNewCommentsOwner" json:"count_new_comments_owner,omitempty"`
	CountNewCommentsSubscriptions *uint32 `protobuf:"varint,3,opt,name=count_new_comments_subscriptions,json=countNewCommentsSubscriptions" json:"count_new_comments_subscriptions,omitempty"`
}

func (x *CMsgClientCommentNotifications) Reset() {
	*x = CMsgClientCommentNotifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientCommentNotifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCommentNotifications) ProtoMessage() {}

func (x *CMsgClientCommentNotifications) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCommentNotifications.ProtoReflect.Descriptor instead.
func (*CMsgClientCommentNotifications) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgClientCommentNotifications) GetCountNewComments() uint32 {
	if x != nil && x.CountNewComments != nil {
		return *x.CountNewComments
	}
	return 0
}

func (x *CMsgClientCommentNotifications) GetCountNewCommentsOwner() uint32 {
	if x != nil && x.CountNewCommentsOwner != nil {
		return *x.CountNewCommentsOwner
	}
	return 0
}

func (x *CMsgClientCommentNotifications) GetCountNewCommentsSubscriptions() uint32 {
	if x != nil && x.CountNewCommentsSubscriptions != nil {
		return *x.CountNewCommentsSubscriptions
	}
	return 0
}

type CMsgClientRequestCommentNotifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientRequestCommentNotifications) Reset() {
	*x = CMsgClientRequestCommentNotifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRequestCommentNotifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestCommentNotifications) ProtoMessage() {}

func (x *CMsgClientRequestCommentNotifications) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestCommentNotifications.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestCommentNotifications) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{49}
}

type CMsgClientOfflineMessageNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfflineMessages            *uint32  `protobuf:"varint,1,opt,name=offline_messages,json=offlineMessages" json:"offline_messages,omitempty"`
	FriendsWithOfflineMessages []uint32 `protobuf:"varint,2,rep,name=friends_with_offline_messages,json=friendsWithOfflineMessages" json:"friends_with_offline_messages,omitempty"`
}

func (x *CMsgClientOfflineMessageNotification) Reset() {
	*x = CMsgClientOfflineMessageNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientOfflineMessageNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientOfflineMessageNotification) ProtoMessage() {}

func (x *CMsgClientOfflineMessageNotification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientOfflineMessageNotification.ProtoReflect.Descriptor instead.
func (*CMsgClientOfflineMessageNotification) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgClientOfflineMessageNotification) GetOfflineMessages() uint32 {
	if x != nil && x.OfflineMessages != nil {
		return *x.OfflineMessages
	}
	return 0
}

func (x *CMsgClientOfflineMessageNotification) GetFriendsWithOfflineMessages() []uint32 {
	if x != nil {
		return x.FriendsWithOfflineMessages
	}
	return nil
}

type CMsgClientRequestOfflineMessageCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientRequestOfflineMessageCount) Reset() {
	*x = CMsgClientRequestOfflineMessageCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRequestOfflineMessageCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRequestOfflineMessageCount) ProtoMessage() {}

func (x *CMsgClientRequestOfflineMessageCount) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRequestOfflineMessageCount.ProtoReflect.Descriptor instead.
func (*CMsgClientRequestOfflineMessageCount) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{51}
}

type CMsgClientChatGetFriendMessageHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CMsgClientChatGetFriendMessageHistory) Reset() {
	*x = CMsgClientChatGetFriendMessageHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientChatGetFriendMessageHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientChatGetFriendMessageHistory) ProtoMessage() {}

func (x *CMsgClientChatGetFriendMessageHistory) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientChatGetFriendMessageHistory.ProtoReflect.Descriptor instead.
func (*CMsgClientChatGetFriendMessageHistory) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgClientChatGetFriendMessageHistory) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CMsgClientChatGetFriendMessageHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid  *uint64                                                        `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Success  *uint32                                                        `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
	Messages []*CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage `protobuf:"bytes,3,rep,name=messages" json:"messages,omitempty"`
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse) Reset() {
	*x = CMsgClientChatGetFriendMessageHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientChatGetFriendMessageHistoryResponse) ProtoMessage() {}

func (x *CMsgClientChatGetFriendMessageHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientChatGetFriendMessageHistoryResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientChatGetFriendMessageHistoryResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse) GetSuccess() uint32 {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return 0
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse) GetMessages() []*CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type CMsgClientChatGetFriendMessageHistoryForOfflineMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientChatGetFriendMessageHistoryForOfflineMessages) Reset() {
	*x = CMsgClientChatGetFriendMessageHistoryForOfflineMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientChatGetFriendMessageHistoryForOfflineMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientChatGetFriendMessageHistoryForOfflineMessages) ProtoMessage() {}

func (x *CMsgClientChatGetFriendMessageHistoryForOfflineMessages) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientChatGetFriendMessageHistoryForOfflineMessages.ProtoReflect.Descriptor instead.
func (*CMsgClientChatGetFriendMessageHistoryForOfflineMessages) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{54}
}

type CMsgClientFSGetFriendsSteamLevels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountids []uint32 `protobuf:"varint,1,rep,name=accountids" json:"accountids,omitempty"`
}

func (x *CMsgClientFSGetFriendsSteamLevels) Reset() {
	*x = CMsgClientFSGetFriendsSteamLevels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientFSGetFriendsSteamLevels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFSGetFriendsSteamLevels) ProtoMessage() {}

func (x *CMsgClientFSGetFriendsSteamLevels) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFSGetFriendsSteamLevels.ProtoReflect.Descriptor instead.
func (*CMsgClientFSGetFriendsSteamLevels) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgClientFSGetFriendsSteamLevels) GetAccountids() []uint32 {
	if x != nil {
		return x.Accountids
	}
	return nil
}

type CMsgClientFSGetFriendsSteamLevelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*CMsgClientFSGetFriendsSteamLevelsResponse_Friend `protobuf:"bytes,1,rep,name=friends" json:"friends,omitempty"`
}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse) Reset() {
	*x = CMsgClientFSGetFriendsSteamLevelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFSGetFriendsSteamLevelsResponse) ProtoMessage() {}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFSGetFriendsSteamLevelsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientFSGetFriendsSteamLevelsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{56}
}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse) GetFriends() []*CMsgClientFSGetFriendsSteamLevelsResponse_Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type CMsgClientEmailAddrInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailAddress                         *string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	EmailIsValidated                     *bool   `protobuf:"varint,2,opt,name=email_is_validated,json=emailIsValidated" json:"email_is_validated,omitempty"`
	EmailValidationChanged               *bool   `protobuf:"varint,3,opt,name=email_validation_changed,json=emailValidationChanged" json:"email_validation_changed,omitempty"`
	CredentialChangeRequiresCode         *bool   `protobuf:"varint,4,opt,name=credential_change_requires_code,json=credentialChangeRequiresCode" json:"credential_change_requires_code,omitempty"`
	PasswordOrSecretqaChangeRequiresCode *bool   `protobuf:"varint,5,opt,name=password_or_secretqa_change_requires_code,json=passwordOrSecretqaChangeRequiresCode" json:"password_or_secretqa_change_requires_code,omitempty"`
}

func (x *CMsgClientEmailAddrInfo) Reset() {
	*x = CMsgClientEmailAddrInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientEmailAddrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientEmailAddrInfo) ProtoMessage() {}

func (x *CMsgClientEmailAddrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientEmailAddrInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientEmailAddrInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgClientEmailAddrInfo) GetEmailAddress() string {
	if x != nil && x.EmailAddress != nil {
		return *x.EmailAddress
	}
	return ""
}

func (x *CMsgClientEmailAddrInfo) GetEmailIsValidated() bool {
	if x != nil && x.EmailIsValidated != nil {
		return *x.EmailIsValidated
	}
	return false
}

func (x *CMsgClientEmailAddrInfo) GetEmailValidationChanged() bool {
	if x != nil && x.EmailValidationChanged != nil {
		return *x.EmailValidationChanged
	}
	return false
}

func (x *CMsgClientEmailAddrInfo) GetCredentialChangeRequiresCode() bool {
	if x != nil && x.CredentialChangeRequiresCode != nil {
		return *x.CredentialChangeRequiresCode
	}
	return false
}

func (x *CMsgClientEmailAddrInfo) GetPasswordOrSecretqaChangeRequiresCode() bool {
	if x != nil && x.PasswordOrSecretqaChangeRequiresCode != nil {
		return *x.PasswordOrSecretqaChangeRequiresCode
	}
	return false
}

type CMsgCREItemVoteSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedFileIds []*CMsgCREItemVoteSummary_PublishedFileId `protobuf:"bytes,1,rep,name=published_file_ids,json=publishedFileIds" json:"published_file_ids,omitempty"`
}

func (x *CMsgCREItemVoteSummary) Reset() {
	*x = CMsgCREItemVoteSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREItemVoteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREItemVoteSummary) ProtoMessage() {}

func (x *CMsgCREItemVoteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREItemVoteSummary.ProtoReflect.Descriptor instead.
func (*CMsgCREItemVoteSummary) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{58}
}

func (x *CMsgCREItemVoteSummary) GetPublishedFileIds() []*CMsgCREItemVoteSummary_PublishedFileId {
	if x != nil {
		return x.PublishedFileIds
	}
	return nil
}

type CMsgCREItemVoteSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult           *int32                                            `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	ItemVoteSummaries []*CMsgCREItemVoteSummaryResponse_ItemVoteSummary `protobuf:"bytes,2,rep,name=item_vote_summaries,json=itemVoteSummaries" json:"item_vote_summaries,omitempty"`
}

// Default values for CMsgCREItemVoteSummaryResponse fields.
const (
	Default_CMsgCREItemVoteSummaryResponse_Eresult = int32(2)
)

func (x *CMsgCREItemVoteSummaryResponse) Reset() {
	*x = CMsgCREItemVoteSummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREItemVoteSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREItemVoteSummaryResponse) ProtoMessage() {}

func (x *CMsgCREItemVoteSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREItemVoteSummaryResponse.ProtoReflect.Descriptor instead.
func (*CMsgCREItemVoteSummaryResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{59}
}

func (x *CMsgCREItemVoteSummaryResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgCREItemVoteSummaryResponse_Eresult
}

func (x *CMsgCREItemVoteSummaryResponse) GetItemVoteSummaries() []*CMsgCREItemVoteSummaryResponse_ItemVoteSummary {
	if x != nil {
		return x.ItemVoteSummaries
	}
	return nil
}

type CMsgCREUpdateUserPublishedItemVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedFileId *uint64 `protobuf:"fixed64,1,opt,name=published_file_id,json=publishedFileId" json:"published_file_id,omitempty"`
	VoteUp          *bool   `protobuf:"varint,2,opt,name=vote_up,json=voteUp" json:"vote_up,omitempty"`
}

func (x *CMsgCREUpdateUserPublishedItemVote) Reset() {
	*x = CMsgCREUpdateUserPublishedItemVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREUpdateUserPublishedItemVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREUpdateUserPublishedItemVote) ProtoMessage() {}

func (x *CMsgCREUpdateUserPublishedItemVote) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREUpdateUserPublishedItemVote.ProtoReflect.Descriptor instead.
func (*CMsgCREUpdateUserPublishedItemVote) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{60}
}

func (x *CMsgCREUpdateUserPublishedItemVote) GetPublishedFileId() uint64 {
	if x != nil && x.PublishedFileId != nil {
		return *x.PublishedFileId
	}
	return 0
}

func (x *CMsgCREUpdateUserPublishedItemVote) GetVoteUp() bool {
	if x != nil && x.VoteUp != nil {
		return *x.VoteUp
	}
	return false
}

type CMsgCREUpdateUserPublishedItemVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
}

// Default values for CMsgCREUpdateUserPublishedItemVoteResponse fields.
const (
	Default_CMsgCREUpdateUserPublishedItemVoteResponse_Eresult = int32(2)
)

func (x *CMsgCREUpdateUserPublishedItemVoteResponse) Reset() {
	*x = CMsgCREUpdateUserPublishedItemVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREUpdateUserPublishedItemVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREUpdateUserPublishedItemVoteResponse) ProtoMessage() {}

func (x *CMsgCREUpdateUserPublishedItemVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREUpdateUserPublishedItemVoteResponse.ProtoReflect.Descriptor instead.
func (*CMsgCREUpdateUserPublishedItemVoteResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{61}
}

func (x *CMsgCREUpdateUserPublishedItemVoteResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgCREUpdateUserPublishedItemVoteResponse_Eresult
}

type CMsgCREGetUserPublishedItemVoteDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedFileIds []*CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId `protobuf:"bytes,1,rep,name=published_file_ids,json=publishedFileIds" json:"published_file_ids,omitempty"`
}

func (x *CMsgCREGetUserPublishedItemVoteDetails) Reset() {
	*x = CMsgCREGetUserPublishedItemVoteDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREGetUserPublishedItemVoteDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREGetUserPublishedItemVoteDetails) ProtoMessage() {}

func (x *CMsgCREGetUserPublishedItemVoteDetails) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREGetUserPublishedItemVoteDetails.ProtoReflect.Descriptor instead.
func (*CMsgCREGetUserPublishedItemVoteDetails) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{62}
}

func (x *CMsgCREGetUserPublishedItemVoteDetails) GetPublishedFileIds() []*CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId {
	if x != nil {
		return x.PublishedFileIds
	}
	return nil
}

type CMsgCREGetUserPublishedItemVoteDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult             *int32                                                               `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	UserItemVoteDetails []*CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail `protobuf:"bytes,2,rep,name=user_item_vote_details,json=userItemVoteDetails" json:"user_item_vote_details,omitempty"`
}

// Default values for CMsgCREGetUserPublishedItemVoteDetailsResponse fields.
const (
	Default_CMsgCREGetUserPublishedItemVoteDetailsResponse_Eresult = int32(2)
)

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse) Reset() {
	*x = CMsgCREGetUserPublishedItemVoteDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREGetUserPublishedItemVoteDetailsResponse) ProtoMessage() {}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREGetUserPublishedItemVoteDetailsResponse.ProtoReflect.Descriptor instead.
func (*CMsgCREGetUserPublishedItemVoteDetailsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{63}
}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgCREGetUserPublishedItemVoteDetailsResponse_Eresult
}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse) GetUserItemVoteDetails() []*CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail {
	if x != nil {
		return x.UserItemVoteDetails
	}
	return nil
}

type CMsgFSGetFollowerCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
}

func (x *CMsgFSGetFollowerCount) Reset() {
	*x = CMsgFSGetFollowerCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFSGetFollowerCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFSGetFollowerCount) ProtoMessage() {}

func (x *CMsgFSGetFollowerCount) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFSGetFollowerCount.ProtoReflect.Descriptor instead.
func (*CMsgFSGetFollowerCount) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{64}
}

func (x *CMsgFSGetFollowerCount) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type CMsgFSGetFollowerCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Count   *int32 `protobuf:"varint,2,opt,name=count,def=0" json:"count,omitempty"`
}

// Default values for CMsgFSGetFollowerCountResponse fields.
const (
	Default_CMsgFSGetFollowerCountResponse_Eresult = int32(2)
	Default_CMsgFSGetFollowerCountResponse_Count   = int32(0)
)

func (x *CMsgFSGetFollowerCountResponse) Reset() {
	*x = CMsgFSGetFollowerCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFSGetFollowerCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFSGetFollowerCountResponse) ProtoMessage() {}

func (x *CMsgFSGetFollowerCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFSGetFollowerCountResponse.ProtoReflect.Descriptor instead.
func (*CMsgFSGetFollowerCountResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{65}
}

func (x *CMsgFSGetFollowerCountResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgFSGetFollowerCountResponse_Eresult
}

func (x *CMsgFSGetFollowerCountResponse) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return Default_CMsgFSGetFollowerCountResponse_Count
}

type CMsgFSGetIsFollowing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId *uint64 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
}

func (x *CMsgFSGetIsFollowing) Reset() {
	*x = CMsgFSGetIsFollowing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFSGetIsFollowing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFSGetIsFollowing) ProtoMessage() {}

func (x *CMsgFSGetIsFollowing) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFSGetIsFollowing.ProtoReflect.Descriptor instead.
func (*CMsgFSGetIsFollowing) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgFSGetIsFollowing) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type CMsgFSGetIsFollowingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult     *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	IsFollowing *bool  `protobuf:"varint,2,opt,name=is_following,json=isFollowing,def=0" json:"is_following,omitempty"`
}

// Default values for CMsgFSGetIsFollowingResponse fields.
const (
	Default_CMsgFSGetIsFollowingResponse_Eresult     = int32(2)
	Default_CMsgFSGetIsFollowingResponse_IsFollowing = bool(false)
)

func (x *CMsgFSGetIsFollowingResponse) Reset() {
	*x = CMsgFSGetIsFollowingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFSGetIsFollowingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFSGetIsFollowingResponse) ProtoMessage() {}

func (x *CMsgFSGetIsFollowingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFSGetIsFollowingResponse.ProtoReflect.Descriptor instead.
func (*CMsgFSGetIsFollowingResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{67}
}

func (x *CMsgFSGetIsFollowingResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgFSGetIsFollowingResponse_Eresult
}

func (x *CMsgFSGetIsFollowingResponse) GetIsFollowing() bool {
	if x != nil && x.IsFollowing != nil {
		return *x.IsFollowing
	}
	return Default_CMsgFSGetIsFollowingResponse_IsFollowing
}

type CMsgFSEnumerateFollowingList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex *uint32 `protobuf:"varint,1,opt,name=start_index,json=startIndex" json:"start_index,omitempty"`
}

func (x *CMsgFSEnumerateFollowingList) Reset() {
	*x = CMsgFSEnumerateFollowingList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFSEnumerateFollowingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFSEnumerateFollowingList) ProtoMessage() {}

func (x *CMsgFSEnumerateFollowingList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFSEnumerateFollowingList.ProtoReflect.Descriptor instead.
func (*CMsgFSEnumerateFollowingList) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{68}
}

func (x *CMsgFSEnumerateFollowingList) GetStartIndex() uint32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return 0
}

type CMsgFSEnumerateFollowingListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult      *int32   `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	TotalResults *int32   `protobuf:"varint,2,opt,name=total_results,json=totalResults" json:"total_results,omitempty"`
	SteamIds     []uint64 `protobuf:"fixed64,3,rep,name=steam_ids,json=steamIds" json:"steam_ids,omitempty"`
}

// Default values for CMsgFSEnumerateFollowingListResponse fields.
const (
	Default_CMsgFSEnumerateFollowingListResponse_Eresult = int32(2)
)

func (x *CMsgFSEnumerateFollowingListResponse) Reset() {
	*x = CMsgFSEnumerateFollowingListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFSEnumerateFollowingListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFSEnumerateFollowingListResponse) ProtoMessage() {}

func (x *CMsgFSEnumerateFollowingListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFSEnumerateFollowingListResponse.ProtoReflect.Descriptor instead.
func (*CMsgFSEnumerateFollowingListResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{69}
}

func (x *CMsgFSEnumerateFollowingListResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgFSEnumerateFollowingListResponse_Eresult
}

func (x *CMsgFSEnumerateFollowingListResponse) GetTotalResults() int32 {
	if x != nil && x.TotalResults != nil {
		return *x.TotalResults
	}
	return 0
}

func (x *CMsgFSEnumerateFollowingListResponse) GetSteamIds() []uint64 {
	if x != nil {
		return x.SteamIds
	}
	return nil
}

type CMsgDPGetNumberOfCurrentPlayers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
}

func (x *CMsgDPGetNumberOfCurrentPlayers) Reset() {
	*x = CMsgDPGetNumberOfCurrentPlayers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDPGetNumberOfCurrentPlayers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDPGetNumberOfCurrentPlayers) ProtoMessage() {}

func (x *CMsgDPGetNumberOfCurrentPlayers) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDPGetNumberOfCurrentPlayers.ProtoReflect.Descriptor instead.
func (*CMsgDPGetNumberOfCurrentPlayers) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{70}
}

func (x *CMsgDPGetNumberOfCurrentPlayers) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CMsgDPGetNumberOfCurrentPlayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult     *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	PlayerCount *int32 `protobuf:"varint,2,opt,name=player_count,json=playerCount" json:"player_count,omitempty"`
}

// Default values for CMsgDPGetNumberOfCurrentPlayersResponse fields.
const (
	Default_CMsgDPGetNumberOfCurrentPlayersResponse_Eresult = int32(2)
)

func (x *CMsgDPGetNumberOfCurrentPlayersResponse) Reset() {
	*x = CMsgDPGetNumberOfCurrentPlayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDPGetNumberOfCurrentPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDPGetNumberOfCurrentPlayersResponse) ProtoMessage() {}

func (x *CMsgDPGetNumberOfCurrentPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDPGetNumberOfCurrentPlayersResponse.ProtoReflect.Descriptor instead.
func (*CMsgDPGetNumberOfCurrentPlayersResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{71}
}

func (x *CMsgDPGetNumberOfCurrentPlayersResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgDPGetNumberOfCurrentPlayersResponse_Eresult
}

func (x *CMsgDPGetNumberOfCurrentPlayersResponse) GetPlayerCount() int32 {
	if x != nil && x.PlayerCount != nil {
		return *x.PlayerCount
	}
	return 0
}

type CMsgClientFriendUserStatusPublished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendSteamid *uint64 `protobuf:"fixed64,1,opt,name=friend_steamid,json=friendSteamid" json:"friend_steamid,omitempty"`
	Appid         *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	StatusText    *string `protobuf:"bytes,3,opt,name=status_text,json=statusText" json:"status_text,omitempty"`
}

func (x *CMsgClientFriendUserStatusPublished) Reset() {
	*x = CMsgClientFriendUserStatusPublished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientFriendUserStatusPublished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendUserStatusPublished) ProtoMessage() {}

func (x *CMsgClientFriendUserStatusPublished) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendUserStatusPublished.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendUserStatusPublished) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{72}
}

func (x *CMsgClientFriendUserStatusPublished) GetFriendSteamid() uint64 {
	if x != nil && x.FriendSteamid != nil {
		return *x.FriendSteamid
	}
	return 0
}

func (x *CMsgClientFriendUserStatusPublished) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientFriendUserStatusPublished) GetStatusText() string {
	if x != nil && x.StatusText != nil {
		return *x.StatusText
	}
	return ""
}

type CMsgClientServiceMethodLegacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodName       *string `protobuf:"bytes,1,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	SerializedMethod []byte  `protobuf:"bytes,2,opt,name=serialized_method,json=serializedMethod" json:"serialized_method,omitempty"`
	IsNotification   *bool   `protobuf:"varint,3,opt,name=is_notification,json=isNotification" json:"is_notification,omitempty"`
}

func (x *CMsgClientServiceMethodLegacy) Reset() {
	*x = CMsgClientServiceMethodLegacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientServiceMethodLegacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientServiceMethodLegacy) ProtoMessage() {}

func (x *CMsgClientServiceMethodLegacy) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientServiceMethodLegacy.ProtoReflect.Descriptor instead.
func (*CMsgClientServiceMethodLegacy) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{73}
}

func (x *CMsgClientServiceMethodLegacy) GetMethodName() string {
	if x != nil && x.MethodName != nil {
		return *x.MethodName
	}
	return ""
}

func (x *CMsgClientServiceMethodLegacy) GetSerializedMethod() []byte {
	if x != nil {
		return x.SerializedMethod
	}
	return nil
}

func (x *CMsgClientServiceMethodLegacy) GetIsNotification() bool {
	if x != nil && x.IsNotification != nil {
		return *x.IsNotification
	}
	return false
}

type CMsgClientServiceMethodLegacyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodName               *string `protobuf:"bytes,1,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	SerializedMethodResponse []byte  `protobuf:"bytes,2,opt,name=serialized_method_response,json=serializedMethodResponse" json:"serialized_method_response,omitempty"`
}

func (x *CMsgClientServiceMethodLegacyResponse) Reset() {
	*x = CMsgClientServiceMethodLegacyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientServiceMethodLegacyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientServiceMethodLegacyResponse) ProtoMessage() {}

func (x *CMsgClientServiceMethodLegacyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientServiceMethodLegacyResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientServiceMethodLegacyResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{74}
}

func (x *CMsgClientServiceMethodLegacyResponse) GetMethodName() string {
	if x != nil && x.MethodName != nil {
		return *x.MethodName
	}
	return ""
}

func (x *CMsgClientServiceMethodLegacyResponse) GetSerializedMethodResponse() []byte {
	if x != nil {
		return x.SerializedMethodResponse
	}
	return nil
}

type CMsgClientUIMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uimode   *uint32 `protobuf:"varint,1,opt,name=uimode" json:"uimode,omitempty"`
	ChatMode *uint32 `protobuf:"varint,2,opt,name=chat_mode,json=chatMode" json:"chat_mode,omitempty"`
}

func (x *CMsgClientUIMode) Reset() {
	*x = CMsgClientUIMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUIMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUIMode) ProtoMessage() {}

func (x *CMsgClientUIMode) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUIMode.ProtoReflect.Descriptor instead.
func (*CMsgClientUIMode) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{75}
}

func (x *CMsgClientUIMode) GetUimode() uint32 {
	if x != nil && x.Uimode != nil {
		return *x.Uimode
	}
	return 0
}

func (x *CMsgClientUIMode) GetChatMode() uint32 {
	if x != nil && x.ChatMode != nil {
		return *x.ChatMode
	}
	return 0
}

type CMsgClientVanityURLChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VanityUrl *string `protobuf:"bytes,1,opt,name=vanity_url,json=vanityUrl" json:"vanity_url,omitempty"`
}

func (x *CMsgClientVanityURLChangedNotification) Reset() {
	*x = CMsgClientVanityURLChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientVanityURLChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientVanityURLChangedNotification) ProtoMessage() {}

func (x *CMsgClientVanityURLChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientVanityURLChangedNotification.ProtoReflect.Descriptor instead.
func (*CMsgClientVanityURLChangedNotification) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{76}
}

func (x *CMsgClientVanityURLChangedNotification) GetVanityUrl() string {
	if x != nil && x.VanityUrl != nil {
		return *x.VanityUrl
	}
	return ""
}

type CMsgClientAuthorizeLocalDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDescription *string `protobuf:"bytes,1,opt,name=device_description,json=deviceDescription" json:"device_description,omitempty"`
	OwnerAccountId    *uint32 `protobuf:"varint,2,opt,name=owner_account_id,json=ownerAccountId" json:"owner_account_id,omitempty"`
	LocalDeviceToken  *uint64 `protobuf:"varint,3,opt,name=local_device_token,json=localDeviceToken" json:"local_device_token,omitempty"`
}

func (x *CMsgClientAuthorizeLocalDeviceRequest) Reset() {
	*x = CMsgClientAuthorizeLocalDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientAuthorizeLocalDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAuthorizeLocalDeviceRequest) ProtoMessage() {}

func (x *CMsgClientAuthorizeLocalDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAuthorizeLocalDeviceRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientAuthorizeLocalDeviceRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{77}
}

func (x *CMsgClientAuthorizeLocalDeviceRequest) GetDeviceDescription() string {
	if x != nil && x.DeviceDescription != nil {
		return *x.DeviceDescription
	}
	return ""
}

func (x *CMsgClientAuthorizeLocalDeviceRequest) GetOwnerAccountId() uint32 {
	if x != nil && x.OwnerAccountId != nil {
		return *x.OwnerAccountId
	}
	return 0
}

func (x *CMsgClientAuthorizeLocalDeviceRequest) GetLocalDeviceToken() uint64 {
	if x != nil && x.LocalDeviceToken != nil {
		return *x.LocalDeviceToken
	}
	return 0
}

type CMsgClientAuthorizeLocalDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult           *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	OwnerAccountId    *uint32 `protobuf:"varint,2,opt,name=owner_account_id,json=ownerAccountId" json:"owner_account_id,omitempty"`
	AuthedDeviceToken *uint64 `protobuf:"varint,3,opt,name=authed_device_token,json=authedDeviceToken" json:"authed_device_token,omitempty"`
}

// Default values for CMsgClientAuthorizeLocalDevice fields.
const (
	Default_CMsgClientAuthorizeLocalDevice_Eresult = int32(2)
)

func (x *CMsgClientAuthorizeLocalDevice) Reset() {
	*x = CMsgClientAuthorizeLocalDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientAuthorizeLocalDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAuthorizeLocalDevice) ProtoMessage() {}

func (x *CMsgClientAuthorizeLocalDevice) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAuthorizeLocalDevice.ProtoReflect.Descriptor instead.
func (*CMsgClientAuthorizeLocalDevice) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{78}
}

func (x *CMsgClientAuthorizeLocalDevice) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientAuthorizeLocalDevice_Eresult
}

func (x *CMsgClientAuthorizeLocalDevice) GetOwnerAccountId() uint32 {
	if x != nil && x.OwnerAccountId != nil {
		return *x.OwnerAccountId
	}
	return 0
}

func (x *CMsgClientAuthorizeLocalDevice) GetAuthedDeviceToken() uint64 {
	if x != nil && x.AuthedDeviceToken != nil {
		return *x.AuthedDeviceToken
	}
	return 0
}

type CMsgClientAuthorizeLocalDeviceNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult          *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	OwnerAccountId   *uint32 `protobuf:"varint,2,opt,name=owner_account_id,json=ownerAccountId" json:"owner_account_id,omitempty"`
	LocalDeviceToken *uint64 `protobuf:"varint,3,opt,name=local_device_token,json=localDeviceToken" json:"local_device_token,omitempty"`
}

// Default values for CMsgClientAuthorizeLocalDeviceNotification fields.
const (
	Default_CMsgClientAuthorizeLocalDeviceNotification_Eresult = int32(2)
)

func (x *CMsgClientAuthorizeLocalDeviceNotification) Reset() {
	*x = CMsgClientAuthorizeLocalDeviceNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientAuthorizeLocalDeviceNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAuthorizeLocalDeviceNotification) ProtoMessage() {}

func (x *CMsgClientAuthorizeLocalDeviceNotification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAuthorizeLocalDeviceNotification.ProtoReflect.Descriptor instead.
func (*CMsgClientAuthorizeLocalDeviceNotification) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{79}
}

func (x *CMsgClientAuthorizeLocalDeviceNotification) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientAuthorizeLocalDeviceNotification_Eresult
}

func (x *CMsgClientAuthorizeLocalDeviceNotification) GetOwnerAccountId() uint32 {
	if x != nil && x.OwnerAccountId != nil {
		return *x.OwnerAccountId
	}
	return 0
}

func (x *CMsgClientAuthorizeLocalDeviceNotification) GetLocalDeviceToken() uint64 {
	if x != nil && x.LocalDeviceToken != nil {
		return *x.LocalDeviceToken
	}
	return 0
}

type CMsgClientDeauthorizeDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeauthorizationAccountId   *uint32 `protobuf:"varint,1,opt,name=deauthorization_account_id,json=deauthorizationAccountId" json:"deauthorization_account_id,omitempty"`
	DeauthorizationDeviceToken *uint64 `protobuf:"varint,2,opt,name=deauthorization_device_token,json=deauthorizationDeviceToken" json:"deauthorization_device_token,omitempty"`
}

func (x *CMsgClientDeauthorizeDeviceRequest) Reset() {
	*x = CMsgClientDeauthorizeDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientDeauthorizeDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDeauthorizeDeviceRequest) ProtoMessage() {}

func (x *CMsgClientDeauthorizeDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDeauthorizeDeviceRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientDeauthorizeDeviceRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{80}
}

func (x *CMsgClientDeauthorizeDeviceRequest) GetDeauthorizationAccountId() uint32 {
	if x != nil && x.DeauthorizationAccountId != nil {
		return *x.DeauthorizationAccountId
	}
	return 0
}

func (x *CMsgClientDeauthorizeDeviceRequest) GetDeauthorizationDeviceToken() uint64 {
	if x != nil && x.DeauthorizationDeviceToken != nil {
		return *x.DeauthorizationDeviceToken
	}
	return 0
}

type CMsgClientDeauthorizeDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult                  *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	DeauthorizationAccountId *uint32 `protobuf:"varint,2,opt,name=deauthorization_account_id,json=deauthorizationAccountId" json:"deauthorization_account_id,omitempty"`
}

// Default values for CMsgClientDeauthorizeDevice fields.
const (
	Default_CMsgClientDeauthorizeDevice_Eresult = int32(2)
)

func (x *CMsgClientDeauthorizeDevice) Reset() {
	*x = CMsgClientDeauthorizeDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientDeauthorizeDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientDeauthorizeDevice) ProtoMessage() {}

func (x *CMsgClientDeauthorizeDevice) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientDeauthorizeDevice.ProtoReflect.Descriptor instead.
func (*CMsgClientDeauthorizeDevice) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{81}
}

func (x *CMsgClientDeauthorizeDevice) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientDeauthorizeDevice_Eresult
}

func (x *CMsgClientDeauthorizeDevice) GetDeauthorizationAccountId() uint32 {
	if x != nil && x.DeauthorizationAccountId != nil {
		return *x.DeauthorizationAccountId
	}
	return 0
}

type CMsgClientUseLocalDeviceAuthorizations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthorizationAccountId []uint32                                              `protobuf:"varint,1,rep,name=authorization_account_id,json=authorizationAccountId" json:"authorization_account_id,omitempty"`
	DeviceTokens           []*CMsgClientUseLocalDeviceAuthorizations_DeviceToken `protobuf:"bytes,2,rep,name=device_tokens,json=deviceTokens" json:"device_tokens,omitempty"`
}

func (x *CMsgClientUseLocalDeviceAuthorizations) Reset() {
	*x = CMsgClientUseLocalDeviceAuthorizations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUseLocalDeviceAuthorizations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUseLocalDeviceAuthorizations) ProtoMessage() {}

func (x *CMsgClientUseLocalDeviceAuthorizations) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUseLocalDeviceAuthorizations.ProtoReflect.Descriptor instead.
func (*CMsgClientUseLocalDeviceAuthorizations) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{82}
}

func (x *CMsgClientUseLocalDeviceAuthorizations) GetAuthorizationAccountId() []uint32 {
	if x != nil {
		return x.AuthorizationAccountId
	}
	return nil
}

func (x *CMsgClientUseLocalDeviceAuthorizations) GetDeviceTokens() []*CMsgClientUseLocalDeviceAuthorizations_DeviceToken {
	if x != nil {
		return x.DeviceTokens
	}
	return nil
}

type CMsgClientGetAuthorizedDevices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientGetAuthorizedDevices) Reset() {
	*x = CMsgClientGetAuthorizedDevices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetAuthorizedDevices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetAuthorizedDevices) ProtoMessage() {}

func (x *CMsgClientGetAuthorizedDevices) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetAuthorizedDevices.ProtoReflect.Descriptor instead.
func (*CMsgClientGetAuthorizedDevices) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{83}
}

type CMsgClientGetAuthorizedDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult          *int32                                                     `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	AuthorizedDevice []*CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice `protobuf:"bytes,2,rep,name=authorized_device,json=authorizedDevice" json:"authorized_device,omitempty"`
}

// Default values for CMsgClientGetAuthorizedDevicesResponse fields.
const (
	Default_CMsgClientGetAuthorizedDevicesResponse_Eresult = int32(2)
)

func (x *CMsgClientGetAuthorizedDevicesResponse) Reset() {
	*x = CMsgClientGetAuthorizedDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetAuthorizedDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetAuthorizedDevicesResponse) ProtoMessage() {}

func (x *CMsgClientGetAuthorizedDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetAuthorizedDevicesResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientGetAuthorizedDevicesResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{84}
}

func (x *CMsgClientGetAuthorizedDevicesResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientGetAuthorizedDevicesResponse_Eresult
}

func (x *CMsgClientGetAuthorizedDevicesResponse) GetAuthorizedDevice() []*CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice {
	if x != nil {
		return x.AuthorizedDevice
	}
	return nil
}

type CMsgClientSharedLibraryLockStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockedLibrary      []*CMsgClientSharedLibraryLockStatus_LockedLibrary `protobuf:"bytes,1,rep,name=locked_library,json=lockedLibrary" json:"locked_library,omitempty"`
	OwnLibraryLockedBy *uint32                                            `protobuf:"varint,2,opt,name=own_library_locked_by,json=ownLibraryLockedBy" json:"own_library_locked_by,omitempty"`
}

func (x *CMsgClientSharedLibraryLockStatus) Reset() {
	*x = CMsgClientSharedLibraryLockStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientSharedLibraryLockStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSharedLibraryLockStatus) ProtoMessage() {}

func (x *CMsgClientSharedLibraryLockStatus) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSharedLibraryLockStatus.ProtoReflect.Descriptor instead.
func (*CMsgClientSharedLibraryLockStatus) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{85}
}

func (x *CMsgClientSharedLibraryLockStatus) GetLockedLibrary() []*CMsgClientSharedLibraryLockStatus_LockedLibrary {
	if x != nil {
		return x.LockedLibrary
	}
	return nil
}

func (x *CMsgClientSharedLibraryLockStatus) GetOwnLibraryLockedBy() uint32 {
	if x != nil && x.OwnLibraryLockedBy != nil {
		return *x.OwnLibraryLockedBy
	}
	return 0
}

type CMsgClientSharedLibraryStopPlaying struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecondsLeft *int32                                        `protobuf:"varint,1,opt,name=seconds_left,json=secondsLeft" json:"seconds_left,omitempty"`
	StopApps    []*CMsgClientSharedLibraryStopPlaying_StopApp `protobuf:"bytes,2,rep,name=stop_apps,json=stopApps" json:"stop_apps,omitempty"`
}

func (x *CMsgClientSharedLibraryStopPlaying) Reset() {
	*x = CMsgClientSharedLibraryStopPlaying{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientSharedLibraryStopPlaying) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSharedLibraryStopPlaying) ProtoMessage() {}

func (x *CMsgClientSharedLibraryStopPlaying) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSharedLibraryStopPlaying.ProtoReflect.Descriptor instead.
func (*CMsgClientSharedLibraryStopPlaying) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{86}
}

func (x *CMsgClientSharedLibraryStopPlaying) GetSecondsLeft() int32 {
	if x != nil && x.SecondsLeft != nil {
		return *x.SecondsLeft
	}
	return 0
}

func (x *CMsgClientSharedLibraryStopPlaying) GetStopApps() []*CMsgClientSharedLibraryStopPlaying_StopApp {
	if x != nil {
		return x.StopApps
	}
	return nil
}

type CMsgClientServiceCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysidRouting        []byte  `protobuf:"bytes,1,opt,name=sysid_routing,json=sysidRouting" json:"sysid_routing,omitempty"`
	CallHandle          *uint32 `protobuf:"varint,2,opt,name=call_handle,json=callHandle" json:"call_handle,omitempty"`
	ModuleCrc           *uint32 `protobuf:"varint,3,opt,name=module_crc,json=moduleCrc" json:"module_crc,omitempty"`
	ModuleHash          []byte  `protobuf:"bytes,4,opt,name=module_hash,json=moduleHash" json:"module_hash,omitempty"`
	FunctionId          *uint32 `protobuf:"varint,5,opt,name=function_id,json=functionId" json:"function_id,omitempty"`
	CubOutputMax        *uint32 `protobuf:"varint,6,opt,name=cub_output_max,json=cubOutputMax" json:"cub_output_max,omitempty"`
	Flags               *uint32 `protobuf:"varint,7,opt,name=flags" json:"flags,omitempty"`
	Callparameter       []byte  `protobuf:"bytes,8,opt,name=callparameter" json:"callparameter,omitempty"`
	PingOnly            *bool   `protobuf:"varint,9,opt,name=ping_only,json=pingOnly" json:"ping_only,omitempty"`
	MaxOutstandingCalls *uint32 `protobuf:"varint,10,opt,name=max_outstanding_calls,json=maxOutstandingCalls" json:"max_outstanding_calls,omitempty"`
	AppId               *uint32 `protobuf:"varint,11,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *CMsgClientServiceCall) Reset() {
	*x = CMsgClientServiceCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientServiceCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientServiceCall) ProtoMessage() {}

func (x *CMsgClientServiceCall) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientServiceCall.ProtoReflect.Descriptor instead.
func (*CMsgClientServiceCall) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{87}
}

func (x *CMsgClientServiceCall) GetSysidRouting() []byte {
	if x != nil {
		return x.SysidRouting
	}
	return nil
}

func (x *CMsgClientServiceCall) GetCallHandle() uint32 {
	if x != nil && x.CallHandle != nil {
		return *x.CallHandle
	}
	return 0
}

func (x *CMsgClientServiceCall) GetModuleCrc() uint32 {
	if x != nil && x.ModuleCrc != nil {
		return *x.ModuleCrc
	}
	return 0
}

func (x *CMsgClientServiceCall) GetModuleHash() []byte {
	if x != nil {
		return x.ModuleHash
	}
	return nil
}

func (x *CMsgClientServiceCall) GetFunctionId() uint32 {
	if x != nil && x.FunctionId != nil {
		return *x.FunctionId
	}
	return 0
}

func (x *CMsgClientServiceCall) GetCubOutputMax() uint32 {
	if x != nil && x.CubOutputMax != nil {
		return *x.CubOutputMax
	}
	return 0
}

func (x *CMsgClientServiceCall) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CMsgClientServiceCall) GetCallparameter() []byte {
	if x != nil {
		return x.Callparameter
	}
	return nil
}

func (x *CMsgClientServiceCall) GetPingOnly() bool {
	if x != nil && x.PingOnly != nil {
		return *x.PingOnly
	}
	return false
}

func (x *CMsgClientServiceCall) GetMaxOutstandingCalls() uint32 {
	if x != nil && x.MaxOutstandingCalls != nil {
		return *x.MaxOutstandingCalls
	}
	return 0
}

func (x *CMsgClientServiceCall) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type CMsgClientServiceModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleCrc     *uint32 `protobuf:"varint,1,opt,name=module_crc,json=moduleCrc" json:"module_crc,omitempty"`
	ModuleHash    []byte  `protobuf:"bytes,2,opt,name=module_hash,json=moduleHash" json:"module_hash,omitempty"`
	ModuleContent []byte  `protobuf:"bytes,3,opt,name=module_content,json=moduleContent" json:"module_content,omitempty"`
}

func (x *CMsgClientServiceModule) Reset() {
	*x = CMsgClientServiceModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientServiceModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientServiceModule) ProtoMessage() {}

func (x *CMsgClientServiceModule) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientServiceModule.ProtoReflect.Descriptor instead.
func (*CMsgClientServiceModule) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{88}
}

func (x *CMsgClientServiceModule) GetModuleCrc() uint32 {
	if x != nil && x.ModuleCrc != nil {
		return *x.ModuleCrc
	}
	return 0
}

func (x *CMsgClientServiceModule) GetModuleHash() []byte {
	if x != nil {
		return x.ModuleHash
	}
	return nil
}

func (x *CMsgClientServiceModule) GetModuleContent() []byte {
	if x != nil {
		return x.ModuleContent
	}
	return nil
}

type CMsgClientServiceCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysidRouting          []byte  `protobuf:"bytes,1,opt,name=sysid_routing,json=sysidRouting" json:"sysid_routing,omitempty"`
	CallHandle            *uint32 `protobuf:"varint,2,opt,name=call_handle,json=callHandle" json:"call_handle,omitempty"`
	ModuleCrc             *uint32 `protobuf:"varint,3,opt,name=module_crc,json=moduleCrc" json:"module_crc,omitempty"`
	ModuleHash            []byte  `protobuf:"bytes,4,opt,name=module_hash,json=moduleHash" json:"module_hash,omitempty"`
	Ecallresult           *uint32 `protobuf:"varint,5,opt,name=ecallresult" json:"ecallresult,omitempty"`
	ResultContent         []byte  `protobuf:"bytes,6,opt,name=result_content,json=resultContent" json:"result_content,omitempty"`
	OsVersionInfo         []byte  `protobuf:"bytes,7,opt,name=os_version_info,json=osVersionInfo" json:"os_version_info,omitempty"`
	SystemInfo            []byte  `protobuf:"bytes,8,opt,name=system_info,json=systemInfo" json:"system_info,omitempty"`
	LoadAddress           *uint64 `protobuf:"fixed64,9,opt,name=load_address,json=loadAddress" json:"load_address,omitempty"`
	ExceptionRecord       []byte  `protobuf:"bytes,10,opt,name=exception_record,json=exceptionRecord" json:"exception_record,omitempty"`
	PortableOsVersionInfo []byte  `protobuf:"bytes,11,opt,name=portable_os_version_info,json=portableOsVersionInfo" json:"portable_os_version_info,omitempty"`
	PortableSystemInfo    []byte  `protobuf:"bytes,12,opt,name=portable_system_info,json=portableSystemInfo" json:"portable_system_info,omitempty"`
	WasConverted          *bool   `protobuf:"varint,13,opt,name=was_converted,json=wasConverted" json:"was_converted,omitempty"`
	InternalResult        *uint32 `protobuf:"varint,14,opt,name=internal_result,json=internalResult" json:"internal_result,omitempty"`
	CurrentCount          *uint32 `protobuf:"varint,15,opt,name=current_count,json=currentCount" json:"current_count,omitempty"`
	LastCallHandle        *uint32 `protobuf:"varint,16,opt,name=last_call_handle,json=lastCallHandle" json:"last_call_handle,omitempty"`
	LastCallModuleCrc     *uint32 `protobuf:"varint,17,opt,name=last_call_module_crc,json=lastCallModuleCrc" json:"last_call_module_crc,omitempty"`
	LastCallSysidRouting  []byte  `protobuf:"bytes,18,opt,name=last_call_sysid_routing,json=lastCallSysidRouting" json:"last_call_sysid_routing,omitempty"`
	LastEcallresult       *uint32 `protobuf:"varint,19,opt,name=last_ecallresult,json=lastEcallresult" json:"last_ecallresult,omitempty"`
	LastCallissueDelta    *uint32 `protobuf:"varint,20,opt,name=last_callissue_delta,json=lastCallissueDelta" json:"last_callissue_delta,omitempty"`
	LastCallcompleteDelta *uint32 `protobuf:"varint,21,opt,name=last_callcomplete_delta,json=lastCallcompleteDelta" json:"last_callcomplete_delta,omitempty"`
}

func (x *CMsgClientServiceCallResponse) Reset() {
	*x = CMsgClientServiceCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientServiceCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientServiceCallResponse) ProtoMessage() {}

func (x *CMsgClientServiceCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientServiceCallResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientServiceCallResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{89}
}

func (x *CMsgClientServiceCallResponse) GetSysidRouting() []byte {
	if x != nil {
		return x.SysidRouting
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetCallHandle() uint32 {
	if x != nil && x.CallHandle != nil {
		return *x.CallHandle
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetModuleCrc() uint32 {
	if x != nil && x.ModuleCrc != nil {
		return *x.ModuleCrc
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetModuleHash() []byte {
	if x != nil {
		return x.ModuleHash
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetEcallresult() uint32 {
	if x != nil && x.Ecallresult != nil {
		return *x.Ecallresult
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetResultContent() []byte {
	if x != nil {
		return x.ResultContent
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetOsVersionInfo() []byte {
	if x != nil {
		return x.OsVersionInfo
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetSystemInfo() []byte {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetLoadAddress() uint64 {
	if x != nil && x.LoadAddress != nil {
		return *x.LoadAddress
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetExceptionRecord() []byte {
	if x != nil {
		return x.ExceptionRecord
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetPortableOsVersionInfo() []byte {
	if x != nil {
		return x.PortableOsVersionInfo
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetPortableSystemInfo() []byte {
	if x != nil {
		return x.PortableSystemInfo
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetWasConverted() bool {
	if x != nil && x.WasConverted != nil {
		return *x.WasConverted
	}
	return false
}

func (x *CMsgClientServiceCallResponse) GetInternalResult() uint32 {
	if x != nil && x.InternalResult != nil {
		return *x.InternalResult
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetCurrentCount() uint32 {
	if x != nil && x.CurrentCount != nil {
		return *x.CurrentCount
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetLastCallHandle() uint32 {
	if x != nil && x.LastCallHandle != nil {
		return *x.LastCallHandle
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetLastCallModuleCrc() uint32 {
	if x != nil && x.LastCallModuleCrc != nil {
		return *x.LastCallModuleCrc
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetLastCallSysidRouting() []byte {
	if x != nil {
		return x.LastCallSysidRouting
	}
	return nil
}

func (x *CMsgClientServiceCallResponse) GetLastEcallresult() uint32 {
	if x != nil && x.LastEcallresult != nil {
		return *x.LastEcallresult
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetLastCallissueDelta() uint32 {
	if x != nil && x.LastCallissueDelta != nil {
		return *x.LastCallissueDelta
	}
	return 0
}

func (x *CMsgClientServiceCallResponse) GetLastCallcompleteDelta() uint32 {
	if x != nil && x.LastCallcompleteDelta != nil {
		return *x.LastCallcompleteDelta
	}
	return 0
}

type CMsgAMUnlockH264 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid    *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Platform *int32  `protobuf:"varint,2,opt,name=platform" json:"platform,omitempty"`
	Reason   *int32  `protobuf:"varint,3,opt,name=reason" json:"reason,omitempty"`
}

func (x *CMsgAMUnlockH264) Reset() {
	*x = CMsgAMUnlockH264{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMUnlockH264) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMUnlockH264) ProtoMessage() {}

func (x *CMsgAMUnlockH264) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMUnlockH264.ProtoReflect.Descriptor instead.
func (*CMsgAMUnlockH264) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{90}
}

func (x *CMsgAMUnlockH264) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgAMUnlockH264) GetPlatform() int32 {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return 0
}

func (x *CMsgAMUnlockH264) GetReason() int32 {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return 0
}

type CMsgAMUnlockH264Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult       *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	EncryptionKey []byte `protobuf:"bytes,2,opt,name=encryption_key,json=encryptionKey" json:"encryption_key,omitempty"`
}

// Default values for CMsgAMUnlockH264Response fields.
const (
	Default_CMsgAMUnlockH264Response_Eresult = int32(2)
)

func (x *CMsgAMUnlockH264Response) Reset() {
	*x = CMsgAMUnlockH264Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAMUnlockH264Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAMUnlockH264Response) ProtoMessage() {}

func (x *CMsgAMUnlockH264Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAMUnlockH264Response.ProtoReflect.Descriptor instead.
func (*CMsgAMUnlockH264Response) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{91}
}

func (x *CMsgAMUnlockH264Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgAMUnlockH264Response_Eresult
}

func (x *CMsgAMUnlockH264Response) GetEncryptionKey() []byte {
	if x != nil {
		return x.EncryptionKey
	}
	return nil
}

type CMsgClientPlayingSessionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayingBlocked *bool   `protobuf:"varint,2,opt,name=playing_blocked,json=playingBlocked" json:"playing_blocked,omitempty"`
	PlayingApp     *uint32 `protobuf:"varint,3,opt,name=playing_app,json=playingApp" json:"playing_app,omitempty"`
}

func (x *CMsgClientPlayingSessionState) Reset() {
	*x = CMsgClientPlayingSessionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPlayingSessionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPlayingSessionState) ProtoMessage() {}

func (x *CMsgClientPlayingSessionState) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPlayingSessionState.ProtoReflect.Descriptor instead.
func (*CMsgClientPlayingSessionState) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{92}
}

func (x *CMsgClientPlayingSessionState) GetPlayingBlocked() bool {
	if x != nil && x.PlayingBlocked != nil {
		return *x.PlayingBlocked
	}
	return false
}

func (x *CMsgClientPlayingSessionState) GetPlayingApp() uint32 {
	if x != nil && x.PlayingApp != nil {
		return *x.PlayingApp
	}
	return 0
}

type CMsgClientKickPlayingSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyStopGame *bool `protobuf:"varint,1,opt,name=only_stop_game,json=onlyStopGame" json:"only_stop_game,omitempty"`
}

func (x *CMsgClientKickPlayingSession) Reset() {
	*x = CMsgClientKickPlayingSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientKickPlayingSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientKickPlayingSession) ProtoMessage() {}

func (x *CMsgClientKickPlayingSession) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientKickPlayingSession.ProtoReflect.Descriptor instead.
func (*CMsgClientKickPlayingSession) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{93}
}

func (x *CMsgClientKickPlayingSession) GetOnlyStopGame() bool {
	if x != nil && x.OnlyStopGame != nil {
		return *x.OnlyStopGame
	}
	return false
}

type CMsgClientVoiceCallPreAuthorize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallerSteamid   *uint64 `protobuf:"fixed64,1,opt,name=caller_steamid,json=callerSteamid" json:"caller_steamid,omitempty"`
	ReceiverSteamid *uint64 `protobuf:"fixed64,2,opt,name=receiver_steamid,json=receiverSteamid" json:"receiver_steamid,omitempty"`
	CallerId        *int32  `protobuf:"varint,3,opt,name=caller_id,json=callerId" json:"caller_id,omitempty"`
	Hangup          *bool   `protobuf:"varint,4,opt,name=hangup" json:"hangup,omitempty"`
}

func (x *CMsgClientVoiceCallPreAuthorize) Reset() {
	*x = CMsgClientVoiceCallPreAuthorize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientVoiceCallPreAuthorize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientVoiceCallPreAuthorize) ProtoMessage() {}

func (x *CMsgClientVoiceCallPreAuthorize) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientVoiceCallPreAuthorize.ProtoReflect.Descriptor instead.
func (*CMsgClientVoiceCallPreAuthorize) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{94}
}

func (x *CMsgClientVoiceCallPreAuthorize) GetCallerSteamid() uint64 {
	if x != nil && x.CallerSteamid != nil {
		return *x.CallerSteamid
	}
	return 0
}

func (x *CMsgClientVoiceCallPreAuthorize) GetReceiverSteamid() uint64 {
	if x != nil && x.ReceiverSteamid != nil {
		return *x.ReceiverSteamid
	}
	return 0
}

func (x *CMsgClientVoiceCallPreAuthorize) GetCallerId() int32 {
	if x != nil && x.CallerId != nil {
		return *x.CallerId
	}
	return 0
}

func (x *CMsgClientVoiceCallPreAuthorize) GetHangup() bool {
	if x != nil && x.Hangup != nil {
		return *x.Hangup
	}
	return false
}

type CMsgClientVoiceCallPreAuthorizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallerSteamid   *uint64 `protobuf:"fixed64,1,opt,name=caller_steamid,json=callerSteamid" json:"caller_steamid,omitempty"`
	ReceiverSteamid *uint64 `protobuf:"fixed64,2,opt,name=receiver_steamid,json=receiverSteamid" json:"receiver_steamid,omitempty"`
	Eresult         *int32  `protobuf:"varint,3,opt,name=eresult,def=2" json:"eresult,omitempty"`
	CallerId        *int32  `protobuf:"varint,4,opt,name=caller_id,json=callerId" json:"caller_id,omitempty"`
}

// Default values for CMsgClientVoiceCallPreAuthorizeResponse fields.
const (
	Default_CMsgClientVoiceCallPreAuthorizeResponse_Eresult = int32(2)
)

func (x *CMsgClientVoiceCallPreAuthorizeResponse) Reset() {
	*x = CMsgClientVoiceCallPreAuthorizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientVoiceCallPreAuthorizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientVoiceCallPreAuthorizeResponse) ProtoMessage() {}

func (x *CMsgClientVoiceCallPreAuthorizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientVoiceCallPreAuthorizeResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientVoiceCallPreAuthorizeResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{95}
}

func (x *CMsgClientVoiceCallPreAuthorizeResponse) GetCallerSteamid() uint64 {
	if x != nil && x.CallerSteamid != nil {
		return *x.CallerSteamid
	}
	return 0
}

func (x *CMsgClientVoiceCallPreAuthorizeResponse) GetReceiverSteamid() uint64 {
	if x != nil && x.ReceiverSteamid != nil {
		return *x.ReceiverSteamid
	}
	return 0
}

func (x *CMsgClientVoiceCallPreAuthorizeResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientVoiceCallPreAuthorizeResponse_Eresult
}

func (x *CMsgClientVoiceCallPreAuthorizeResponse) GetCallerId() int32 {
	if x != nil && x.CallerId != nil {
		return *x.CallerId
	}
	return 0
}

type CMsgBadgeCraftedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	BadgeLevel *uint32 `protobuf:"varint,2,opt,name=badge_level,json=badgeLevel" json:"badge_level,omitempty"`
}

func (x *CMsgBadgeCraftedNotification) Reset() {
	*x = CMsgBadgeCraftedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBadgeCraftedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBadgeCraftedNotification) ProtoMessage() {}

func (x *CMsgBadgeCraftedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBadgeCraftedNotification.ProtoReflect.Descriptor instead.
func (*CMsgBadgeCraftedNotification) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{96}
}

func (x *CMsgBadgeCraftedNotification) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgBadgeCraftedNotification) GetBadgeLevel() uint32 {
	if x != nil && x.BadgeLevel != nil {
		return *x.BadgeLevel
	}
	return 0
}

type CMsgClientStartPeerContentServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid        *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	ClientRemoteId *uint64 `protobuf:"fixed64,2,opt,name=client_remote_id,json=clientRemoteId" json:"client_remote_id,omitempty"`
	AppId          *uint32 `protobuf:"varint,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	CurrentBuildId *uint32 `protobuf:"varint,4,opt,name=current_build_id,json=currentBuildId" json:"current_build_id,omitempty"`
}

func (x *CMsgClientStartPeerContentServer) Reset() {
	*x = CMsgClientStartPeerContentServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStartPeerContentServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStartPeerContentServer) ProtoMessage() {}

func (x *CMsgClientStartPeerContentServer) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStartPeerContentServer.ProtoReflect.Descriptor instead.
func (*CMsgClientStartPeerContentServer) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{97}
}

func (x *CMsgClientStartPeerContentServer) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientStartPeerContentServer) GetClientRemoteId() uint64 {
	if x != nil && x.ClientRemoteId != nil {
		return *x.ClientRemoteId
	}
	return 0
}

func (x *CMsgClientStartPeerContentServer) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientStartPeerContentServer) GetCurrentBuildId() uint32 {
	if x != nil && x.CurrentBuildId != nil {
		return *x.CurrentBuildId
	}
	return 0
}

type CMsgClientStartPeerContentServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          *uint32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	ServerPort      *uint32  `protobuf:"varint,2,opt,name=server_port,json=serverPort" json:"server_port,omitempty"`
	InstalledDepots []uint32 `protobuf:"varint,3,rep,name=installed_depots,json=installedDepots" json:"installed_depots,omitempty"`
	AccessToken     *uint64  `protobuf:"varint,4,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (x *CMsgClientStartPeerContentServerResponse) Reset() {
	*x = CMsgClientStartPeerContentServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStartPeerContentServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStartPeerContentServerResponse) ProtoMessage() {}

func (x *CMsgClientStartPeerContentServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStartPeerContentServerResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientStartPeerContentServerResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{98}
}

func (x *CMsgClientStartPeerContentServerResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgClientStartPeerContentServerResponse) GetServerPort() uint32 {
	if x != nil && x.ServerPort != nil {
		return *x.ServerPort
	}
	return 0
}

func (x *CMsgClientStartPeerContentServerResponse) GetInstalledDepots() []uint32 {
	if x != nil {
		return x.InstalledDepots
	}
	return nil
}

func (x *CMsgClientStartPeerContentServerResponse) GetAccessToken() uint64 {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return 0
}

type CMsgClientGetPeerContentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid           *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	ClientRemoteId    *uint64 `protobuf:"fixed64,2,opt,name=client_remote_id,json=clientRemoteId" json:"client_remote_id,omitempty"`
	OwnedGamesVisible *bool   `protobuf:"varint,3,opt,name=owned_games_visible,json=ownedGamesVisible" json:"owned_games_visible,omitempty"`
}

func (x *CMsgClientGetPeerContentInfo) Reset() {
	*x = CMsgClientGetPeerContentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetPeerContentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetPeerContentInfo) ProtoMessage() {}

func (x *CMsgClientGetPeerContentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetPeerContentInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientGetPeerContentInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{99}
}

func (x *CMsgClientGetPeerContentInfo) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgClientGetPeerContentInfo) GetClientRemoteId() uint64 {
	if x != nil && x.ClientRemoteId != nil {
		return *x.ClientRemoteId
	}
	return 0
}

func (x *CMsgClientGetPeerContentInfo) GetOwnedGamesVisible() bool {
	if x != nil && x.OwnedGamesVisible != nil {
		return *x.OwnedGamesVisible
	}
	return false
}

type CMsgClientGetPeerContentInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *uint32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Apps   []uint32 `protobuf:"varint,2,rep,name=apps" json:"apps,omitempty"`
}

func (x *CMsgClientGetPeerContentInfoResponse) Reset() {
	*x = CMsgClientGetPeerContentInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetPeerContentInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetPeerContentInfoResponse) ProtoMessage() {}

func (x *CMsgClientGetPeerContentInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetPeerContentInfoResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientGetPeerContentInfoResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{100}
}

func (x *CMsgClientGetPeerContentInfoResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CMsgClientGetPeerContentInfoResponse) GetApps() []uint32 {
	if x != nil {
		return x.Apps
	}
	return nil
}

type CMsgClientPendingGameLaunch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *CMsgClientPendingGameLaunch) Reset() {
	*x = CMsgClientPendingGameLaunch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPendingGameLaunch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPendingGameLaunch) ProtoMessage() {}

func (x *CMsgClientPendingGameLaunch) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPendingGameLaunch.ProtoReflect.Descriptor instead.
func (*CMsgClientPendingGameLaunch) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{101}
}

func (x *CMsgClientPendingGameLaunch) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type CMsgClientPendingGameLaunchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	AppId   *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Envkey  *string `protobuf:"bytes,3,opt,name=envkey" json:"envkey,omitempty"`
}

// Default values for CMsgClientPendingGameLaunchResponse fields.
const (
	Default_CMsgClientPendingGameLaunchResponse_Eresult = int32(2)
)

func (x *CMsgClientPendingGameLaunchResponse) Reset() {
	*x = CMsgClientPendingGameLaunchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPendingGameLaunchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPendingGameLaunchResponse) ProtoMessage() {}

func (x *CMsgClientPendingGameLaunchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPendingGameLaunchResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientPendingGameLaunchResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{102}
}

func (x *CMsgClientPendingGameLaunchResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientPendingGameLaunchResponse_Eresult
}

func (x *CMsgClientPendingGameLaunchResponse) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientPendingGameLaunchResponse) GetEnvkey() string {
	if x != nil && x.Envkey != nil {
		return *x.Envkey
	}
	return ""
}

type CMsgClientRichPresenceInfo_RichPresence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamidUser    *uint64 `protobuf:"fixed64,1,opt,name=steamid_user,json=steamidUser" json:"steamid_user,omitempty"`
	RichPresenceKv []byte  `protobuf:"bytes,2,opt,name=rich_presence_kv,json=richPresenceKv" json:"rich_presence_kv,omitempty"`
}

func (x *CMsgClientRichPresenceInfo_RichPresence) Reset() {
	*x = CMsgClientRichPresenceInfo_RichPresence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientRichPresenceInfo_RichPresence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientRichPresenceInfo_RichPresence) ProtoMessage() {}

func (x *CMsgClientRichPresenceInfo_RichPresence) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientRichPresenceInfo_RichPresence.ProtoReflect.Descriptor instead.
func (*CMsgClientRichPresenceInfo_RichPresence) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgClientRichPresenceInfo_RichPresence) GetSteamidUser() uint64 {
	if x != nil && x.SteamidUser != nil {
		return *x.SteamidUser
	}
	return 0
}

func (x *CMsgClientRichPresenceInfo_RichPresence) GetRichPresenceKv() []byte {
	if x != nil {
		return x.RichPresenceKv
	}
	return nil
}

type CMsgClientCheckAppBetaPasswordResponse_BetaPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Betaname        *string `protobuf:"bytes,1,opt,name=betaname" json:"betaname,omitempty"`
	Betapassword    *string `protobuf:"bytes,2,opt,name=betapassword" json:"betapassword,omitempty"`
	Betadescription *string `protobuf:"bytes,3,opt,name=betadescription" json:"betadescription,omitempty"`
}

func (x *CMsgClientCheckAppBetaPasswordResponse_BetaPassword) Reset() {
	*x = CMsgClientCheckAppBetaPasswordResponse_BetaPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientCheckAppBetaPasswordResponse_BetaPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientCheckAppBetaPasswordResponse_BetaPassword) ProtoMessage() {}

func (x *CMsgClientCheckAppBetaPasswordResponse_BetaPassword) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientCheckAppBetaPasswordResponse_BetaPassword.ProtoReflect.Descriptor instead.
func (*CMsgClientCheckAppBetaPasswordResponse_BetaPassword) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{23, 0}
}

func (x *CMsgClientCheckAppBetaPasswordResponse_BetaPassword) GetBetaname() string {
	if x != nil && x.Betaname != nil {
		return *x.Betaname
	}
	return ""
}

func (x *CMsgClientCheckAppBetaPasswordResponse_BetaPassword) GetBetapassword() string {
	if x != nil && x.Betapassword != nil {
		return *x.Betapassword
	}
	return ""
}

func (x *CMsgClientCheckAppBetaPasswordResponse_BetaPassword) GetBetadescription() string {
	if x != nil && x.Betadescription != nil {
		return *x.Betadescription
	}
	return ""
}

type CMsgClientUGSGetGlobalStatsResponse_Day struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayId *uint32                                         `protobuf:"varint,1,opt,name=day_id,json=dayId" json:"day_id,omitempty"`
	Stats []*CMsgClientUGSGetGlobalStatsResponse_Day_Stat `protobuf:"bytes,2,rep,name=stats" json:"stats,omitempty"`
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day) Reset() {
	*x = CMsgClientUGSGetGlobalStatsResponse_Day{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUGSGetGlobalStatsResponse_Day) ProtoMessage() {}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUGSGetGlobalStatsResponse_Day.ProtoReflect.Descriptor instead.
func (*CMsgClientUGSGetGlobalStatsResponse_Day) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{25, 0}
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day) GetDayId() uint32 {
	if x != nil && x.DayId != nil {
		return *x.DayId
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day) GetStats() []*CMsgClientUGSGetGlobalStatsResponse_Day_Stat {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CMsgClientUGSGetGlobalStatsResponse_Day_Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatId *int32 `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	Data   *int64 `protobuf:"varint,2,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day_Stat) Reset() {
	*x = CMsgClientUGSGetGlobalStatsResponse_Day_Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day_Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUGSGetGlobalStatsResponse_Day_Stat) ProtoMessage() {}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day_Stat) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUGSGetGlobalStatsResponse_Day_Stat.ProtoReflect.Descriptor instead.
func (*CMsgClientUGSGetGlobalStatsResponse_Day_Stat) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{25, 0, 0}
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day_Stat) GetStatId() int32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgClientUGSGetGlobalStatsResponse_Day_Stat) GetData() int64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgClientItemAnnouncements_UnseenItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid         *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ContextId     *uint64 `protobuf:"varint,2,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
	AssetId       *uint64 `protobuf:"varint,3,opt,name=asset_id,json=assetId" json:"asset_id,omitempty"`
	Amount        *uint64 `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
	Rtime32Gained *uint32 `protobuf:"fixed32,5,opt,name=rtime32_gained,json=rtime32Gained" json:"rtime32_gained,omitempty"`
	SourceAppid   *uint32 `protobuf:"varint,6,opt,name=source_appid,json=sourceAppid" json:"source_appid,omitempty"`
}

func (x *CMsgClientItemAnnouncements_UnseenItem) Reset() {
	*x = CMsgClientItemAnnouncements_UnseenItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientItemAnnouncements_UnseenItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientItemAnnouncements_UnseenItem) ProtoMessage() {}

func (x *CMsgClientItemAnnouncements_UnseenItem) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientItemAnnouncements_UnseenItem.ProtoReflect.Descriptor instead.
func (*CMsgClientItemAnnouncements_UnseenItem) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{45, 0}
}

func (x *CMsgClientItemAnnouncements_UnseenItem) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientItemAnnouncements_UnseenItem) GetContextId() uint64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

func (x *CMsgClientItemAnnouncements_UnseenItem) GetAssetId() uint64 {
	if x != nil && x.AssetId != nil {
		return *x.AssetId
	}
	return 0
}

func (x *CMsgClientItemAnnouncements_UnseenItem) GetAmount() uint64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *CMsgClientItemAnnouncements_UnseenItem) GetRtime32Gained() uint32 {
	if x != nil && x.Rtime32Gained != nil {
		return *x.Rtime32Gained
	}
	return 0
}

func (x *CMsgClientItemAnnouncements_UnseenItem) GetSourceAppid() uint32 {
	if x != nil && x.SourceAppid != nil {
		return *x.SourceAppid
	}
	return 0
}

type CMsgClientUserNotifications_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNotificationType *uint32 `protobuf:"varint,1,opt,name=user_notification_type,json=userNotificationType" json:"user_notification_type,omitempty"`
	Count                *uint32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *CMsgClientUserNotifications_Notification) Reset() {
	*x = CMsgClientUserNotifications_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUserNotifications_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUserNotifications_Notification) ProtoMessage() {}

func (x *CMsgClientUserNotifications_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUserNotifications_Notification.ProtoReflect.Descriptor instead.
func (*CMsgClientUserNotifications_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{47, 0}
}

func (x *CMsgClientUserNotifications_Notification) GetUserNotificationType() uint32 {
	if x != nil && x.UserNotificationType != nil {
		return *x.UserNotificationType
	}
	return 0
}

func (x *CMsgClientUserNotifications_Notification) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Timestamp *uint32 `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Message   *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Unread    *bool   `protobuf:"varint,4,opt,name=unread" json:"unread,omitempty"`
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) Reset() {
	*x = CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) ProtoMessage() {}

func (x *CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage.ProtoReflect.Descriptor instead.
func (*CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{53, 0}
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage) GetUnread() bool {
	if x != nil && x.Unread != nil {
		return *x.Unread
	}
	return false
}

type CMsgClientFSGetFriendsSteamLevelsResponse_Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Level     *uint32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse_Friend) Reset() {
	*x = CMsgClientFSGetFriendsSteamLevelsResponse_Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse_Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFSGetFriendsSteamLevelsResponse_Friend) ProtoMessage() {}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse_Friend) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFSGetFriendsSteamLevelsResponse_Friend.ProtoReflect.Descriptor instead.
func (*CMsgClientFSGetFriendsSteamLevelsResponse_Friend) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{56, 0}
}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse_Friend) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CMsgClientFSGetFriendsSteamLevelsResponse_Friend) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

type CMsgCREItemVoteSummary_PublishedFileId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedFileId *uint64 `protobuf:"fixed64,1,opt,name=published_file_id,json=publishedFileId" json:"published_file_id,omitempty"`
}

func (x *CMsgCREItemVoteSummary_PublishedFileId) Reset() {
	*x = CMsgCREItemVoteSummary_PublishedFileId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREItemVoteSummary_PublishedFileId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREItemVoteSummary_PublishedFileId) ProtoMessage() {}

func (x *CMsgCREItemVoteSummary_PublishedFileId) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREItemVoteSummary_PublishedFileId.ProtoReflect.Descriptor instead.
func (*CMsgCREItemVoteSummary_PublishedFileId) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{58, 0}
}

func (x *CMsgCREItemVoteSummary_PublishedFileId) GetPublishedFileId() uint64 {
	if x != nil && x.PublishedFileId != nil {
		return *x.PublishedFileId
	}
	return 0
}

type CMsgCREItemVoteSummaryResponse_ItemVoteSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedFileId *uint64  `protobuf:"fixed64,1,opt,name=published_file_id,json=publishedFileId" json:"published_file_id,omitempty"`
	VotesFor        *int32   `protobuf:"varint,2,opt,name=votes_for,json=votesFor" json:"votes_for,omitempty"`
	VotesAgainst    *int32   `protobuf:"varint,3,opt,name=votes_against,json=votesAgainst" json:"votes_against,omitempty"`
	Reports         *int32   `protobuf:"varint,4,opt,name=reports" json:"reports,omitempty"`
	Score           *float32 `protobuf:"fixed32,5,opt,name=score" json:"score,omitempty"`
}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) Reset() {
	*x = CMsgCREItemVoteSummaryResponse_ItemVoteSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREItemVoteSummaryResponse_ItemVoteSummary) ProtoMessage() {}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREItemVoteSummaryResponse_ItemVoteSummary.ProtoReflect.Descriptor instead.
func (*CMsgCREItemVoteSummaryResponse_ItemVoteSummary) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{59, 0}
}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) GetPublishedFileId() uint64 {
	if x != nil && x.PublishedFileId != nil {
		return *x.PublishedFileId
	}
	return 0
}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) GetVotesFor() int32 {
	if x != nil && x.VotesFor != nil {
		return *x.VotesFor
	}
	return 0
}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) GetVotesAgainst() int32 {
	if x != nil && x.VotesAgainst != nil {
		return *x.VotesAgainst
	}
	return 0
}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) GetReports() int32 {
	if x != nil && x.Reports != nil {
		return *x.Reports
	}
	return 0
}

func (x *CMsgCREItemVoteSummaryResponse_ItemVoteSummary) GetScore() float32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedFileId *uint64 `protobuf:"fixed64,1,opt,name=published_file_id,json=publishedFileId" json:"published_file_id,omitempty"`
}

func (x *CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId) Reset() {
	*x = CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId) ProtoMessage() {}

func (x *CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId.ProtoReflect.Descriptor instead.
func (*CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{62, 0}
}

func (x *CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId) GetPublishedFileId() uint64 {
	if x != nil && x.PublishedFileId != nil {
		return *x.PublishedFileId
	}
	return 0
}

type CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishedFileId *uint64 `protobuf:"fixed64,1,opt,name=published_file_id,json=publishedFileId" json:"published_file_id,omitempty"`
	Vote            *int32  `protobuf:"varint,2,opt,name=vote,def=0" json:"vote,omitempty"`
}

// Default values for CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail fields.
const (
	Default_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_Vote = int32(0)
)

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail) Reset() {
	*x = CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail) ProtoMessage() {}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail.ProtoReflect.Descriptor instead.
func (*CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{63, 0}
}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail) GetPublishedFileId() uint64 {
	if x != nil && x.PublishedFileId != nil {
		return *x.PublishedFileId
	}
	return 0
}

func (x *CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail) GetVote() int32 {
	if x != nil && x.Vote != nil {
		return *x.Vote
	}
	return Default_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_Vote
}

type CMsgClientUseLocalDeviceAuthorizations_DeviceToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAccountId *uint32 `protobuf:"varint,1,opt,name=owner_account_id,json=ownerAccountId" json:"owner_account_id,omitempty"`
	TokenId        *uint64 `protobuf:"varint,2,opt,name=token_id,json=tokenId" json:"token_id,omitempty"`
}

func (x *CMsgClientUseLocalDeviceAuthorizations_DeviceToken) Reset() {
	*x = CMsgClientUseLocalDeviceAuthorizations_DeviceToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUseLocalDeviceAuthorizations_DeviceToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUseLocalDeviceAuthorizations_DeviceToken) ProtoMessage() {}

func (x *CMsgClientUseLocalDeviceAuthorizations_DeviceToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUseLocalDeviceAuthorizations_DeviceToken.ProtoReflect.Descriptor instead.
func (*CMsgClientUseLocalDeviceAuthorizations_DeviceToken) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{82, 0}
}

func (x *CMsgClientUseLocalDeviceAuthorizations_DeviceToken) GetOwnerAccountId() uint32 {
	if x != nil && x.OwnerAccountId != nil {
		return *x.OwnerAccountId
	}
	return 0
}

func (x *CMsgClientUseLocalDeviceAuthorizations_DeviceToken) GetTokenId() uint64 {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return 0
}

type CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthDeviceToken *uint64 `protobuf:"varint,1,opt,name=auth_device_token,json=authDeviceToken" json:"auth_device_token,omitempty"`
	DeviceName      *string `protobuf:"bytes,2,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	LastAccessTime  *uint32 `protobuf:"varint,3,opt,name=last_access_time,json=lastAccessTime" json:"last_access_time,omitempty"`
	BorrowerId      *uint32 `protobuf:"varint,4,opt,name=borrower_id,json=borrowerId" json:"borrower_id,omitempty"`
	IsPending       *bool   `protobuf:"varint,5,opt,name=is_pending,json=isPending" json:"is_pending,omitempty"`
	AppPlayed       *uint32 `protobuf:"varint,6,opt,name=app_played,json=appPlayed" json:"app_played,omitempty"`
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) Reset() {
	*x = CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) ProtoMessage() {}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice.ProtoReflect.Descriptor instead.
func (*CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{84, 0}
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) GetAuthDeviceToken() uint64 {
	if x != nil && x.AuthDeviceToken != nil {
		return *x.AuthDeviceToken
	}
	return 0
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) GetLastAccessTime() uint32 {
	if x != nil && x.LastAccessTime != nil {
		return *x.LastAccessTime
	}
	return 0
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) GetBorrowerId() uint32 {
	if x != nil && x.BorrowerId != nil {
		return *x.BorrowerId
	}
	return 0
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) GetIsPending() bool {
	if x != nil && x.IsPending != nil {
		return *x.IsPending
	}
	return false
}

func (x *CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice) GetAppPlayed() uint32 {
	if x != nil && x.AppPlayed != nil {
		return *x.AppPlayed
	}
	return 0
}

type CMsgClientSharedLibraryLockStatus_LockedLibrary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId  *uint32 `protobuf:"varint,1,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
	LockedBy *uint32 `protobuf:"varint,2,opt,name=locked_by,json=lockedBy" json:"locked_by,omitempty"`
}

func (x *CMsgClientSharedLibraryLockStatus_LockedLibrary) Reset() {
	*x = CMsgClientSharedLibraryLockStatus_LockedLibrary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientSharedLibraryLockStatus_LockedLibrary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSharedLibraryLockStatus_LockedLibrary) ProtoMessage() {}

func (x *CMsgClientSharedLibraryLockStatus_LockedLibrary) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSharedLibraryLockStatus_LockedLibrary.ProtoReflect.Descriptor instead.
func (*CMsgClientSharedLibraryLockStatus_LockedLibrary) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{85, 0}
}

func (x *CMsgClientSharedLibraryLockStatus_LockedLibrary) GetOwnerId() uint32 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

func (x *CMsgClientSharedLibraryLockStatus_LockedLibrary) GetLockedBy() uint32 {
	if x != nil && x.LockedBy != nil {
		return *x.LockedBy
	}
	return 0
}

type CMsgClientSharedLibraryStopPlaying_StopApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	OwnerId *uint32 `protobuf:"varint,2,opt,name=owner_id,json=ownerId" json:"owner_id,omitempty"`
}

func (x *CMsgClientSharedLibraryStopPlaying_StopApp) Reset() {
	*x = CMsgClientSharedLibraryStopPlaying_StopApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_2_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientSharedLibraryStopPlaying_StopApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSharedLibraryStopPlaying_StopApp) ProtoMessage() {}

func (x *CMsgClientSharedLibraryStopPlaying_StopApp) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_2_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSharedLibraryStopPlaying_StopApp.ProtoReflect.Descriptor instead.
func (*CMsgClientSharedLibraryStopPlaying_StopApp) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_2_proto_rawDescGZIP(), []int{86, 0}
}

func (x *CMsgClientSharedLibraryStopPlaying_StopApp) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientSharedLibraryStopPlaying_StopApp) GetOwnerId() uint32 {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return 0
}

var File_steammessages_clientserver_2_proto protoreflect.FileDescriptor

var file_steammessages_clientserver_2_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x32, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5,
	0x01, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x5f, 0x69, 0x64, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x49, 0x64,
	0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x75, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x69, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x72, 0x69, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4b, 0x76,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x5f, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x06, 0x52, 0x10, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x48, 0x0a,
	0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x69, 0x63, 0x68, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x06, 0x52, 0x0e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x69, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4d, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x69, 0x63, 0x68, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x68, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0x5b, 0x0a, 0x0c, 0x52, 0x69, 0x63, 0x68, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x68,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x76, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0e, 0x72, 0x69, 0x63, 0x68, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x4b, 0x76, 0x22, 0x35, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xf6, 0x02, 0x0a, 0x24, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x67, 0x65, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x1a, 0x65, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x65, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x22, 0x6d, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x75, 0x62, 0x74, 0x6f, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x75, 0x62, 0x74, 0x6f, 0x72, 0x65, 0x61,
	0x64, 0x22, 0xae, 0x02, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x6c,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x62, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x75, 0x62, 0x72, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0x99, 0x02, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x62, 0x74, 0x6f, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x62, 0x74,
	0x6f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x74, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6f, 0x74, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x74, 0x70, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6f, 0x74, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x29,
	0x0a, 0x10, 0x6f, 0x74, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6f, 0x74, 0x70, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x74, 0x70,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x72, 0x69, 0x66, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x6f, 0x74, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x72, 0x69, 0x66, 0x74, 0x22, 0xc9,
	0x02, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x6c, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x62, 0x77, 0x72, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x75, 0x62, 0x77, 0x72, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x74, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f,
	0x74, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x74, 0x70, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x74, 0x70, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x70,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x15, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa5, 0x01, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb6, 0x02,
	0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4f, 0x45, 0x4d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x62, 0x69, 0x6f, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x69, 0x6f, 0x73, 0x4d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x62,
	0x69, 0x6f, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x69, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x6d,
	0x61, 0x69, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x61, 0x69,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x61, 0x69, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x35, 0x0a, 0x16, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x45, 0x4d, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x65, 0x6d, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x6f, 0x65, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x65, 0x22, 0x40, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x45, 0x4d, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x63, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x43, 0x4d,
	0x73, 0x67, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa3, 0x04, 0x0a,
	0x21, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x38, 0x0a,
	0x18, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x65, 0x77, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x65, 0x77, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x50, 0x0a, 0x25, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x21, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x4c, 0x0a, 0x23, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x1f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x79, 0x73, 0x22, 0x45, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x18, 0x43, 0x4d, 0x73,
	0x67, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x1f, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x74,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22,
	0x93, 0x01, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52,
	0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x77, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x42, 0x65, 0x74, 0x61, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x65, 0x74, 0x61, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x74, 0x61, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x9b,
	0x02, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x41, 0x70, 0x70, 0x42, 0x65, 0x74, 0x61, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5a, 0x0a, 0x0d, 0x62, 0x65, 0x74, 0x61, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x42, 0x65, 0x74, 0x61, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x65, 0x74, 0x61, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x0d, 0x62, 0x65, 0x74, 0x61, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x1a, 0x78, 0x0a, 0x0c, 0x42, 0x65, 0x74, 0x61, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x74, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x74, 0x61, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x65, 0x74, 0x61, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x74, 0x61, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x65, 0x74, 0x61, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x65, 0x74,
	0x61, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe6, 0x01, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x47, 0x53, 0x47, 0x65,
	0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x64, 0x61, 0x79, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x61, 0x79, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x73, 0x5f, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x73, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0xd8, 0x02, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x47, 0x53, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01,
	0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64,
	0x61, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x47, 0x53, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x1a, 0x96, 0x01, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x12,
	0x15, 0x0a, 0x06, 0x64, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x64, 0x61, 0x79, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x55, 0x47, 0x53, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x79, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x33, 0x0a, 0x04, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x3f, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x47, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73, 0x49,
	0x64, 0x22, 0x85, 0x01, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x47, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x75, 0x73,
	0x74, 0x4f, 0x77, 0x6e, 0x41, 0x70, 0x70, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x1f, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x6e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x5f, 0x63, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x43, 0x6c, 0x61, 0x6e,
	0x73, 0x22, 0x46, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x61, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32,
	0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x19, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x47, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x61, 0x72, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x76, 0x61, 0x72, 0x61, 0x72, 0x67, 0x73, 0x22, 0x70, 0x0a, 0x16, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x47, 0x53, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x42, 0x75, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x67, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x67, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x43, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73,
	0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x63, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x63, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x70,
	0x22, 0x36, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x24, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72,
	0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d,
	0x0a, 0x12, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x69, 0x64, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x52, 0x4d,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x72, 0x61, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x64, 0x72,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x67, 0x75, 0x69, 0x64, 0x44, 0x72, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x75, 0x69, 0x64, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x72, 0x61, 0x73, 0x68, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xcd, 0x02, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x52, 0x4d, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52,
	0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x6c, 0x6f,
	0x62, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x14,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x66,
	0x73, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x66, 0x73, 0x49, 0x70, 0x12, 0x33, 0x0a,
	0x16, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64,
	0x66, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x66, 0x73, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22,
	0xca, 0x02, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x52, 0x4d, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6c,
	0x6f, 0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x62, 0x6c, 0x6f, 0x62, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x66, 0x73, 0x5f,
	0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x66, 0x73, 0x49, 0x70, 0x12, 0x33, 0x0a, 0x16, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x66, 0x73,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x66, 0x73, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x3d, 0x0a, 0x1e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x50, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x49, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x26,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x50, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x10,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53,
	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x58, 0x0a,
	0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x50, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x50, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x73, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72,
	0x67, 0x6f, 0x74, 0x74, 0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x72, 0x69, 0x65, 0x64, 0x22, 0x7b, 0x0a,
	0x2f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x74, 0x65, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73,
	0x65, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x73, 0x65, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x02, 0x0a, 0x1b, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x55, 0x6e, 0x73, 0x65, 0x65, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x65, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xbe,
	0x01, 0x0a, 0x0a, 0x55, 0x6e, 0x73, 0x65, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x33, 0x32,
	0x5f, 0x67, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0d, 0x72,
	0x74, 0x69, 0x6d, 0x65, 0x33, 0x32, 0x47, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x70, 0x70, 0x69, 0x64, 0x22,
	0x24, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5a, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e,
	0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x77,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x20,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x65, 0x77,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x94,
	0x01, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1a, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a,
	0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x22, 0xbc, 0x02, 0x0a, 0x2d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x58, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x1a, 0x7d, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x22,
	0x39, 0x0a, 0x37, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x43, 0x0a, 0x21, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x53, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x73, 0x22,
	0xb6, 0x01, 0x0a, 0x29, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x53,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x53, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x1a, 0x3c, 0x0a, 0x06, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xc6, 0x02, 0x0a, 0x17, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x12, 0x45, 0x0a, 0x1f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x63, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x57, 0x0a, 0x29, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x71, 0x61,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x24, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x71, 0x61, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0xae, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x49, 0x74, 0x65,
	0x6d, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x55, 0x0a, 0x12,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x52, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x52, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x22, 0xd0, 0x02, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x49, 0x74,
	0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x5f, 0x0a, 0x13, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0xaf, 0x01, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x41, 0x67,
	0x61, 0x69, 0x6e, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x69, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x6f, 0x74, 0x65, 0x55, 0x70,
	0x22, 0x49, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x26,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x65, 0x0a, 0x12, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x10, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x3d, 0x0a,
	0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x9f, 0x02, 0x0a,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x77, 0x0a, 0x16,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x52, 0x45, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x57, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x04, 0x76, 0x6f, 0x74, 0x65, 0x22, 0x33,
	0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x53, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x53, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x01, 0x30, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x14, 0x43,
	0x4d, 0x73, 0x67, 0x46, 0x53, 0x47, 0x65, 0x74, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x65,
	0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x53, 0x47, 0x65, 0x74, 0x49, 0x73, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0c, 0x69,
	0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x22, 0x3f, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x53, 0x45,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x85, 0x01, 0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x46,
	0x53, 0x45, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x06, 0x52, 0x08, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x37,
	0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x50, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x27, 0x43, 0x4d, 0x73, 0x67, 0x44,
	0x50, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x86, 0x01, 0x0a, 0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1a,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x18, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x10, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x49, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x69, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x69, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x22, 0x47, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x55, 0x52, 0x4c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x61, 0x6e, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x22, 0xae, 0x01, 0x0a,
	0x25, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x97, 0x01,
	0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x2a, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x22,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x65, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x64, 0x65, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x40, 0x0a, 0x1c, 0x64, 0x65, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x64, 0x65, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x78, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c,
	0x0a, 0x1a, 0x64, 0x65, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x18, 0x64, 0x65, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x90, 0x02, 0x0a,
	0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x16, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x58, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x52, 0x0a, 0x0b, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22,
	0x20, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0x97, 0x03, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32,
	0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x65, 0x0a, 0x11, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x10,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0xe8, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x70, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x70, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x21,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x57, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x31, 0x0a, 0x15, 0x6f, 0x77,
	0x6e, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6f, 0x77, 0x6e, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x1a, 0x47, 0x0a,
	0x0d, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x42, 0x79, 0x22, 0xce, 0x01, 0x0a, 0x22, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61,
	0x72, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x4c, 0x65, 0x66, 0x74,
	0x12, 0x48, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x74, 0x6f,
	0x70, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x70, 0x70,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x73, 0x1a, 0x3b, 0x0a, 0x07, 0x53, 0x74,
	0x6f, 0x70, 0x41, 0x70, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x79, 0x73, 0x69, 0x64, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x43, 0x72, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x63, 0x75, 0x62, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x61, 0x6c,
	0x6c, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70,
	0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x78, 0x5f, 0x6f,
	0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x61, 0x78, 0x4f, 0x75, 0x74, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x8a, 0x07, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x69, 0x64,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x73, 0x79, 0x73, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x63, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x37, 0x0a,
	0x18, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x15, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x61, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x77, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x63, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x43, 0x72, 0x63, 0x12, 0x35, 0x0a, 0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x79, 0x73, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x53, 0x79, 0x73, 0x69, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x63, 0x61,
	0x6c, 0x6c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x17, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6c, 0x61, 0x73,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x22, 0x5c, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x32, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x5e, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x4d, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x32, 0x36, 0x34, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32,
	0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x22, 0x69, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79,
	0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x22, 0x44, 0x0a, 0x1c, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6f,
	0x6e, 0x6c, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x47, 0x61, 0x6d,
	0x65, 0x22, 0xa8, 0x01, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x6e, 0x67, 0x75, 0x70, 0x22, 0xb5, 0x01, 0x0a,
	0x27, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x6f, 0x69, 0x63, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x61, 0x64, 0x67,
	0x65, 0x43, 0x72, 0x61, 0x66, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x20,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x28, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x44, 0x65, 0x70, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x1c, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x13, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6f, 0x77, 0x6e,
	0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x52,
	0x0a, 0x24, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x50,
	0x65, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x22, 0x34, 0x0a, 0x1b, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x23, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d,
	0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x6b, 0x65, 0x79, 0x42, 0x05, 0x48, 0x01, 0x80,
	0x01, 0x00,
}

var (
	file_steammessages_clientserver_2_proto_rawDescOnce sync.Once
	file_steammessages_clientserver_2_proto_rawDescData = file_steammessages_clientserver_2_proto_rawDesc
)

func file_steammessages_clientserver_2_proto_rawDescGZIP() []byte {
	file_steammessages_clientserver_2_proto_rawDescOnce.Do(func() {
		file_steammessages_clientserver_2_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_clientserver_2_proto_rawDescData)
	})
	return file_steammessages_clientserver_2_proto_rawDescData
}

var file_steammessages_clientserver_2_proto_msgTypes = make([]protoimpl.MessageInfo, 119)
var file_steammessages_clientserver_2_proto_goTypes = []any{
	(*CMsgClientUpdateUserGameInfo)(nil),                                      // 0: CMsgClientUpdateUserGameInfo
	(*CMsgClientRichPresenceUpload)(nil),                                      // 1: CMsgClientRichPresenceUpload
	(*CMsgClientRichPresenceRequest)(nil),                                     // 2: CMsgClientRichPresenceRequest
	(*CMsgClientRichPresenceInfo)(nil),                                        // 3: CMsgClientRichPresenceInfo
	(*CMsgClientCheckFileSignature)(nil),                                      // 4: CMsgClientCheckFileSignature
	(*CMsgClientCheckFileSignatureResponse)(nil),                              // 5: CMsgClientCheckFileSignatureResponse
	(*CMsgClientReadMachineAuth)(nil),                                         // 6: CMsgClientReadMachineAuth
	(*CMsgClientReadMachineAuthResponse)(nil),                                 // 7: CMsgClientReadMachineAuthResponse
	(*CMsgClientUpdateMachineAuth)(nil),                                       // 8: CMsgClientUpdateMachineAuth
	(*CMsgClientUpdateMachineAuthResponse)(nil),                               // 9: CMsgClientUpdateMachineAuthResponse
	(*CMsgClientRegisterKey)(nil),                                             // 10: CMsgClientRegisterKey
	(*CMsgClientPurchaseResponse)(nil),                                        // 11: CMsgClientPurchaseResponse
	(*CMsgClientActivateOEMLicense)(nil),                                      // 12: CMsgClientActivateOEMLicense
	(*CMsgClientRegisterOEMMachine)(nil),                                      // 13: CMsgClientRegisterOEMMachine
	(*CMsgClientRegisterOEMMachineResponse)(nil),                              // 14: CMsgClientRegisterOEMMachineResponse
	(*CMsgClientPurchaseWithMachineID)(nil),                                   // 15: CMsgClientPurchaseWithMachineID
	(*CMsgTrading_InitiateTradeRequest)(nil),                                  // 16: CMsgTrading_InitiateTradeRequest
	(*CMsgTrading_InitiateTradeResponse)(nil),                                 // 17: CMsgTrading_InitiateTradeResponse
	(*CMsgTrading_CancelTradeRequest)(nil),                                    // 18: CMsgTrading_CancelTradeRequest
	(*CMsgTrading_StartSession)(nil),                                          // 19: CMsgTrading_StartSession
	(*CMsgClientGetDepotDecryptionKey)(nil),                                   // 20: CMsgClientGetDepotDecryptionKey
	(*CMsgClientGetDepotDecryptionKeyResponse)(nil),                           // 21: CMsgClientGetDepotDecryptionKeyResponse
	(*CMsgClientCheckAppBetaPassword)(nil),                                    // 22: CMsgClientCheckAppBetaPassword
	(*CMsgClientCheckAppBetaPasswordResponse)(nil),                            // 23: CMsgClientCheckAppBetaPasswordResponse
	(*CMsgClientUGSGetGlobalStats)(nil),                                       // 24: CMsgClientUGSGetGlobalStats
	(*CMsgClientUGSGetGlobalStatsResponse)(nil),                               // 25: CMsgClientUGSGetGlobalStatsResponse
	(*CMsgClientRedeemGuestPass)(nil),                                         // 26: CMsgClientRedeemGuestPass
	(*CMsgClientRedeemGuestPassResponse)(nil),                                 // 27: CMsgClientRedeemGuestPassResponse
	(*CMsgClientGetClanActivityCounts)(nil),                                   // 28: CMsgClientGetClanActivityCounts
	(*CMsgClientGetClanActivityCountsResponse)(nil),                           // 29: CMsgClientGetClanActivityCountsResponse
	(*CMsgClientOGSReportString)(nil),                                         // 30: CMsgClientOGSReportString
	(*CMsgClientOGSReportBug)(nil),                                            // 31: CMsgClientOGSReportBug
	(*CMsgClientSentLogs)(nil),                                                // 32: CMsgClientSentLogs
	(*CMsgGCClient)(nil),                                                      // 33: CMsgGCClient
	(*CMsgClientRequestFreeLicense)(nil),                                      // 34: CMsgClientRequestFreeLicense
	(*CMsgClientRequestFreeLicenseResponse)(nil),                              // 35: CMsgClientRequestFreeLicenseResponse
	(*CMsgDRMDownloadRequestWithCrashData)(nil),                               // 36: CMsgDRMDownloadRequestWithCrashData
	(*CMsgDRMDownloadResponse)(nil),                                           // 37: CMsgDRMDownloadResponse
	(*CMsgDRMFinalResult)(nil),                                                // 38: CMsgDRMFinalResult
	(*CMsgClientDPCheckSpecialSurvey)(nil),                                    // 39: CMsgClientDPCheckSpecialSurvey
	(*CMsgClientDPCheckSpecialSurveyResponse)(nil),                            // 40: CMsgClientDPCheckSpecialSurveyResponse
	(*CMsgClientDPSendSpecialSurveyResponse)(nil),                             // 41: CMsgClientDPSendSpecialSurveyResponse
	(*CMsgClientDPSendSpecialSurveyResponseReply)(nil),                        // 42: CMsgClientDPSendSpecialSurveyResponseReply
	(*CMsgClientRequestForgottenPasswordEmail)(nil),                           // 43: CMsgClientRequestForgottenPasswordEmail
	(*CMsgClientRequestForgottenPasswordEmailResponse)(nil),                   // 44: CMsgClientRequestForgottenPasswordEmailResponse
	(*CMsgClientItemAnnouncements)(nil),                                       // 45: CMsgClientItemAnnouncements
	(*CMsgClientRequestItemAnnouncements)(nil),                                // 46: CMsgClientRequestItemAnnouncements
	(*CMsgClientUserNotifications)(nil),                                       // 47: CMsgClientUserNotifications
	(*CMsgClientCommentNotifications)(nil),                                    // 48: CMsgClientCommentNotifications
	(*CMsgClientRequestCommentNotifications)(nil),                             // 49: CMsgClientRequestCommentNotifications
	(*CMsgClientOfflineMessageNotification)(nil),                              // 50: CMsgClientOfflineMessageNotification
	(*CMsgClientRequestOfflineMessageCount)(nil),                              // 51: CMsgClientRequestOfflineMessageCount
	(*CMsgClientChatGetFriendMessageHistory)(nil),                             // 52: CMsgClientChatGetFriendMessageHistory
	(*CMsgClientChatGetFriendMessageHistoryResponse)(nil),                     // 53: CMsgClientChatGetFriendMessageHistoryResponse
	(*CMsgClientChatGetFriendMessageHistoryForOfflineMessages)(nil),           // 54: CMsgClientChatGetFriendMessageHistoryForOfflineMessages
	(*CMsgClientFSGetFriendsSteamLevels)(nil),                                 // 55: CMsgClientFSGetFriendsSteamLevels
	(*CMsgClientFSGetFriendsSteamLevelsResponse)(nil),                         // 56: CMsgClientFSGetFriendsSteamLevelsResponse
	(*CMsgClientEmailAddrInfo)(nil),                                           // 57: CMsgClientEmailAddrInfo
	(*CMsgCREItemVoteSummary)(nil),                                            // 58: CMsgCREItemVoteSummary
	(*CMsgCREItemVoteSummaryResponse)(nil),                                    // 59: CMsgCREItemVoteSummaryResponse
	(*CMsgCREUpdateUserPublishedItemVote)(nil),                                // 60: CMsgCREUpdateUserPublishedItemVote
	(*CMsgCREUpdateUserPublishedItemVoteResponse)(nil),                        // 61: CMsgCREUpdateUserPublishedItemVoteResponse
	(*CMsgCREGetUserPublishedItemVoteDetails)(nil),                            // 62: CMsgCREGetUserPublishedItemVoteDetails
	(*CMsgCREGetUserPublishedItemVoteDetailsResponse)(nil),                    // 63: CMsgCREGetUserPublishedItemVoteDetailsResponse
	(*CMsgFSGetFollowerCount)(nil),                                            // 64: CMsgFSGetFollowerCount
	(*CMsgFSGetFollowerCountResponse)(nil),                                    // 65: CMsgFSGetFollowerCountResponse
	(*CMsgFSGetIsFollowing)(nil),                                              // 66: CMsgFSGetIsFollowing
	(*CMsgFSGetIsFollowingResponse)(nil),                                      // 67: CMsgFSGetIsFollowingResponse
	(*CMsgFSEnumerateFollowingList)(nil),                                      // 68: CMsgFSEnumerateFollowingList
	(*CMsgFSEnumerateFollowingListResponse)(nil),                              // 69: CMsgFSEnumerateFollowingListResponse
	(*CMsgDPGetNumberOfCurrentPlayers)(nil),                                   // 70: CMsgDPGetNumberOfCurrentPlayers
	(*CMsgDPGetNumberOfCurrentPlayersResponse)(nil),                           // 71: CMsgDPGetNumberOfCurrentPlayersResponse
	(*CMsgClientFriendUserStatusPublished)(nil),                               // 72: CMsgClientFriendUserStatusPublished
	(*CMsgClientServiceMethodLegacy)(nil),                                     // 73: CMsgClientServiceMethodLegacy
	(*CMsgClientServiceMethodLegacyResponse)(nil),                             // 74: CMsgClientServiceMethodLegacyResponse
	(*CMsgClientUIMode)(nil),                                                  // 75: CMsgClientUIMode
	(*CMsgClientVanityURLChangedNotification)(nil),                            // 76: CMsgClientVanityURLChangedNotification
	(*CMsgClientAuthorizeLocalDeviceRequest)(nil),                             // 77: CMsgClientAuthorizeLocalDeviceRequest
	(*CMsgClientAuthorizeLocalDevice)(nil),                                    // 78: CMsgClientAuthorizeLocalDevice
	(*CMsgClientAuthorizeLocalDeviceNotification)(nil),                        // 79: CMsgClientAuthorizeLocalDeviceNotification
	(*CMsgClientDeauthorizeDeviceRequest)(nil),                                // 80: CMsgClientDeauthorizeDeviceRequest
	(*CMsgClientDeauthorizeDevice)(nil),                                       // 81: CMsgClientDeauthorizeDevice
	(*CMsgClientUseLocalDeviceAuthorizations)(nil),                            // 82: CMsgClientUseLocalDeviceAuthorizations
	(*CMsgClientGetAuthorizedDevices)(nil),                                    // 83: CMsgClientGetAuthorizedDevices
	(*CMsgClientGetAuthorizedDevicesResponse)(nil),                            // 84: CMsgClientGetAuthorizedDevicesResponse
	(*CMsgClientSharedLibraryLockStatus)(nil),                                 // 85: CMsgClientSharedLibraryLockStatus
	(*CMsgClientSharedLibraryStopPlaying)(nil),                                // 86: CMsgClientSharedLibraryStopPlaying
	(*CMsgClientServiceCall)(nil),                                             // 87: CMsgClientServiceCall
	(*CMsgClientServiceModule)(nil),                                           // 88: CMsgClientServiceModule
	(*CMsgClientServiceCallResponse)(nil),                                     // 89: CMsgClientServiceCallResponse
	(*CMsgAMUnlockH264)(nil),                                                  // 90: CMsgAMUnlockH264
	(*CMsgAMUnlockH264Response)(nil),                                          // 91: CMsgAMUnlockH264Response
	(*CMsgClientPlayingSessionState)(nil),                                     // 92: CMsgClientPlayingSessionState
	(*CMsgClientKickPlayingSession)(nil),                                      // 93: CMsgClientKickPlayingSession
	(*CMsgClientVoiceCallPreAuthorize)(nil),                                   // 94: CMsgClientVoiceCallPreAuthorize
	(*CMsgClientVoiceCallPreAuthorizeResponse)(nil),                           // 95: CMsgClientVoiceCallPreAuthorizeResponse
	(*CMsgBadgeCraftedNotification)(nil),                                      // 96: CMsgBadgeCraftedNotification
	(*CMsgClientStartPeerContentServer)(nil),                                  // 97: CMsgClientStartPeerContentServer
	(*CMsgClientStartPeerContentServerResponse)(nil),                          // 98: CMsgClientStartPeerContentServerResponse
	(*CMsgClientGetPeerContentInfo)(nil),                                      // 99: CMsgClientGetPeerContentInfo
	(*CMsgClientGetPeerContentInfoResponse)(nil),                              // 100: CMsgClientGetPeerContentInfoResponse
	(*CMsgClientPendingGameLaunch)(nil),                                       // 101: CMsgClientPendingGameLaunch
	(*CMsgClientPendingGameLaunchResponse)(nil),                               // 102: CMsgClientPendingGameLaunchResponse
	(*CMsgClientRichPresenceInfo_RichPresence)(nil),                           // 103: CMsgClientRichPresenceInfo.RichPresence
	(*CMsgClientCheckAppBetaPasswordResponse_BetaPassword)(nil),               // 104: CMsgClientCheckAppBetaPasswordResponse.BetaPassword
	(*CMsgClientUGSGetGlobalStatsResponse_Day)(nil),                           // 105: CMsgClientUGSGetGlobalStatsResponse.Day
	(*CMsgClientUGSGetGlobalStatsResponse_Day_Stat)(nil),                      // 106: CMsgClientUGSGetGlobalStatsResponse.Day.Stat
	(*CMsgClientItemAnnouncements_UnseenItem)(nil),                            // 107: CMsgClientItemAnnouncements.UnseenItem
	(*CMsgClientUserNotifications_Notification)(nil),                          // 108: CMsgClientUserNotifications.Notification
	(*CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage)(nil),       // 109: CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
	(*CMsgClientFSGetFriendsSteamLevelsResponse_Friend)(nil),                  // 110: CMsgClientFSGetFriendsSteamLevelsResponse.Friend
	(*CMsgCREItemVoteSummary_PublishedFileId)(nil),                            // 111: CMsgCREItemVoteSummary.PublishedFileId
	(*CMsgCREItemVoteSummaryResponse_ItemVoteSummary)(nil),                    // 112: CMsgCREItemVoteSummaryResponse.ItemVoteSummary
	(*CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId)(nil),            // 113: CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
	(*CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail)(nil), // 114: CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
	(*CMsgClientUseLocalDeviceAuthorizations_DeviceToken)(nil),                // 115: CMsgClientUseLocalDeviceAuthorizations.DeviceToken
	(*CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice)(nil),           // 116: CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
	(*CMsgClientSharedLibraryLockStatus_LockedLibrary)(nil),                   // 117: CMsgClientSharedLibraryLockStatus.LockedLibrary
	(*CMsgClientSharedLibraryStopPlaying_StopApp)(nil),                        // 118: CMsgClientSharedLibraryStopPlaying.StopApp
}
var file_steammessages_clientserver_2_proto_depIdxs = []int32{
	103, // 0: CMsgClientRichPresenceInfo.rich_presence:type_name -> CMsgClientRichPresenceInfo.RichPresence
	104, // 1: CMsgClientCheckAppBetaPasswordResponse.betapasswords:type_name -> CMsgClientCheckAppBetaPasswordResponse.BetaPassword
	105, // 2: CMsgClientUGSGetGlobalStatsResponse.days:type_name -> CMsgClientUGSGetGlobalStatsResponse.Day
	107, // 3: CMsgClientItemAnnouncements.unseen_items:type_name -> CMsgClientItemAnnouncements.UnseenItem
	108, // 4: CMsgClientUserNotifications.notifications:type_name -> CMsgClientUserNotifications.Notification
	109, // 5: CMsgClientChatGetFriendMessageHistoryResponse.messages:type_name -> CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
	110, // 6: CMsgClientFSGetFriendsSteamLevelsResponse.friends:type_name -> CMsgClientFSGetFriendsSteamLevelsResponse.Friend
	111, // 7: CMsgCREItemVoteSummary.published_file_ids:type_name -> CMsgCREItemVoteSummary.PublishedFileId
	112, // 8: CMsgCREItemVoteSummaryResponse.item_vote_summaries:type_name -> CMsgCREItemVoteSummaryResponse.ItemVoteSummary
	113, // 9: CMsgCREGetUserPublishedItemVoteDetails.published_file_ids:type_name -> CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
	114, // 10: CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details:type_name -> CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
	115, // 11: CMsgClientUseLocalDeviceAuthorizations.device_tokens:type_name -> CMsgClientUseLocalDeviceAuthorizations.DeviceToken
	116, // 12: CMsgClientGetAuthorizedDevicesResponse.authorized_device:type_name -> CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
	117, // 13: CMsgClientSharedLibraryLockStatus.locked_library:type_name -> CMsgClientSharedLibraryLockStatus.LockedLibrary
	118, // 14: CMsgClientSharedLibraryStopPlaying.stop_apps:type_name -> CMsgClientSharedLibraryStopPlaying.StopApp
	106, // 15: CMsgClientUGSGetGlobalStatsResponse.Day.stats:type_name -> CMsgClientUGSGetGlobalStatsResponse.Day.Stat
	16,  // [16:16] is the sub-list for method output_type
	16,  // [16:16] is the sub-list for method input_type
	16,  // [16:16] is the sub-list for extension type_name
	16,  // [16:16] is the sub-list for extension extendee
	0,   // [0:16] is the sub-list for field type_name
}

func init() { file_steammessages_clientserver_2_proto_init() }
func file_steammessages_clientserver_2_proto_init() {
	if File_steammessages_clientserver_2_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_clientserver_2_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUpdateUserGameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRichPresenceUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRichPresenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRichPresenceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientCheckFileSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientCheckFileSignatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientReadMachineAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientReadMachineAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUpdateMachineAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUpdateMachineAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRegisterKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientPurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientActivateOEMLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRegisterOEMMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRegisterOEMMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientPurchaseWithMachineID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgTrading_InitiateTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgTrading_InitiateTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgTrading_CancelTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgTrading_StartSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetDepotDecryptionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetDepotDecryptionKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientCheckAppBetaPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientCheckAppBetaPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUGSGetGlobalStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUGSGetGlobalStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRedeemGuestPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRedeemGuestPassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetClanActivityCounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetClanActivityCountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientOGSReportString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientOGSReportBug); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientSentLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgGCClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRequestFreeLicense); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRequestFreeLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgDRMDownloadRequestWithCrashData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgDRMDownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgDRMFinalResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientDPCheckSpecialSurvey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientDPCheckSpecialSurveyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientDPSendSpecialSurveyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientDPSendSpecialSurveyResponseReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRequestForgottenPasswordEmail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRequestForgottenPasswordEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientItemAnnouncements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRequestItemAnnouncements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUserNotifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientCommentNotifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRequestCommentNotifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientOfflineMessageNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRequestOfflineMessageCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientChatGetFriendMessageHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientChatGetFriendMessageHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientChatGetFriendMessageHistoryForOfflineMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientFSGetFriendsSteamLevels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientFSGetFriendsSteamLevelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientEmailAddrInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREItemVoteSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREItemVoteSummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREUpdateUserPublishedItemVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREUpdateUserPublishedItemVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREGetUserPublishedItemVoteDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREGetUserPublishedItemVoteDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgFSGetFollowerCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgFSGetFollowerCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgFSGetIsFollowing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgFSGetIsFollowingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgFSEnumerateFollowingList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgFSEnumerateFollowingListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgDPGetNumberOfCurrentPlayers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgDPGetNumberOfCurrentPlayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientFriendUserStatusPublished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientServiceMethodLegacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientServiceMethodLegacyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUIMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientVanityURLChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientAuthorizeLocalDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientAuthorizeLocalDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientAuthorizeLocalDeviceNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientDeauthorizeDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientDeauthorizeDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUseLocalDeviceAuthorizations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetAuthorizedDevices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetAuthorizedDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientSharedLibraryLockStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientSharedLibraryStopPlaying); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientServiceCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[88].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientServiceModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[89].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientServiceCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[90].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMUnlockH264); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[91].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgAMUnlockH264Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[92].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientPlayingSessionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[93].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientKickPlayingSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[94].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientVoiceCallPreAuthorize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[95].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientVoiceCallPreAuthorizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[96].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgBadgeCraftedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[97].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientStartPeerContentServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[98].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientStartPeerContentServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[99].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetPeerContentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[100].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetPeerContentInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[101].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientPendingGameLaunch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[102].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientPendingGameLaunchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[103].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientRichPresenceInfo_RichPresence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[104].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientCheckAppBetaPasswordResponse_BetaPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[105].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUGSGetGlobalStatsResponse_Day); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[106].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUGSGetGlobalStatsResponse_Day_Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[107].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientItemAnnouncements_UnseenItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[108].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUserNotifications_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[109].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[110].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientFSGetFriendsSteamLevelsResponse_Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[111].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREItemVoteSummary_PublishedFileId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[112].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREItemVoteSummaryResponse_ItemVoteSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[113].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[114].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[115].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientUseLocalDeviceAuthorizations_DeviceToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[116].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[117].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientSharedLibraryLockStatus_LockedLibrary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_2_proto_msgTypes[118].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientSharedLibraryStopPlaying_StopApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_clientserver_2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   119,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_clientserver_2_proto_goTypes,
		DependencyIndexes: file_steammessages_clientserver_2_proto_depIdxs,
		MessageInfos:      file_steammessages_clientserver_2_proto_msgTypes,
	}.Build()
	File_steammessages_clientserver_2_proto = out.File
	file_steammessages_clientserver_2_proto_rawDesc = nil
	file_steammessages_clientserver_2_proto_goTypes = nil
	file_steammessages_clientserver_2_proto_depIdxs = nil
}
