// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_publishing.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CPartnerAppOptInData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid               *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	OptIn               *bool   `protobuf:"varint,2,opt,name=opt_in,json=optIn" json:"opt_in,omitempty"`
	OptInName           *string `protobuf:"bytes,3,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
	Jsondata            *string `protobuf:"bytes,4,opt,name=jsondata" json:"jsondata,omitempty"`
	Type                *int32  `protobuf:"varint,5,opt,name=type" json:"type,omitempty"`
	AccountidAdd        *uint32 `protobuf:"varint,6,opt,name=accountid_add,json=accountidAdd" json:"accountid_add,omitempty"`
	TimeOptedIn         *uint32 `protobuf:"varint,7,opt,name=time_opted_in,json=timeOptedIn" json:"time_opted_in,omitempty"`
	TimeUpdated         *uint32 `protobuf:"varint,8,opt,name=time_updated,json=timeUpdated" json:"time_updated,omitempty"`
	AccountidLastmod    *uint32 `protobuf:"varint,9,opt,name=accountid_lastmod,json=accountidLastmod" json:"accountid_lastmod,omitempty"`
	Invited             *bool   `protobuf:"varint,10,opt,name=invited" json:"invited,omitempty"`
	AccountidRemove     *uint32 `protobuf:"varint,11,opt,name=accountid_remove,json=accountidRemove" json:"accountid_remove,omitempty"`
	TimeOptedOut        *uint32 `protobuf:"varint,12,opt,name=time_opted_out,json=timeOptedOut" json:"time_opted_out,omitempty"`
	Pruned              *bool   `protobuf:"varint,13,opt,name=pruned" json:"pruned,omitempty"`
	AccountidPrune      *uint32 `protobuf:"varint,14,opt,name=accountid_prune,json=accountidPrune" json:"accountid_prune,omitempty"`
	TimePruned          *uint32 `protobuf:"varint,15,opt,name=time_pruned,json=timePruned" json:"time_pruned,omitempty"`
	AdditionalFeaturing *bool   `protobuf:"varint,16,opt,name=additional_featuring,json=additionalFeaturing" json:"additional_featuring,omitempty"`
	FeatureDay          *uint32 `protobuf:"varint,17,opt,name=feature_day,json=featureDay" json:"feature_day,omitempty"`
	AccountidInvited    *uint32 `protobuf:"varint,18,opt,name=accountid_invited,json=accountidInvited" json:"accountid_invited,omitempty"`
	NoPlannedDiscount   *bool   `protobuf:"varint,19,opt,name=no_planned_discount,json=noPlannedDiscount" json:"no_planned_discount,omitempty"`
	PendingReview       *uint32 `protobuf:"varint,20,opt,name=pending_review,json=pendingReview" json:"pending_review,omitempty"`
	AppealState         *int32  `protobuf:"varint,21,opt,name=appeal_state,json=appealState" json:"appeal_state,omitempty"`
	AccountidAppeal     *uint32 `protobuf:"varint,22,opt,name=accountid_appeal,json=accountidAppeal" json:"accountid_appeal,omitempty"`
	TimeAppealDecision  *uint32 `protobuf:"varint,23,opt,name=time_appeal_decision,json=timeAppealDecision" json:"time_appeal_decision,omitempty"`
}

func (x *CPartnerAppOptInData) Reset() {
	*x = CPartnerAppOptInData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPartnerAppOptInData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerAppOptInData) ProtoMessage() {}

func (x *CPartnerAppOptInData) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerAppOptInData.ProtoReflect.Descriptor instead.
func (*CPartnerAppOptInData) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{0}
}

func (x *CPartnerAppOptInData) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPartnerAppOptInData) GetOptIn() bool {
	if x != nil && x.OptIn != nil {
		return *x.OptIn
	}
	return false
}

func (x *CPartnerAppOptInData) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

func (x *CPartnerAppOptInData) GetJsondata() string {
	if x != nil && x.Jsondata != nil {
		return *x.Jsondata
	}
	return ""
}

func (x *CPartnerAppOptInData) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CPartnerAppOptInData) GetAccountidAdd() uint32 {
	if x != nil && x.AccountidAdd != nil {
		return *x.AccountidAdd
	}
	return 0
}

func (x *CPartnerAppOptInData) GetTimeOptedIn() uint32 {
	if x != nil && x.TimeOptedIn != nil {
		return *x.TimeOptedIn
	}
	return 0
}

func (x *CPartnerAppOptInData) GetTimeUpdated() uint32 {
	if x != nil && x.TimeUpdated != nil {
		return *x.TimeUpdated
	}
	return 0
}

func (x *CPartnerAppOptInData) GetAccountidLastmod() uint32 {
	if x != nil && x.AccountidLastmod != nil {
		return *x.AccountidLastmod
	}
	return 0
}

func (x *CPartnerAppOptInData) GetInvited() bool {
	if x != nil && x.Invited != nil {
		return *x.Invited
	}
	return false
}

func (x *CPartnerAppOptInData) GetAccountidRemove() uint32 {
	if x != nil && x.AccountidRemove != nil {
		return *x.AccountidRemove
	}
	return 0
}

func (x *CPartnerAppOptInData) GetTimeOptedOut() uint32 {
	if x != nil && x.TimeOptedOut != nil {
		return *x.TimeOptedOut
	}
	return 0
}

func (x *CPartnerAppOptInData) GetPruned() bool {
	if x != nil && x.Pruned != nil {
		return *x.Pruned
	}
	return false
}

func (x *CPartnerAppOptInData) GetAccountidPrune() uint32 {
	if x != nil && x.AccountidPrune != nil {
		return *x.AccountidPrune
	}
	return 0
}

func (x *CPartnerAppOptInData) GetTimePruned() uint32 {
	if x != nil && x.TimePruned != nil {
		return *x.TimePruned
	}
	return 0
}

func (x *CPartnerAppOptInData) GetAdditionalFeaturing() bool {
	if x != nil && x.AdditionalFeaturing != nil {
		return *x.AdditionalFeaturing
	}
	return false
}

func (x *CPartnerAppOptInData) GetFeatureDay() uint32 {
	if x != nil && x.FeatureDay != nil {
		return *x.FeatureDay
	}
	return 0
}

func (x *CPartnerAppOptInData) GetAccountidInvited() uint32 {
	if x != nil && x.AccountidInvited != nil {
		return *x.AccountidInvited
	}
	return 0
}

func (x *CPartnerAppOptInData) GetNoPlannedDiscount() bool {
	if x != nil && x.NoPlannedDiscount != nil {
		return *x.NoPlannedDiscount
	}
	return false
}

func (x *CPartnerAppOptInData) GetPendingReview() uint32 {
	if x != nil && x.PendingReview != nil {
		return *x.PendingReview
	}
	return 0
}

func (x *CPartnerAppOptInData) GetAppealState() int32 {
	if x != nil && x.AppealState != nil {
		return *x.AppealState
	}
	return 0
}

func (x *CPartnerAppOptInData) GetAccountidAppeal() uint32 {
	if x != nil && x.AccountidAppeal != nil {
		return *x.AccountidAppeal
	}
	return 0
}

func (x *CPartnerAppOptInData) GetTimeAppealDecision() uint32 {
	if x != nil && x.TimeAppealDecision != nil {
		return *x.TimeAppealDecision
	}
	return 0
}

type CPartnerAppOptInEmailDef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptInName        *string                     `protobuf:"bytes,1,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
	TargetingFlag    *uint64                     `protobuf:"fixed64,2,opt,name=targeting_flag,json=targetingFlag" json:"targeting_flag,omitempty"`
	SettingsFlag     *uint64                     `protobuf:"fixed64,3,opt,name=settings_flag,json=settingsFlag" json:"settings_flag,omitempty"`
	EmailTemplates   *string                     `protobuf:"bytes,4,opt,name=email_templates,json=emailTemplates" json:"email_templates,omitempty"`
	StartRtime       *uint32                     `protobuf:"varint,5,opt,name=start_rtime,json=startRtime" json:"start_rtime,omitempty"`
	EndRtime         *uint32                     `protobuf:"varint,6,opt,name=end_rtime,json=endRtime" json:"end_rtime,omitempty"`
	Stats            *CPartnerAppOptInEmailStats `protobuf:"bytes,7,opt,name=stats" json:"stats,omitempty"`
	CreatorAccountid *uint32                     `protobuf:"varint,8,opt,name=creator_accountid,json=creatorAccountid" json:"creator_accountid,omitempty"`
	CreateTime       *uint32                     `protobuf:"varint,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	LastUpdateTime   *uint32                     `protobuf:"varint,10,opt,name=last_update_time,json=lastUpdateTime" json:"last_update_time,omitempty"`
	EmailDefId       *uint64                     `protobuf:"fixed64,11,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
	Completed        *bool                       `protobuf:"varint,12,opt,name=completed" json:"completed,omitempty"`
	Aborted          *bool                       `protobuf:"varint,13,opt,name=aborted" json:"aborted,omitempty"`
	Deleted          *bool                       `protobuf:"varint,14,opt,name=deleted" json:"deleted,omitempty"`
	Reviewed         *bool                       `protobuf:"varint,15,opt,name=reviewed" json:"reviewed,omitempty"`
}

func (x *CPartnerAppOptInEmailDef) Reset() {
	*x = CPartnerAppOptInEmailDef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPartnerAppOptInEmailDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerAppOptInEmailDef) ProtoMessage() {}

func (x *CPartnerAppOptInEmailDef) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerAppOptInEmailDef.ProtoReflect.Descriptor instead.
func (*CPartnerAppOptInEmailDef) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{1}
}

func (x *CPartnerAppOptInEmailDef) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

func (x *CPartnerAppOptInEmailDef) GetTargetingFlag() uint64 {
	if x != nil && x.TargetingFlag != nil {
		return *x.TargetingFlag
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetSettingsFlag() uint64 {
	if x != nil && x.SettingsFlag != nil {
		return *x.SettingsFlag
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetEmailTemplates() string {
	if x != nil && x.EmailTemplates != nil {
		return *x.EmailTemplates
	}
	return ""
}

func (x *CPartnerAppOptInEmailDef) GetStartRtime() uint32 {
	if x != nil && x.StartRtime != nil {
		return *x.StartRtime
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetEndRtime() uint32 {
	if x != nil && x.EndRtime != nil {
		return *x.EndRtime
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetStats() *CPartnerAppOptInEmailStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *CPartnerAppOptInEmailDef) GetCreatorAccountid() uint32 {
	if x != nil && x.CreatorAccountid != nil {
		return *x.CreatorAccountid
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetCreateTime() uint32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetLastUpdateTime() uint32 {
	if x != nil && x.LastUpdateTime != nil {
		return *x.LastUpdateTime
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

func (x *CPartnerAppOptInEmailDef) GetCompleted() bool {
	if x != nil && x.Completed != nil {
		return *x.Completed
	}
	return false
}

func (x *CPartnerAppOptInEmailDef) GetAborted() bool {
	if x != nil && x.Aborted != nil {
		return *x.Aborted
	}
	return false
}

func (x *CPartnerAppOptInEmailDef) GetDeleted() bool {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return false
}

func (x *CPartnerAppOptInEmailDef) GetReviewed() bool {
	if x != nil && x.Reviewed != nil {
		return *x.Reviewed
	}
	return false
}

type CPartnerAppOptInEmailStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountsExamined           *uint32 `protobuf:"varint,1,opt,name=accounts_examined,json=accountsExamined" json:"accounts_examined,omitempty"`
	AccountsEmailed            *uint32 `protobuf:"varint,2,opt,name=accounts_emailed,json=accountsEmailed" json:"accounts_emailed,omitempty"`
	AccountsNotEmailedOptedOut *uint32 `protobuf:"varint,3,opt,name=accounts_not_emailed_opted_out,json=accountsNotEmailedOptedOut" json:"accounts_not_emailed_opted_out,omitempty"`
	AccountsEmailFailed        *uint32 `protobuf:"varint,4,opt,name=accounts_email_failed,json=accountsEmailFailed" json:"accounts_email_failed,omitempty"`
	Completed                  *bool   `protobuf:"varint,5,opt,name=completed" json:"completed,omitempty"`
	RtLastUpdated              *uint32 `protobuf:"varint,6,opt,name=rt_last_updated,json=rtLastUpdated" json:"rt_last_updated,omitempty"`
}

func (x *CPartnerAppOptInEmailStats) Reset() {
	*x = CPartnerAppOptInEmailStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPartnerAppOptInEmailStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerAppOptInEmailStats) ProtoMessage() {}

func (x *CPartnerAppOptInEmailStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerAppOptInEmailStats.ProtoReflect.Descriptor instead.
func (*CPartnerAppOptInEmailStats) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{2}
}

func (x *CPartnerAppOptInEmailStats) GetAccountsExamined() uint32 {
	if x != nil && x.AccountsExamined != nil {
		return *x.AccountsExamined
	}
	return 0
}

func (x *CPartnerAppOptInEmailStats) GetAccountsEmailed() uint32 {
	if x != nil && x.AccountsEmailed != nil {
		return *x.AccountsEmailed
	}
	return 0
}

func (x *CPartnerAppOptInEmailStats) GetAccountsNotEmailedOptedOut() uint32 {
	if x != nil && x.AccountsNotEmailedOptedOut != nil {
		return *x.AccountsNotEmailedOptedOut
	}
	return 0
}

func (x *CPartnerAppOptInEmailStats) GetAccountsEmailFailed() uint32 {
	if x != nil && x.AccountsEmailFailed != nil {
		return *x.AccountsEmailFailed
	}
	return 0
}

func (x *CPartnerAppOptInEmailStats) GetCompleted() bool {
	if x != nil && x.Completed != nil {
		return *x.Completed
	}
	return false
}

func (x *CPartnerAppOptInEmailStats) GetRtLastUpdated() uint32 {
	if x != nil && x.RtLastUpdated != nil {
		return *x.RtLastUpdated
	}
	return 0
}

type CPartnerOptInEmailTracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid              *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Appid                  *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Partnerid              *uint32 `protobuf:"varint,3,opt,name=partnerid" json:"partnerid,omitempty"`
	RtimeNotified          *uint32 `protobuf:"varint,4,opt,name=rtime_notified,json=rtimeNotified" json:"rtime_notified,omitempty"`
	IgnoredUnverifiedEmail *bool   `protobuf:"varint,5,opt,name=ignored_unverified_email,json=ignoredUnverifiedEmail" json:"ignored_unverified_email,omitempty"`
	IgnoredEmailOptout     *bool   `protobuf:"varint,6,opt,name=ignored_email_optout,json=ignoredEmailOptout" json:"ignored_email_optout,omitempty"`
	Status                 *uint32 `protobuf:"varint,7,opt,name=status" json:"status,omitempty"`
	SendRtime              *uint32 `protobuf:"varint,8,opt,name=send_rtime,json=sendRtime" json:"send_rtime,omitempty"`
}

func (x *CPartnerOptInEmailTracking) Reset() {
	*x = CPartnerOptInEmailTracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPartnerOptInEmailTracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerOptInEmailTracking) ProtoMessage() {}

func (x *CPartnerOptInEmailTracking) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerOptInEmailTracking.ProtoReflect.Descriptor instead.
func (*CPartnerOptInEmailTracking) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{3}
}

func (x *CPartnerOptInEmailTracking) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CPartnerOptInEmailTracking) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPartnerOptInEmailTracking) GetPartnerid() uint32 {
	if x != nil && x.Partnerid != nil {
		return *x.Partnerid
	}
	return 0
}

func (x *CPartnerOptInEmailTracking) GetRtimeNotified() uint32 {
	if x != nil && x.RtimeNotified != nil {
		return *x.RtimeNotified
	}
	return 0
}

func (x *CPartnerOptInEmailTracking) GetIgnoredUnverifiedEmail() bool {
	if x != nil && x.IgnoredUnverifiedEmail != nil {
		return *x.IgnoredUnverifiedEmail
	}
	return false
}

func (x *CPartnerOptInEmailTracking) GetIgnoredEmailOptout() bool {
	if x != nil && x.IgnoredEmailOptout != nil {
		return *x.IgnoredEmailOptout
	}
	return false
}

func (x *CPartnerOptInEmailTracking) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CPartnerOptInEmailTracking) GetSendRtime() uint32 {
	if x != nil && x.SendRtime != nil {
		return *x.SendRtime
	}
	return 0
}

type CPublishing_CreatePartnerAppOptInEmail_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptInName      *string `protobuf:"bytes,1,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
	TargetingFlag  *uint64 `protobuf:"fixed64,2,opt,name=targeting_flag,json=targetingFlag" json:"targeting_flag,omitempty"`
	SettingsFlag   *uint64 `protobuf:"fixed64,3,opt,name=settings_flag,json=settingsFlag" json:"settings_flag,omitempty"`
	EmailTemplates *string `protobuf:"bytes,4,opt,name=email_templates,json=emailTemplates" json:"email_templates,omitempty"`
	StartRtime     *uint32 `protobuf:"varint,5,opt,name=start_rtime,json=startRtime,def=0" json:"start_rtime,omitempty"`
	EndRtime       *uint32 `protobuf:"varint,6,opt,name=end_rtime,json=endRtime,def=0" json:"end_rtime,omitempty"`
}

// Default values for CPublishing_CreatePartnerAppOptInEmail_Request fields.
const (
	Default_CPublishing_CreatePartnerAppOptInEmail_Request_StartRtime = uint32(0)
	Default_CPublishing_CreatePartnerAppOptInEmail_Request_EndRtime   = uint32(0)
)

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) Reset() {
	*x = CPublishing_CreatePartnerAppOptInEmail_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_CreatePartnerAppOptInEmail_Request) ProtoMessage() {}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_CreatePartnerAppOptInEmail_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_CreatePartnerAppOptInEmail_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{4}
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) GetTargetingFlag() uint64 {
	if x != nil && x.TargetingFlag != nil {
		return *x.TargetingFlag
	}
	return 0
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) GetSettingsFlag() uint64 {
	if x != nil && x.SettingsFlag != nil {
		return *x.SettingsFlag
	}
	return 0
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) GetEmailTemplates() string {
	if x != nil && x.EmailTemplates != nil {
		return *x.EmailTemplates
	}
	return ""
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) GetStartRtime() uint32 {
	if x != nil && x.StartRtime != nil {
		return *x.StartRtime
	}
	return Default_CPublishing_CreatePartnerAppOptInEmail_Request_StartRtime
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Request) GetEndRtime() uint32 {
	if x != nil && x.EndRtime != nil {
		return *x.EndRtime
	}
	return Default_CPublishing_CreatePartnerAppOptInEmail_Request_EndRtime
}

type CPublishing_CreatePartnerAppOptInEmail_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailDefId *uint64 `protobuf:"fixed64,1,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Response) Reset() {
	*x = CPublishing_CreatePartnerAppOptInEmail_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_CreatePartnerAppOptInEmail_Response) ProtoMessage() {}

func (x *CPublishing_CreatePartnerAppOptInEmail_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_CreatePartnerAppOptInEmail_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_CreatePartnerAppOptInEmail_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{5}
}

func (x *CPublishing_CreatePartnerAppOptInEmail_Response) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

type CPublishing_GetEstimatePartnerAppOptInEmail_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailDefId *uint64 `protobuf:"fixed64,1,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Request) Reset() {
	*x = CPublishing_GetEstimatePartnerAppOptInEmail_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetEstimatePartnerAppOptInEmail_Request) ProtoMessage() {}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetEstimatePartnerAppOptInEmail_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_GetEstimatePartnerAppOptInEmail_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{6}
}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Request) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

type CPublishing_GetEstimatePartnerAppOptInEmail_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats *CPartnerAppOptInEmailStats `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Response) Reset() {
	*x = CPublishing_GetEstimatePartnerAppOptInEmail_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetEstimatePartnerAppOptInEmail_Response) ProtoMessage() {}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetEstimatePartnerAppOptInEmail_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetEstimatePartnerAppOptInEmail_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{7}
}

func (x *CPublishing_GetEstimatePartnerAppOptInEmail_Response) GetStats() *CPartnerAppOptInEmailStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CPublishing_GetOptInAppealsSummaryStats_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptInNames []string `protobuf:"bytes,1,rep,name=opt_in_names,json=optInNames" json:"opt_in_names,omitempty"`
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Request) Reset() {
	*x = CPublishing_GetOptInAppealsSummaryStats_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetOptInAppealsSummaryStats_Request) ProtoMessage() {}

func (x *CPublishing_GetOptInAppealsSummaryStats_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetOptInAppealsSummaryStats_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_GetOptInAppealsSummaryStats_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{8}
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Request) GetOptInNames() []string {
	if x != nil {
		return x.OptInNames
	}
	return nil
}

type CPublishing_GetOptInAppealsSummaryStats_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary []*CPublishing_GetOptInAppealsSummaryStats_Response_CSummary `protobuf:"bytes,1,rep,name=summary" json:"summary,omitempty"`
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response) Reset() {
	*x = CPublishing_GetOptInAppealsSummaryStats_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetOptInAppealsSummaryStats_Response) ProtoMessage() {}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetOptInAppealsSummaryStats_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetOptInAppealsSummaryStats_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{9}
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response) GetSummary() []*CPublishing_GetOptInAppealsSummaryStats_Response_CSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type CPublishing_GetOptInAppealsSummaryStats_Response_CSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptInName       *string `protobuf:"bytes,1,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
	OpenAppeals     *uint32 `protobuf:"varint,2,opt,name=open_appeals,json=openAppeals" json:"open_appeals,omitempty"`
	RejectAppeals   *uint32 `protobuf:"varint,3,opt,name=reject_appeals,json=rejectAppeals" json:"reject_appeals,omitempty"`
	AcceptedAppeals *uint32 `protobuf:"varint,4,opt,name=accepted_appeals,json=acceptedAppeals" json:"accepted_appeals,omitempty"`
	AppealAccountId *uint32 `protobuf:"varint,5,opt,name=appeal_account_id,json=appealAccountId" json:"appeal_account_id,omitempty"`
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) Reset() {
	*x = CPublishing_GetOptInAppealsSummaryStats_Response_CSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) ProtoMessage() {}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetOptInAppealsSummaryStats_Response_CSummary.ProtoReflect.Descriptor instead.
func (*CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{10}
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) GetOpenAppeals() uint32 {
	if x != nil && x.OpenAppeals != nil {
		return *x.OpenAppeals
	}
	return 0
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) GetRejectAppeals() uint32 {
	if x != nil && x.RejectAppeals != nil {
		return *x.RejectAppeals
	}
	return 0
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) GetAcceptedAppeals() uint32 {
	if x != nil && x.AcceptedAppeals != nil {
		return *x.AcceptedAppeals
	}
	return 0
}

func (x *CPublishing_GetOptInAppealsSummaryStats_Response_CSummary) GetAppealAccountId() uint32 {
	if x != nil && x.AppealAccountId != nil {
		return *x.AppealAccountId
	}
	return 0
}

type CPublishing_GetOptInEmailTracking_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailDefId *uint64 `protobuf:"fixed64,1,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
}

func (x *CPublishing_GetOptInEmailTracking_Request) Reset() {
	*x = CPublishing_GetOptInEmailTracking_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetOptInEmailTracking_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetOptInEmailTracking_Request) ProtoMessage() {}

func (x *CPublishing_GetOptInEmailTracking_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetOptInEmailTracking_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_GetOptInEmailTracking_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{11}
}

func (x *CPublishing_GetOptInEmailTracking_Request) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

type CPublishing_GetOptInEmailTracking_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailDefId *uint64                       `protobuf:"fixed64,1,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
	Results    []*CPartnerOptInEmailTracking `protobuf:"bytes,2,rep,name=results" json:"results,omitempty"`
}

func (x *CPublishing_GetOptInEmailTracking_Response) Reset() {
	*x = CPublishing_GetOptInEmailTracking_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetOptInEmailTracking_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetOptInEmailTracking_Response) ProtoMessage() {}

func (x *CPublishing_GetOptInEmailTracking_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetOptInEmailTracking_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetOptInEmailTracking_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{12}
}

func (x *CPublishing_GetOptInEmailTracking_Response) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

func (x *CPublishing_GetOptInEmailTracking_Response) GetResults() []*CPartnerOptInEmailTracking {
	if x != nil {
		return x.Results
	}
	return nil
}

type CPublishing_GetPartnerAppOptInEmailDefAndStats_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptInName *string `protobuf:"bytes,1,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Request) Reset() {
	*x = CPublishing_GetPartnerAppOptInEmailDefAndStats_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerAppOptInEmailDefAndStats_Request) ProtoMessage() {}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerAppOptInEmailDefAndStats_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerAppOptInEmailDefAndStats_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{13}
}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Request) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

type CPublishing_GetPartnerAppOptInEmailDefAndStats_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defs []*CPartnerAppOptInEmailDef `protobuf:"bytes,1,rep,name=defs" json:"defs,omitempty"`
}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Response) Reset() {
	*x = CPublishing_GetPartnerAppOptInEmailDefAndStats_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerAppOptInEmailDefAndStats_Response) ProtoMessage() {}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerAppOptInEmailDefAndStats_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerAppOptInEmailDefAndStats_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{14}
}

func (x *CPublishing_GetPartnerAppOptInEmailDefAndStats_Response) GetDefs() []*CPartnerAppOptInEmailDef {
	if x != nil {
		return x.Defs
	}
	return nil
}

type CPublishing_GetPartnerAppOptInsIDs_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptInName *string `protobuf:"bytes,1,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
}

func (x *CPublishing_GetPartnerAppOptInsIDs_Request) Reset() {
	*x = CPublishing_GetPartnerAppOptInsIDs_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerAppOptInsIDs_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerAppOptInsIDs_Request) ProtoMessage() {}

func (x *CPublishing_GetPartnerAppOptInsIDs_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerAppOptInsIDs_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerAppOptInsIDs_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{15}
}

func (x *CPublishing_GetPartnerAppOptInsIDs_Request) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

type CPublishing_GetPartnerAppOptInsIDs_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OptedInAppids []uint32 `protobuf:"varint,1,rep,name=opted_in_appids,json=optedInAppids" json:"opted_in_appids,omitempty"`
}

func (x *CPublishing_GetPartnerAppOptInsIDs_Response) Reset() {
	*x = CPublishing_GetPartnerAppOptInsIDs_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerAppOptInsIDs_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerAppOptInsIDs_Response) ProtoMessage() {}

func (x *CPublishing_GetPartnerAppOptInsIDs_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerAppOptInsIDs_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerAppOptInsIDs_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{16}
}

func (x *CPublishing_GetPartnerAppOptInsIDs_Response) GetOptedInAppids() []uint32 {
	if x != nil {
		return x.OptedInAppids
	}
	return nil
}

type CPublishing_GetPartnerOptInInvites_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CPartnerAppOptInData `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *CPublishing_GetPartnerOptInInvites_Response) Reset() {
	*x = CPublishing_GetPartnerOptInInvites_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerOptInInvites_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerOptInInvites_Response) ProtoMessage() {}

func (x *CPublishing_GetPartnerOptInInvites_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerOptInInvites_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerOptInInvites_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{17}
}

func (x *CPublishing_GetPartnerOptInInvites_Response) GetData() []*CPartnerAppOptInData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CPublishing_GetPartnerPaidGivenPackageList_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageids []uint32 `protobuf:"varint,1,rep,name=packageids" json:"packageids,omitempty"`
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Request) Reset() {
	*x = CPublishing_GetPartnerPaidGivenPackageList_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerPaidGivenPackageList_Request) ProtoMessage() {}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerPaidGivenPackageList_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerPaidGivenPackageList_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{18}
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Request) GetPackageids() []uint32 {
	if x != nil {
		return x.Packageids
	}
	return nil
}

type CPublishing_GetPartnerPaidGivenPackageList_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paid []*CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair `protobuf:"bytes,1,rep,name=paid" json:"paid,omitempty"`
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response) Reset() {
	*x = CPublishing_GetPartnerPaidGivenPackageList_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerPaidGivenPackageList_Response) ProtoMessage() {}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerPaidGivenPackageList_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerPaidGivenPackageList_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{19}
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response) GetPaid() []*CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair {
	if x != nil {
		return x.Paid
	}
	return nil
}

type CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Partnerid *uint32 `protobuf:"varint,1,opt,name=partnerid" json:"partnerid,omitempty"`
	Packageid *uint32 `protobuf:"varint,2,opt,name=packageid" json:"packageid,omitempty"`
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair) Reset() {
	*x = CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair) ProtoMessage() {}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair.ProtoReflect.Descriptor instead.
func (*CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{20}
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair) GetPartnerid() uint32 {
	if x != nil && x.Partnerid != nil {
		return *x.Partnerid
	}
	return 0
}

func (x *CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

type CPublishing_GetSinglePartnerAppOptIns_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	OptInName *string `protobuf:"bytes,2,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
}

func (x *CPublishing_GetSinglePartnerAppOptIns_Request) Reset() {
	*x = CPublishing_GetSinglePartnerAppOptIns_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetSinglePartnerAppOptIns_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetSinglePartnerAppOptIns_Request) ProtoMessage() {}

func (x *CPublishing_GetSinglePartnerAppOptIns_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetSinglePartnerAppOptIns_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_GetSinglePartnerAppOptIns_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{21}
}

func (x *CPublishing_GetSinglePartnerAppOptIns_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPublishing_GetSinglePartnerAppOptIns_Request) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

type CPublishing_GetSinglePartnerAppOptIns_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CPartnerAppOptInData `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *CPublishing_GetSinglePartnerAppOptIns_Response) Reset() {
	*x = CPublishing_GetSinglePartnerAppOptIns_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_GetSinglePartnerAppOptIns_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_GetSinglePartnerAppOptIns_Response) ProtoMessage() {}

func (x *CPublishing_GetSinglePartnerAppOptIns_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_GetSinglePartnerAppOptIns_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_GetSinglePartnerAppOptIns_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{22}
}

func (x *CPublishing_GetSinglePartnerAppOptIns_Response) GetData() []*CPartnerAppOptInData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CPublishing_SendPartnerAppOptInEmailAndWait_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailDefId  *uint64 `protobuf:"fixed64,1,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
	ForceResend *bool   `protobuf:"varint,2,opt,name=force_resend,json=forceResend" json:"force_resend,omitempty"`
}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Request) Reset() {
	*x = CPublishing_SendPartnerAppOptInEmailAndWait_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_SendPartnerAppOptInEmailAndWait_Request) ProtoMessage() {}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_SendPartnerAppOptInEmailAndWait_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_SendPartnerAppOptInEmailAndWait_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{23}
}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Request) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Request) GetForceResend() bool {
	if x != nil && x.ForceResend != nil {
		return *x.ForceResend
	}
	return false
}

type CPublishing_SendPartnerAppOptInEmailAndWait_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results *CPartnerAppOptInEmailStats `protobuf:"bytes,1,opt,name=results" json:"results,omitempty"`
}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Response) Reset() {
	*x = CPublishing_SendPartnerAppOptInEmailAndWait_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_SendPartnerAppOptInEmailAndWait_Response) ProtoMessage() {}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_SendPartnerAppOptInEmailAndWait_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_SendPartnerAppOptInEmailAndWait_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{24}
}

func (x *CPublishing_SendPartnerAppOptInEmailAndWait_Response) GetResults() *CPartnerAppOptInEmailStats {
	if x != nil {
		return x.Results
	}
	return nil
}

type CPublishing_SetFeaturingOnPartnerAppOptIn_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids              []uint32 `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	AdditionalFeaturing *bool    `protobuf:"varint,2,opt,name=additional_featuring,json=additionalFeaturing,def=1" json:"additional_featuring,omitempty"`
	OptInName           *string  `protobuf:"bytes,3,opt,name=opt_in_name,json=optInName" json:"opt_in_name,omitempty"`
}

// Default values for CPublishing_SetFeaturingOnPartnerAppOptIn_Request fields.
const (
	Default_CPublishing_SetFeaturingOnPartnerAppOptIn_Request_AdditionalFeaturing = bool(true)
)

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Request) Reset() {
	*x = CPublishing_SetFeaturingOnPartnerAppOptIn_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_SetFeaturingOnPartnerAppOptIn_Request) ProtoMessage() {}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_SetFeaturingOnPartnerAppOptIn_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_SetFeaturingOnPartnerAppOptIn_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{25}
}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Request) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Request) GetAdditionalFeaturing() bool {
	if x != nil && x.AdditionalFeaturing != nil {
		return *x.AdditionalFeaturing
	}
	return Default_CPublishing_SetFeaturingOnPartnerAppOptIn_Request_AdditionalFeaturing
}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Request) GetOptInName() string {
	if x != nil && x.OptInName != nil {
		return *x.OptInName
	}
	return ""
}

type CPublishing_SetFeaturingOnPartnerAppOptIn_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids []uint32 `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Response) Reset() {
	*x = CPublishing_SetFeaturingOnPartnerAppOptIn_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_SetFeaturingOnPartnerAppOptIn_Response) ProtoMessage() {}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_SetFeaturingOnPartnerAppOptIn_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_SetFeaturingOnPartnerAppOptIn_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{26}
}

func (x *CPublishing_SetFeaturingOnPartnerAppOptIn_Response) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

type CPublishing_TestFirePartnerAppOptInEmail_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailDefId *uint64 `protobuf:"fixed64,1,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
	Appid      *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Partnerid  *uint32 `protobuf:"varint,3,opt,name=partnerid" json:"partnerid,omitempty"`
}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Request) Reset() {
	*x = CPublishing_TestFirePartnerAppOptInEmail_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_TestFirePartnerAppOptInEmail_Request) ProtoMessage() {}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_TestFirePartnerAppOptInEmail_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_TestFirePartnerAppOptInEmail_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{27}
}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Request) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Request) GetPartnerid() uint32 {
	if x != nil && x.Partnerid != nil {
		return *x.Partnerid
	}
	return 0
}

type CPublishing_TestFirePartnerAppOptInEmail_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Response) Reset() {
	*x = CPublishing_TestFirePartnerAppOptInEmail_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_TestFirePartnerAppOptInEmail_Response) ProtoMessage() {}

func (x *CPublishing_TestFirePartnerAppOptInEmail_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_TestFirePartnerAppOptInEmail_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_TestFirePartnerAppOptInEmail_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{28}
}

type CPublishing_UpdatePartnerAppOptInEmail_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailDefId     *uint64 `protobuf:"fixed64,1,opt,name=email_def_id,json=emailDefId" json:"email_def_id,omitempty"`
	TargetingFlag  *uint64 `protobuf:"fixed64,2,opt,name=targeting_flag,json=targetingFlag" json:"targeting_flag,omitempty"`
	SettingsFlag   *uint64 `protobuf:"fixed64,3,opt,name=settings_flag,json=settingsFlag" json:"settings_flag,omitempty"`
	EmailTemplates *string `protobuf:"bytes,4,opt,name=email_templates,json=emailTemplates" json:"email_templates,omitempty"`
	StartRtime     *uint32 `protobuf:"varint,5,opt,name=start_rtime,json=startRtime,def=0" json:"start_rtime,omitempty"`
	EndRtime       *uint32 `protobuf:"varint,6,opt,name=end_rtime,json=endRtime,def=0" json:"end_rtime,omitempty"`
	Reviewed       *bool   `protobuf:"varint,7,opt,name=reviewed,def=0" json:"reviewed,omitempty"`
}

// Default values for CPublishing_UpdatePartnerAppOptInEmail_Request fields.
const (
	Default_CPublishing_UpdatePartnerAppOptInEmail_Request_StartRtime = uint32(0)
	Default_CPublishing_UpdatePartnerAppOptInEmail_Request_EndRtime   = uint32(0)
	Default_CPublishing_UpdatePartnerAppOptInEmail_Request_Reviewed   = bool(false)
)

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) Reset() {
	*x = CPublishing_UpdatePartnerAppOptInEmail_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_UpdatePartnerAppOptInEmail_Request) ProtoMessage() {}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_UpdatePartnerAppOptInEmail_Request.ProtoReflect.Descriptor instead.
func (*CPublishing_UpdatePartnerAppOptInEmail_Request) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{29}
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) GetEmailDefId() uint64 {
	if x != nil && x.EmailDefId != nil {
		return *x.EmailDefId
	}
	return 0
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) GetTargetingFlag() uint64 {
	if x != nil && x.TargetingFlag != nil {
		return *x.TargetingFlag
	}
	return 0
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) GetSettingsFlag() uint64 {
	if x != nil && x.SettingsFlag != nil {
		return *x.SettingsFlag
	}
	return 0
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) GetEmailTemplates() string {
	if x != nil && x.EmailTemplates != nil {
		return *x.EmailTemplates
	}
	return ""
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) GetStartRtime() uint32 {
	if x != nil && x.StartRtime != nil {
		return *x.StartRtime
	}
	return Default_CPublishing_UpdatePartnerAppOptInEmail_Request_StartRtime
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) GetEndRtime() uint32 {
	if x != nil && x.EndRtime != nil {
		return *x.EndRtime
	}
	return Default_CPublishing_UpdatePartnerAppOptInEmail_Request_EndRtime
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Request) GetReviewed() bool {
	if x != nil && x.Reviewed != nil {
		return *x.Reviewed
	}
	return Default_CPublishing_UpdatePartnerAppOptInEmail_Request_Reviewed
}

type CPublishing_UpdatePartnerAppOptInEmail_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Response) Reset() {
	*x = CPublishing_UpdatePartnerAppOptInEmail_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_publishing_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPublishing_UpdatePartnerAppOptInEmail_Response) ProtoMessage() {}

func (x *CPublishing_UpdatePartnerAppOptInEmail_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_publishing_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPublishing_UpdatePartnerAppOptInEmail_Response.ProtoReflect.Descriptor instead.
func (*CPublishing_UpdatePartnerAppOptInEmail_Response) Descriptor() ([]byte, []int) {
	return file_service_publishing_proto_rawDescGZIP(), []int{30}
}

var File_service_publishing_proto protoreflect.FileDescriptor

var file_service_publishing_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x06,
	0x0a, 0x14, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x70,
	0x74, 0x49, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82,
	0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x41,
	0x64, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x4f,
	0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x4c,
	0x61, 0x73, 0x74, 0x6d, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x65, 0x64, 0x4f, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x50, 0x72, 0x75,
	0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x75, 0x6e, 0x65,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x50, 0x72, 0x75,
	0x6e, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x6e, 0x6f, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x65, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x65, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa8, 0x04, 0x0a, 0x18, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x44,
	0x65, 0x66, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06,
	0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x52, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x52, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64,
	0x22, 0xb2, 0x02, 0x0a, 0x1a, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x61, 0x6d,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x45, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x1e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f,
	0x6f, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x1a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x72, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xb8, 0x02, 0x0a, 0x1a, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x38, 0x0a,
	0x18, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x55, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x6f, 0x70, 0x74, 0x6f, 0x75, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x4f, 0x70, 0x74, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0x89, 0x02, 0x0a, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x06, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x5f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a,
	0x01, 0x30, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x2f,
	0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x33, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67,
	0x5f, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x34, 0x43, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0x53, 0x0a, 0x2f, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x70, 0x74, 0x5f,
	0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x30, 0x43,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x74, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x73, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xfc, 0x01, 0x0a, 0x39, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x41,
	0x70, 0x70, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x29, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65,
	0x66, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x2a, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x44,
	0x65, 0x66, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x36, 0x43,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x44, 0x65, 0x66, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x37, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66, 0x41,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2d, 0x0a, 0x04, 0x64, 0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66, 0x52, 0x04, 0x64, 0x65, 0x66, 0x73, 0x22,
	0x4c, 0x0a, 0x2a, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49,
	0x6e, 0x73, 0x49, 0x44, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a,
	0x2b, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73,
	0x49, 0x44, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6f, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x41, 0x70,
	0x70, 0x69, 0x64, 0x73, 0x22, 0x58, 0x0a, 0x2b, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x49, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x54,
	0x0a, 0x32, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x47, 0x69, 0x76, 0x65,
	0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x69, 0x64, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x33, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50,
	0x61, 0x69, 0x64, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x04,
	0x70, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x43, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x43, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x22, 0x88, 0x01,
	0x0a, 0x4a, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x47, 0x69, 0x76, 0x65,
	0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x41, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x2d, 0x43, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e,
	0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x5b, 0x0a, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x33,
	0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x66, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x22, 0x6d, 0x0a, 0x34, 0x43, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x31, 0x43, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x4f, 0x70, 0x74, 0x49, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e,
	0x0a, 0x0b, 0x6f, 0x70, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x74, 0x49, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x32, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65,
	0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x22, 0x88, 0x01, 0x0a,
	0x30, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x54, 0x65, 0x73,
	0x74, 0x46, 0x69, 0x72, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65,
	0x66, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x31, 0x43, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x54, 0x65, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae, 0x02, 0x0a,
	0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x27, 0x0a,
	0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x65, 0x6e,
	0x64, 0x5f, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x52, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x08, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x22, 0x31, 0x0a,
	0x2f, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xae, 0x0d, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x12,
	0x80, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x2f, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70,
	0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x34, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x43,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70,
	0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e,
	0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x30, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c,
	0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x2a, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x4f,
	0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x22, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49,
	0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x37, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x44, 0x65, 0x66, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x43, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x66, 0x41, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x49, 0x44, 0x73, 0x12, 0x2b,
	0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73,
	0x49, 0x44, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x43, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x73, 0x49, 0x44, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x4e, 0x6f, 0x74, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x65, 0x64, 0x1a, 0x2c, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x50, 0x61, 0x69, 0x64, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x64, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x43, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x50, 0x61, 0x69, 0x64, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x12, 0x2e, 0x2e, 0x43,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70,
	0x74, 0x49, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x43,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70,
	0x74, 0x49, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8b, 0x01,
	0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x12, 0x34,
	0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x57, 0x61, 0x69, 0x74, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x57, 0x61,
	0x69, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x1d,
	0x53, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x12, 0x32, 0x2e,
	0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x53, 0x65, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f,
	0x53, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x1c, 0x54, 0x65, 0x73, 0x74, 0x46,
	0x69, 0x72, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x31, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x54, 0x65, 0x73, 0x74, 0x46, 0x69, 0x72, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x43, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x54, 0x65, 0x73, 0x74, 0x46, 0x69, 0x72,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x41, 0x70, 0x70, 0x4f, 0x70, 0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f,
	0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70, 0x74,
	0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x41, 0x70, 0x70, 0x4f, 0x70,
	0x74, 0x49, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65,
}

var (
	file_service_publishing_proto_rawDescOnce sync.Once
	file_service_publishing_proto_rawDescData = file_service_publishing_proto_rawDesc
)

func file_service_publishing_proto_rawDescGZIP() []byte {
	file_service_publishing_proto_rawDescOnce.Do(func() {
		file_service_publishing_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_publishing_proto_rawDescData)
	})
	return file_service_publishing_proto_rawDescData
}

var file_service_publishing_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_service_publishing_proto_goTypes = []any{
	(*CPartnerAppOptInData)(nil),                                                       // 0: CPartnerAppOptInData
	(*CPartnerAppOptInEmailDef)(nil),                                                   // 1: CPartnerAppOptInEmailDef
	(*CPartnerAppOptInEmailStats)(nil),                                                 // 2: CPartnerAppOptInEmailStats
	(*CPartnerOptInEmailTracking)(nil),                                                 // 3: CPartnerOptInEmailTracking
	(*CPublishing_CreatePartnerAppOptInEmail_Request)(nil),                             // 4: CPublishing_CreatePartnerAppOptInEmail_Request
	(*CPublishing_CreatePartnerAppOptInEmail_Response)(nil),                            // 5: CPublishing_CreatePartnerAppOptInEmail_Response
	(*CPublishing_GetEstimatePartnerAppOptInEmail_Request)(nil),                        // 6: CPublishing_GetEstimatePartnerAppOptInEmail_Request
	(*CPublishing_GetEstimatePartnerAppOptInEmail_Response)(nil),                       // 7: CPublishing_GetEstimatePartnerAppOptInEmail_Response
	(*CPublishing_GetOptInAppealsSummaryStats_Request)(nil),                            // 8: CPublishing_GetOptInAppealsSummaryStats_Request
	(*CPublishing_GetOptInAppealsSummaryStats_Response)(nil),                           // 9: CPublishing_GetOptInAppealsSummaryStats_Response
	(*CPublishing_GetOptInAppealsSummaryStats_Response_CSummary)(nil),                  // 10: CPublishing_GetOptInAppealsSummaryStats_Response_CSummary
	(*CPublishing_GetOptInEmailTracking_Request)(nil),                                  // 11: CPublishing_GetOptInEmailTracking_Request
	(*CPublishing_GetOptInEmailTracking_Response)(nil),                                 // 12: CPublishing_GetOptInEmailTracking_Response
	(*CPublishing_GetPartnerAppOptInEmailDefAndStats_Request)(nil),                     // 13: CPublishing_GetPartnerAppOptInEmailDefAndStats_Request
	(*CPublishing_GetPartnerAppOptInEmailDefAndStats_Response)(nil),                    // 14: CPublishing_GetPartnerAppOptInEmailDefAndStats_Response
	(*CPublishing_GetPartnerAppOptInsIDs_Request)(nil),                                 // 15: CPublishing_GetPartnerAppOptInsIDs_Request
	(*CPublishing_GetPartnerAppOptInsIDs_Response)(nil),                                // 16: CPublishing_GetPartnerAppOptInsIDs_Response
	(*CPublishing_GetPartnerOptInInvites_Response)(nil),                                // 17: CPublishing_GetPartnerOptInInvites_Response
	(*CPublishing_GetPartnerPaidGivenPackageList_Request)(nil),                         // 18: CPublishing_GetPartnerPaidGivenPackageList_Request
	(*CPublishing_GetPartnerPaidGivenPackageList_Response)(nil),                        // 19: CPublishing_GetPartnerPaidGivenPackageList_Response
	(*CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair)(nil), // 20: CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair
	(*CPublishing_GetSinglePartnerAppOptIns_Request)(nil),                              // 21: CPublishing_GetSinglePartnerAppOptIns_Request
	(*CPublishing_GetSinglePartnerAppOptIns_Response)(nil),                             // 22: CPublishing_GetSinglePartnerAppOptIns_Response
	(*CPublishing_SendPartnerAppOptInEmailAndWait_Request)(nil),                        // 23: CPublishing_SendPartnerAppOptInEmailAndWait_Request
	(*CPublishing_SendPartnerAppOptInEmailAndWait_Response)(nil),                       // 24: CPublishing_SendPartnerAppOptInEmailAndWait_Response
	(*CPublishing_SetFeaturingOnPartnerAppOptIn_Request)(nil),                          // 25: CPublishing_SetFeaturingOnPartnerAppOptIn_Request
	(*CPublishing_SetFeaturingOnPartnerAppOptIn_Response)(nil),                         // 26: CPublishing_SetFeaturingOnPartnerAppOptIn_Response
	(*CPublishing_TestFirePartnerAppOptInEmail_Request)(nil),                           // 27: CPublishing_TestFirePartnerAppOptInEmail_Request
	(*CPublishing_TestFirePartnerAppOptInEmail_Response)(nil),                          // 28: CPublishing_TestFirePartnerAppOptInEmail_Response
	(*CPublishing_UpdatePartnerAppOptInEmail_Request)(nil),                             // 29: CPublishing_UpdatePartnerAppOptInEmail_Request
	(*CPublishing_UpdatePartnerAppOptInEmail_Response)(nil),                            // 30: CPublishing_UpdatePartnerAppOptInEmail_Response
	(*NotImplemented)(nil),                                                             // 31: NotImplemented
}
var file_service_publishing_proto_depIdxs = []int32{
	2,  // 0: CPartnerAppOptInEmailDef.stats:type_name -> CPartnerAppOptInEmailStats
	2,  // 1: CPublishing_GetEstimatePartnerAppOptInEmail_Response.stats:type_name -> CPartnerAppOptInEmailStats
	10, // 2: CPublishing_GetOptInAppealsSummaryStats_Response.summary:type_name -> CPublishing_GetOptInAppealsSummaryStats_Response_CSummary
	3,  // 3: CPublishing_GetOptInEmailTracking_Response.results:type_name -> CPartnerOptInEmailTracking
	1,  // 4: CPublishing_GetPartnerAppOptInEmailDefAndStats_Response.defs:type_name -> CPartnerAppOptInEmailDef
	0,  // 5: CPublishing_GetPartnerOptInInvites_Response.data:type_name -> CPartnerAppOptInData
	20, // 6: CPublishing_GetPartnerPaidGivenPackageList_Response.paid:type_name -> CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair
	0,  // 7: CPublishing_GetSinglePartnerAppOptIns_Response.data:type_name -> CPartnerAppOptInData
	2,  // 8: CPublishing_SendPartnerAppOptInEmailAndWait_Response.results:type_name -> CPartnerAppOptInEmailStats
	4,  // 9: Publishing.CreatePartnerAppOptInEmails:input_type -> CPublishing_CreatePartnerAppOptInEmail_Request
	6,  // 10: Publishing.GetEstimatePartnerAppOptInEmail:input_type -> CPublishing_GetEstimatePartnerAppOptInEmail_Request
	8,  // 11: Publishing.GetOptInAppealsSummaryStats:input_type -> CPublishing_GetOptInAppealsSummaryStats_Request
	11, // 12: Publishing.GetOptInEmailTracking:input_type -> CPublishing_GetOptInEmailTracking_Request
	13, // 13: Publishing.GetPartnerAppOptInEmailDefAndStats:input_type -> CPublishing_GetPartnerAppOptInEmailDefAndStats_Request
	15, // 14: Publishing.GetPartnerAppOptInsIDs:input_type -> CPublishing_GetPartnerAppOptInsIDs_Request
	31, // 15: Publishing.GetPartnerOptInInvites:input_type -> NotImplemented
	18, // 16: Publishing.GetPartnerPaidGivenPackageList:input_type -> CPublishing_GetPartnerPaidGivenPackageList_Request
	21, // 17: Publishing.GetSinglePartnerAppOptIn:input_type -> CPublishing_GetSinglePartnerAppOptIns_Request
	23, // 18: Publishing.SendPartnerOptInEmailAndWait:input_type -> CPublishing_SendPartnerAppOptInEmailAndWait_Request
	25, // 19: Publishing.SetFeaturingOnPartnerAppOptIn:input_type -> CPublishing_SetFeaturingOnPartnerAppOptIn_Request
	27, // 20: Publishing.TestFirePartnerAppOptInEmail:input_type -> CPublishing_TestFirePartnerAppOptInEmail_Request
	29, // 21: Publishing.UpdatePartnerAppOptInEmails:input_type -> CPublishing_UpdatePartnerAppOptInEmail_Request
	5,  // 22: Publishing.CreatePartnerAppOptInEmails:output_type -> CPublishing_CreatePartnerAppOptInEmail_Response
	7,  // 23: Publishing.GetEstimatePartnerAppOptInEmail:output_type -> CPublishing_GetEstimatePartnerAppOptInEmail_Response
	9,  // 24: Publishing.GetOptInAppealsSummaryStats:output_type -> CPublishing_GetOptInAppealsSummaryStats_Response
	12, // 25: Publishing.GetOptInEmailTracking:output_type -> CPublishing_GetOptInEmailTracking_Response
	14, // 26: Publishing.GetPartnerAppOptInEmailDefAndStats:output_type -> CPublishing_GetPartnerAppOptInEmailDefAndStats_Response
	16, // 27: Publishing.GetPartnerAppOptInsIDs:output_type -> CPublishing_GetPartnerAppOptInsIDs_Response
	17, // 28: Publishing.GetPartnerOptInInvites:output_type -> CPublishing_GetPartnerOptInInvites_Response
	19, // 29: Publishing.GetPartnerPaidGivenPackageList:output_type -> CPublishing_GetPartnerPaidGivenPackageList_Response
	22, // 30: Publishing.GetSinglePartnerAppOptIn:output_type -> CPublishing_GetSinglePartnerAppOptIns_Response
	24, // 31: Publishing.SendPartnerOptInEmailAndWait:output_type -> CPublishing_SendPartnerAppOptInEmailAndWait_Response
	26, // 32: Publishing.SetFeaturingOnPartnerAppOptIn:output_type -> CPublishing_SetFeaturingOnPartnerAppOptIn_Response
	28, // 33: Publishing.TestFirePartnerAppOptInEmail:output_type -> CPublishing_TestFirePartnerAppOptInEmail_Response
	30, // 34: Publishing.UpdatePartnerAppOptInEmails:output_type -> CPublishing_UpdatePartnerAppOptInEmail_Response
	22, // [22:35] is the sub-list for method output_type
	9,  // [9:22] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_service_publishing_proto_init() }
func file_service_publishing_proto_init() {
	if File_service_publishing_proto != nil {
		return
	}
	file_common_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_publishing_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CPartnerAppOptInData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CPartnerAppOptInEmailDef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CPartnerAppOptInEmailStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CPartnerOptInEmailTracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_CreatePartnerAppOptInEmail_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_CreatePartnerAppOptInEmail_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetEstimatePartnerAppOptInEmail_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetEstimatePartnerAppOptInEmail_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetOptInAppealsSummaryStats_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetOptInAppealsSummaryStats_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetOptInAppealsSummaryStats_Response_CSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetOptInEmailTracking_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetOptInEmailTracking_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerAppOptInEmailDefAndStats_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerAppOptInEmailDefAndStats_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerAppOptInsIDs_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerAppOptInsIDs_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerOptInInvites_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerPaidGivenPackageList_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerPaidGivenPackageList_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetPartnerPaidGivenPackageList_Response_CPackageAndPartnerPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetSinglePartnerAppOptIns_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_GetSinglePartnerAppOptIns_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_SendPartnerAppOptInEmailAndWait_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_SendPartnerAppOptInEmailAndWait_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_SetFeaturingOnPartnerAppOptIn_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_SetFeaturingOnPartnerAppOptIn_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_TestFirePartnerAppOptInEmail_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_TestFirePartnerAppOptInEmail_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_UpdatePartnerAppOptInEmail_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_publishing_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CPublishing_UpdatePartnerAppOptInEmail_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_publishing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_publishing_proto_goTypes,
		DependencyIndexes: file_service_publishing_proto_depIdxs,
		MessageInfos:      file_service_publishing_proto_msgTypes,
	}.Build()
	File_service_publishing_proto = out.File
	file_service_publishing_proto_rawDesc = nil
	file_service_publishing_proto_goTypes = nil
	file_service_publishing_proto_depIdxs = nil
}
