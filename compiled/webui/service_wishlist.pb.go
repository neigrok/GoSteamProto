// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_wishlist.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CWishlist_AddToWishlist_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid   *uint32                 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Navdata *CUserInterface_NavData `protobuf:"bytes,2,opt,name=navdata" json:"navdata,omitempty"`
}

func (x *CWishlist_AddToWishlist_Request) Reset() {
	*x = CWishlist_AddToWishlist_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_AddToWishlist_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_AddToWishlist_Request) ProtoMessage() {}

func (x *CWishlist_AddToWishlist_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_AddToWishlist_Request.ProtoReflect.Descriptor instead.
func (*CWishlist_AddToWishlist_Request) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{0}
}

func (x *CWishlist_AddToWishlist_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWishlist_AddToWishlist_Request) GetNavdata() *CUserInterface_NavData {
	if x != nil {
		return x.Navdata
	}
	return nil
}

type CWishlist_AddToWishlist_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WishlistCount *uint32 `protobuf:"varint,1,opt,name=wishlist_count,json=wishlistCount" json:"wishlist_count,omitempty"`
}

func (x *CWishlist_AddToWishlist_Response) Reset() {
	*x = CWishlist_AddToWishlist_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_AddToWishlist_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_AddToWishlist_Response) ProtoMessage() {}

func (x *CWishlist_AddToWishlist_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_AddToWishlist_Response.ProtoReflect.Descriptor instead.
func (*CWishlist_AddToWishlist_Response) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{1}
}

func (x *CWishlist_AddToWishlist_Response) GetWishlistCount() uint32 {
	if x != nil && x.WishlistCount != nil {
		return *x.WishlistCount
	}
	return 0
}

type CWishlist_GetWishlist_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CWishlist_GetWishlist_Request) Reset() {
	*x = CWishlist_GetWishlist_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlist_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlist_Request) ProtoMessage() {}

func (x *CWishlist_GetWishlist_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlist_Request.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlist_Request) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{2}
}

func (x *CWishlist_GetWishlist_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CWishlist_GetWishlist_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CWishlist_GetWishlist_Response_WishlistItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *CWishlist_GetWishlist_Response) Reset() {
	*x = CWishlist_GetWishlist_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlist_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlist_Response) ProtoMessage() {}

func (x *CWishlist_GetWishlist_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlist_Response.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlist_Response) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{3}
}

func (x *CWishlist_GetWishlist_Response) GetItems() []*CWishlist_GetWishlist_Response_WishlistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CWishlist_GetWishlist_Response_WishlistItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Priority  *uint32 `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	DateAdded *uint32 `protobuf:"varint,3,opt,name=date_added,json=dateAdded" json:"date_added,omitempty"`
}

func (x *CWishlist_GetWishlist_Response_WishlistItem) Reset() {
	*x = CWishlist_GetWishlist_Response_WishlistItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlist_Response_WishlistItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlist_Response_WishlistItem) ProtoMessage() {}

func (x *CWishlist_GetWishlist_Response_WishlistItem) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlist_Response_WishlistItem.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlist_Response_WishlistItem) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{4}
}

func (x *CWishlist_GetWishlist_Response_WishlistItem) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWishlist_GetWishlist_Response_WishlistItem) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *CWishlist_GetWishlist_Response_WishlistItem) GetDateAdded() uint32 {
	if x != nil && x.DateAdded != nil {
		return *x.DateAdded
	}
	return 0
}

type CWishlist_GetWishlistItemCount_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CWishlist_GetWishlistItemCount_Request) Reset() {
	*x = CWishlist_GetWishlistItemCount_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistItemCount_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistItemCount_Request) ProtoMessage() {}

func (x *CWishlist_GetWishlistItemCount_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistItemCount_Request.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistItemCount_Request) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{5}
}

func (x *CWishlist_GetWishlistItemCount_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CWishlist_GetWishlistItemCount_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (x *CWishlist_GetWishlistItemCount_Response) Reset() {
	*x = CWishlist_GetWishlistItemCount_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistItemCount_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistItemCount_Response) ProtoMessage() {}

func (x *CWishlist_GetWishlistItemCount_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistItemCount_Response.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistItemCount_Response) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{6}
}

func (x *CWishlist_GetWishlistItemCount_Response) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type CWishlist_GetWishlistItemsOnSale_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Context     *StoreBrowseContext         `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	DataRequest *StoreBrowseItemDataRequest `protobuf:"bytes,2,opt,name=data_request,json=dataRequest" json:"data_request,omitempty"`
}

func (x *CWishlist_GetWishlistItemsOnSale_Request) Reset() {
	*x = CWishlist_GetWishlistItemsOnSale_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistItemsOnSale_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistItemsOnSale_Request) ProtoMessage() {}

func (x *CWishlist_GetWishlistItemsOnSale_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistItemsOnSale_Request.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistItemsOnSale_Request) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{7}
}

func (x *CWishlist_GetWishlistItemsOnSale_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CWishlist_GetWishlistItemsOnSale_Request) GetDataRequest() *StoreBrowseItemDataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

type CWishlist_GetWishlistItemsOnSale_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CWishlist_GetWishlistItemsOnSale_Response_WishlistItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *CWishlist_GetWishlistItemsOnSale_Response) Reset() {
	*x = CWishlist_GetWishlistItemsOnSale_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistItemsOnSale_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistItemsOnSale_Response) ProtoMessage() {}

func (x *CWishlist_GetWishlistItemsOnSale_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistItemsOnSale_Response.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistItemsOnSale_Response) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{8}
}

func (x *CWishlist_GetWishlistItemsOnSale_Response) GetItems() []*CWishlist_GetWishlistItemsOnSale_Response_WishlistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CWishlist_GetWishlistItemsOnSale_Response_WishlistItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     *uint32    `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	StoreItem *StoreItem `protobuf:"bytes,2,opt,name=store_item,json=storeItem" json:"store_item,omitempty"`
}

func (x *CWishlist_GetWishlistItemsOnSale_Response_WishlistItem) Reset() {
	*x = CWishlist_GetWishlistItemsOnSale_Response_WishlistItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistItemsOnSale_Response_WishlistItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistItemsOnSale_Response_WishlistItem) ProtoMessage() {}

func (x *CWishlist_GetWishlistItemsOnSale_Response_WishlistItem) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistItemsOnSale_Response_WishlistItem.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistItemsOnSale_Response_WishlistItem) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{9}
}

func (x *CWishlist_GetWishlistItemsOnSale_Response_WishlistItem) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWishlist_GetWishlistItemsOnSale_Response_WishlistItem) GetStoreItem() *StoreItem {
	if x != nil {
		return x.StoreItem
	}
	return nil
}

type CWishlist_GetWishlistSortedFiltered_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid     *uint64                     `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Context     *StoreBrowseContext         `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
	DataRequest *StoreBrowseItemDataRequest `protobuf:"bytes,3,opt,name=data_request,json=dataRequest" json:"data_request,omitempty"`
	SortOrder   *int32                      `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,def=0" json:"sort_order,omitempty"`
	Filters     *CWishlistFilters           `protobuf:"bytes,5,opt,name=filters" json:"filters,omitempty"`
	StartIndex  *int32                      `protobuf:"varint,6,opt,name=start_index,json=startIndex,def=0" json:"start_index,omitempty"`
	PageSize    *int32                      `protobuf:"varint,7,opt,name=page_size,json=pageSize,def=100" json:"page_size,omitempty"`
}

// Default values for CWishlist_GetWishlistSortedFiltered_Request fields.
const (
	Default_CWishlist_GetWishlistSortedFiltered_Request_SortOrder  = int32(0)
	Default_CWishlist_GetWishlistSortedFiltered_Request_StartIndex = int32(0)
	Default_CWishlist_GetWishlistSortedFiltered_Request_PageSize   = int32(100)
)

func (x *CWishlist_GetWishlistSortedFiltered_Request) Reset() {
	*x = CWishlist_GetWishlistSortedFiltered_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistSortedFiltered_Request) ProtoMessage() {}

func (x *CWishlist_GetWishlistSortedFiltered_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistSortedFiltered_Request.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistSortedFiltered_Request) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{10}
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) GetDataRequest() *StoreBrowseItemDataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) GetSortOrder() int32 {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return Default_CWishlist_GetWishlistSortedFiltered_Request_SortOrder
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) GetFilters() *CWishlistFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) GetStartIndex() int32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return Default_CWishlist_GetWishlistSortedFiltered_Request_StartIndex
}

func (x *CWishlist_GetWishlistSortedFiltered_Request) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return Default_CWishlist_GetWishlistSortedFiltered_Request_PageSize
}

type CWishlist_GetWishlistSortedFiltered_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CWishlist_GetWishlistSortedFiltered_Response_WishlistItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *CWishlist_GetWishlistSortedFiltered_Response) Reset() {
	*x = CWishlist_GetWishlistSortedFiltered_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistSortedFiltered_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistSortedFiltered_Response) ProtoMessage() {}

func (x *CWishlist_GetWishlistSortedFiltered_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistSortedFiltered_Response.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistSortedFiltered_Response) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{11}
}

func (x *CWishlist_GetWishlistSortedFiltered_Response) GetItems() []*CWishlist_GetWishlistSortedFiltered_Response_WishlistItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CWishlist_GetWishlistSortedFiltered_Response_WishlistItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     *uint32    `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Priority  *uint32    `protobuf:"varint,2,opt,name=priority" json:"priority,omitempty"`
	DateAdded *uint32    `protobuf:"varint,3,opt,name=date_added,json=dateAdded" json:"date_added,omitempty"`
	StoreItem *StoreItem `protobuf:"bytes,4,opt,name=store_item,json=storeItem" json:"store_item,omitempty"`
}

func (x *CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) Reset() {
	*x = CWishlist_GetWishlistSortedFiltered_Response_WishlistItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) ProtoMessage() {}

func (x *CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_GetWishlistSortedFiltered_Response_WishlistItem.ProtoReflect.Descriptor instead.
func (*CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{12}
}

func (x *CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) GetDateAdded() uint32 {
	if x != nil && x.DateAdded != nil {
		return *x.DateAdded
	}
	return 0
}

func (x *CWishlist_GetWishlistSortedFiltered_Response_WishlistItem) GetStoreItem() *StoreItem {
	if x != nil {
		return x.StoreItem
	}
	return nil
}

type CWishlist_RemoveFromWishlist_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
}

func (x *CWishlist_RemoveFromWishlist_Request) Reset() {
	*x = CWishlist_RemoveFromWishlist_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_RemoveFromWishlist_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_RemoveFromWishlist_Request) ProtoMessage() {}

func (x *CWishlist_RemoveFromWishlist_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_RemoveFromWishlist_Request.ProtoReflect.Descriptor instead.
func (*CWishlist_RemoveFromWishlist_Request) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{13}
}

func (x *CWishlist_RemoveFromWishlist_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CWishlist_RemoveFromWishlist_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WishlistCount *uint32 `protobuf:"varint,1,opt,name=wishlist_count,json=wishlistCount" json:"wishlist_count,omitempty"`
}

func (x *CWishlist_RemoveFromWishlist_Response) Reset() {
	*x = CWishlist_RemoveFromWishlist_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlist_RemoveFromWishlist_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlist_RemoveFromWishlist_Response) ProtoMessage() {}

func (x *CWishlist_RemoveFromWishlist_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlist_RemoveFromWishlist_Response.ProtoReflect.Descriptor instead.
func (*CWishlist_RemoveFromWishlist_Response) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{14}
}

func (x *CWishlist_RemoveFromWishlist_Response) GetWishlistCount() uint32 {
	if x != nil && x.WishlistCount != nil {
		return *x.WishlistCount
	}
	return 0
}

type CWishlistFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacosOnly          *bool                                `protobuf:"varint,1,opt,name=macos_only,json=macosOnly" json:"macos_only,omitempty"`
	SteamosLinuxOnly   *bool                                `protobuf:"varint,2,opt,name=steamos_linux_only,json=steamosLinuxOnly" json:"steamos_linux_only,omitempty"`
	OnlyGames          *bool                                `protobuf:"varint,10,opt,name=only_games,json=onlyGames" json:"only_games,omitempty"`
	OnlySoftware       *bool                                `protobuf:"varint,11,opt,name=only_software,json=onlySoftware" json:"only_software,omitempty"`
	OnlyDlc            *bool                                `protobuf:"varint,12,opt,name=only_dlc,json=onlyDlc" json:"only_dlc,omitempty"`
	OnlyFree           *bool                                `protobuf:"varint,13,opt,name=only_free,json=onlyFree" json:"only_free,omitempty"`
	MaxPriceInCents    *int64                               `protobuf:"varint,20,opt,name=max_price_in_cents,json=maxPriceInCents" json:"max_price_in_cents,omitempty"`
	MinDiscountPercent *int32                               `protobuf:"varint,21,opt,name=min_discount_percent,json=minDiscountPercent" json:"min_discount_percent,omitempty"`
	ExcludeTypes       *CWishlistFilters_ExcludeTypeFilters `protobuf:"bytes,22,opt,name=exclude_types,json=excludeTypes" json:"exclude_types,omitempty"`
	SteamDeckFilters   *CWishlistFilters_SteamDeckFilters   `protobuf:"bytes,23,opt,name=steam_deck_filters,json=steamDeckFilters" json:"steam_deck_filters,omitempty"`
	TagidsMustMatch    []int32                              `protobuf:"varint,24,rep,name=tagids_must_match,json=tagidsMustMatch" json:"tagids_must_match,omitempty"`
}

func (x *CWishlistFilters) Reset() {
	*x = CWishlistFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlistFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlistFilters) ProtoMessage() {}

func (x *CWishlistFilters) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlistFilters.ProtoReflect.Descriptor instead.
func (*CWishlistFilters) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{15}
}

func (x *CWishlistFilters) GetMacosOnly() bool {
	if x != nil && x.MacosOnly != nil {
		return *x.MacosOnly
	}
	return false
}

func (x *CWishlistFilters) GetSteamosLinuxOnly() bool {
	if x != nil && x.SteamosLinuxOnly != nil {
		return *x.SteamosLinuxOnly
	}
	return false
}

func (x *CWishlistFilters) GetOnlyGames() bool {
	if x != nil && x.OnlyGames != nil {
		return *x.OnlyGames
	}
	return false
}

func (x *CWishlistFilters) GetOnlySoftware() bool {
	if x != nil && x.OnlySoftware != nil {
		return *x.OnlySoftware
	}
	return false
}

func (x *CWishlistFilters) GetOnlyDlc() bool {
	if x != nil && x.OnlyDlc != nil {
		return *x.OnlyDlc
	}
	return false
}

func (x *CWishlistFilters) GetOnlyFree() bool {
	if x != nil && x.OnlyFree != nil {
		return *x.OnlyFree
	}
	return false
}

func (x *CWishlistFilters) GetMaxPriceInCents() int64 {
	if x != nil && x.MaxPriceInCents != nil {
		return *x.MaxPriceInCents
	}
	return 0
}

func (x *CWishlistFilters) GetMinDiscountPercent() int32 {
	if x != nil && x.MinDiscountPercent != nil {
		return *x.MinDiscountPercent
	}
	return 0
}

func (x *CWishlistFilters) GetExcludeTypes() *CWishlistFilters_ExcludeTypeFilters {
	if x != nil {
		return x.ExcludeTypes
	}
	return nil
}

func (x *CWishlistFilters) GetSteamDeckFilters() *CWishlistFilters_SteamDeckFilters {
	if x != nil {
		return x.SteamDeckFilters
	}
	return nil
}

func (x *CWishlistFilters) GetTagidsMustMatch() []int32 {
	if x != nil {
		return x.TagidsMustMatch
	}
	return nil
}

type CWishlistFilters_ExcludeTypeFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExcludeEarlyAccess *bool `protobuf:"varint,1,opt,name=exclude_early_access,json=excludeEarlyAccess" json:"exclude_early_access,omitempty"`
	ExcludeComingSoon  *bool `protobuf:"varint,2,opt,name=exclude_coming_soon,json=excludeComingSoon" json:"exclude_coming_soon,omitempty"`
	ExcludeVrOnly      *bool `protobuf:"varint,3,opt,name=exclude_vr_only,json=excludeVrOnly" json:"exclude_vr_only,omitempty"`
}

func (x *CWishlistFilters_ExcludeTypeFilters) Reset() {
	*x = CWishlistFilters_ExcludeTypeFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlistFilters_ExcludeTypeFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlistFilters_ExcludeTypeFilters) ProtoMessage() {}

func (x *CWishlistFilters_ExcludeTypeFilters) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlistFilters_ExcludeTypeFilters.ProtoReflect.Descriptor instead.
func (*CWishlistFilters_ExcludeTypeFilters) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{16}
}

func (x *CWishlistFilters_ExcludeTypeFilters) GetExcludeEarlyAccess() bool {
	if x != nil && x.ExcludeEarlyAccess != nil {
		return *x.ExcludeEarlyAccess
	}
	return false
}

func (x *CWishlistFilters_ExcludeTypeFilters) GetExcludeComingSoon() bool {
	if x != nil && x.ExcludeComingSoon != nil {
		return *x.ExcludeComingSoon
	}
	return false
}

func (x *CWishlistFilters_ExcludeTypeFilters) GetExcludeVrOnly() bool {
	if x != nil && x.ExcludeVrOnly != nil {
		return *x.ExcludeVrOnly
	}
	return false
}

type CWishlistFilters_SteamDeckFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeVerified *bool `protobuf:"varint,1,opt,name=include_verified,json=includeVerified" json:"include_verified,omitempty"`
	IncludePlayable *bool `protobuf:"varint,2,opt,name=include_playable,json=includePlayable" json:"include_playable,omitempty"`
}

func (x *CWishlistFilters_SteamDeckFilters) Reset() {
	*x = CWishlistFilters_SteamDeckFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_wishlist_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CWishlistFilters_SteamDeckFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CWishlistFilters_SteamDeckFilters) ProtoMessage() {}

func (x *CWishlistFilters_SteamDeckFilters) ProtoReflect() protoreflect.Message {
	mi := &file_service_wishlist_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CWishlistFilters_SteamDeckFilters.ProtoReflect.Descriptor instead.
func (*CWishlistFilters_SteamDeckFilters) Descriptor() ([]byte, []int) {
	return file_service_wishlist_proto_rawDescGZIP(), []int{17}
}

func (x *CWishlistFilters_SteamDeckFilters) GetIncludeVerified() bool {
	if x != nil && x.IncludeVerified != nil {
		return *x.IncludeVerified
	}
	return false
}

func (x *CWishlistFilters_SteamDeckFilters) GetIncludePlayable() bool {
	if x != nil && x.IncludePlayable != nil {
		return *x.IncludePlayable
	}
	return false
}

var File_service_wishlist_proto protoreflect.FileDescriptor

var file_service_wishlist_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x1f, 0x43, 0x57, 0x69,
	0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x6e, 0x61, 0x76, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x5f, 0x4e, 0x61, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6e, 0x61,
	0x76, 0x64, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x20, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x73,
	0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x39, 0x0a, 0x1d, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x1e, 0x43,
	0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x43,
	0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x57, 0x69,
	0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x7e, 0x0a, 0x2b, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x22, 0x42, 0x0a, 0x26, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x27, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x28, 0x43, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x7a, 0x0a, 0x29, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69,
	0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4f, 0x6e, 0x53, 0x61, 0x6c,
	0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x57, 0x69, 0x73, 0x68, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x79,
	0x0a, 0x36, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4f, 0x6e, 0x53, 0x61,
	0x6c, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x29,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xd5, 0x02, 0x0a, 0x2b, 0x43, 0x57,
	0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c,
	0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65,
	0x6e, 0x75, 0x6d, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x30, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x03, 0x31, 0x30, 0x30, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x80, 0x01, 0x0a, 0x2c, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x39, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x3c,
	0x0a, 0x24, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x25,
	0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x77,
	0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x04, 0x0a,
	0x10, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x6f, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x6f, 0x73, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6f, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x75,
	0x78, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x64, 0x6c, 0x63, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x6e, 0x6c, 0x79, 0x44, 0x6c, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x72, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x43, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x5f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x64, 0x65,
	0x63, 0x6b, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x5f, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x10, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x61, 0x67, 0x69, 0x64, 0x73,
	0x5f, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0f, 0x74, 0x61, 0x67, 0x69, 0x64, 0x73, 0x4d, 0x75, 0x73, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x22, 0xaf, 0x01, 0x0a, 0x23, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x6f, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x76, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x72,
	0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x79, 0x0a, 0x21, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65,
	0x63, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x32,
	0xeb, 0x04, 0x0a, 0x08, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x57,
	0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x1e, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x43, 0x57, 0x69,
	0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x4f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4f,
	0x6e, 0x53, 0x61, 0x6c, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x2c, 0x2e, 0x43, 0x57,
	0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c,
	0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x43, 0x57, 0x69, 0x73,
	0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x25,
	0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x43, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_wishlist_proto_rawDescOnce sync.Once
	file_service_wishlist_proto_rawDescData = file_service_wishlist_proto_rawDesc
)

func file_service_wishlist_proto_rawDescGZIP() []byte {
	file_service_wishlist_proto_rawDescOnce.Do(func() {
		file_service_wishlist_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_wishlist_proto_rawDescData)
	})
	return file_service_wishlist_proto_rawDescData
}

var file_service_wishlist_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_service_wishlist_proto_goTypes = []any{
	(*CWishlist_AddToWishlist_Request)(nil),                           // 0: CWishlist_AddToWishlist_Request
	(*CWishlist_AddToWishlist_Response)(nil),                          // 1: CWishlist_AddToWishlist_Response
	(*CWishlist_GetWishlist_Request)(nil),                             // 2: CWishlist_GetWishlist_Request
	(*CWishlist_GetWishlist_Response)(nil),                            // 3: CWishlist_GetWishlist_Response
	(*CWishlist_GetWishlist_Response_WishlistItem)(nil),               // 4: CWishlist_GetWishlist_Response_WishlistItem
	(*CWishlist_GetWishlistItemCount_Request)(nil),                    // 5: CWishlist_GetWishlistItemCount_Request
	(*CWishlist_GetWishlistItemCount_Response)(nil),                   // 6: CWishlist_GetWishlistItemCount_Response
	(*CWishlist_GetWishlistItemsOnSale_Request)(nil),                  // 7: CWishlist_GetWishlistItemsOnSale_Request
	(*CWishlist_GetWishlistItemsOnSale_Response)(nil),                 // 8: CWishlist_GetWishlistItemsOnSale_Response
	(*CWishlist_GetWishlistItemsOnSale_Response_WishlistItem)(nil),    // 9: CWishlist_GetWishlistItemsOnSale_Response_WishlistItem
	(*CWishlist_GetWishlistSortedFiltered_Request)(nil),               // 10: CWishlist_GetWishlistSortedFiltered_Request
	(*CWishlist_GetWishlistSortedFiltered_Response)(nil),              // 11: CWishlist_GetWishlistSortedFiltered_Response
	(*CWishlist_GetWishlistSortedFiltered_Response_WishlistItem)(nil), // 12: CWishlist_GetWishlistSortedFiltered_Response_WishlistItem
	(*CWishlist_RemoveFromWishlist_Request)(nil),                      // 13: CWishlist_RemoveFromWishlist_Request
	(*CWishlist_RemoveFromWishlist_Response)(nil),                     // 14: CWishlist_RemoveFromWishlist_Response
	(*CWishlistFilters)(nil),                                          // 15: CWishlistFilters
	(*CWishlistFilters_ExcludeTypeFilters)(nil),                       // 16: CWishlistFilters_ExcludeTypeFilters
	(*CWishlistFilters_SteamDeckFilters)(nil),                         // 17: CWishlistFilters_SteamDeckFilters
	(*CUserInterface_NavData)(nil),                                    // 18: CUserInterface_NavData
	(*StoreBrowseContext)(nil),                                        // 19: StoreBrowseContext
	(*StoreBrowseItemDataRequest)(nil),                                // 20: StoreBrowseItemDataRequest
	(*StoreItem)(nil),                                                 // 21: StoreItem
}
var file_service_wishlist_proto_depIdxs = []int32{
	18, // 0: CWishlist_AddToWishlist_Request.navdata:type_name -> CUserInterface_NavData
	4,  // 1: CWishlist_GetWishlist_Response.items:type_name -> CWishlist_GetWishlist_Response_WishlistItem
	19, // 2: CWishlist_GetWishlistItemsOnSale_Request.context:type_name -> StoreBrowseContext
	20, // 3: CWishlist_GetWishlistItemsOnSale_Request.data_request:type_name -> StoreBrowseItemDataRequest
	9,  // 4: CWishlist_GetWishlistItemsOnSale_Response.items:type_name -> CWishlist_GetWishlistItemsOnSale_Response_WishlistItem
	21, // 5: CWishlist_GetWishlistItemsOnSale_Response_WishlistItem.store_item:type_name -> StoreItem
	19, // 6: CWishlist_GetWishlistSortedFiltered_Request.context:type_name -> StoreBrowseContext
	20, // 7: CWishlist_GetWishlistSortedFiltered_Request.data_request:type_name -> StoreBrowseItemDataRequest
	15, // 8: CWishlist_GetWishlistSortedFiltered_Request.filters:type_name -> CWishlistFilters
	12, // 9: CWishlist_GetWishlistSortedFiltered_Response.items:type_name -> CWishlist_GetWishlistSortedFiltered_Response_WishlistItem
	21, // 10: CWishlist_GetWishlistSortedFiltered_Response_WishlistItem.store_item:type_name -> StoreItem
	16, // 11: CWishlistFilters.exclude_types:type_name -> CWishlistFilters_ExcludeTypeFilters
	17, // 12: CWishlistFilters.steam_deck_filters:type_name -> CWishlistFilters_SteamDeckFilters
	0,  // 13: Wishlist.AddToWishlist:input_type -> CWishlist_AddToWishlist_Request
	2,  // 14: Wishlist.GetWishlist:input_type -> CWishlist_GetWishlist_Request
	5,  // 15: Wishlist.GetWishlistItemCount:input_type -> CWishlist_GetWishlistItemCount_Request
	7,  // 16: Wishlist.GetWishlistItemsOnSale:input_type -> CWishlist_GetWishlistItemsOnSale_Request
	10, // 17: Wishlist.GetWishlistSortedFiltered:input_type -> CWishlist_GetWishlistSortedFiltered_Request
	13, // 18: Wishlist.RemoveFromWishlist:input_type -> CWishlist_RemoveFromWishlist_Request
	1,  // 19: Wishlist.AddToWishlist:output_type -> CWishlist_AddToWishlist_Response
	3,  // 20: Wishlist.GetWishlist:output_type -> CWishlist_GetWishlist_Response
	6,  // 21: Wishlist.GetWishlistItemCount:output_type -> CWishlist_GetWishlistItemCount_Response
	8,  // 22: Wishlist.GetWishlistItemsOnSale:output_type -> CWishlist_GetWishlistItemsOnSale_Response
	11, // 23: Wishlist.GetWishlistSortedFiltered:output_type -> CWishlist_GetWishlistSortedFiltered_Response
	14, // 24: Wishlist.RemoveFromWishlist:output_type -> CWishlist_RemoveFromWishlist_Response
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_service_wishlist_proto_init() }
func file_service_wishlist_proto_init() {
	if File_service_wishlist_proto != nil {
		return
	}
	file_common_proto_init()
	file_common_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_wishlist_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_AddToWishlist_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_AddToWishlist_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlist_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlist_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlist_Response_WishlistItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistItemCount_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistItemCount_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistItemsOnSale_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistItemsOnSale_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistItemsOnSale_Response_WishlistItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistSortedFiltered_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistSortedFiltered_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_GetWishlistSortedFiltered_Response_WishlistItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_RemoveFromWishlist_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlist_RemoveFromWishlist_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlistFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlistFilters_ExcludeTypeFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_wishlist_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CWishlistFilters_SteamDeckFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_wishlist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_wishlist_proto_goTypes,
		DependencyIndexes: file_service_wishlist_proto_depIdxs,
		MessageInfos:      file_service_wishlist_proto_msgTypes,
	}.Build()
	File_service_wishlist_proto = out.File
	file_service_wishlist_proto_rawDesc = nil
	file_service_wishlist_proto_goTypes = nil
	file_service_wishlist_proto_depIdxs = nil
}
