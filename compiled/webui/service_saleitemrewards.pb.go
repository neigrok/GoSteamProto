// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_saleitemrewards.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommunityItemDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType              *uint32 `protobuf:"varint,1,opt,name=item_type,json=itemType" json:"item_type,omitempty"`
	Appid                 *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	ItemName              *string `protobuf:"bytes,3,opt,name=item_name,json=itemName" json:"item_name,omitempty"`
	ItemTitle             *string `protobuf:"bytes,4,opt,name=item_title,json=itemTitle" json:"item_title,omitempty"`
	ItemDescription       *string `protobuf:"bytes,5,opt,name=item_description,json=itemDescription" json:"item_description,omitempty"`
	ItemImageSmall        *string `protobuf:"bytes,6,opt,name=item_image_small,json=itemImageSmall" json:"item_image_small,omitempty"`
	ItemImageLarge        *string `protobuf:"bytes,7,opt,name=item_image_large,json=itemImageLarge" json:"item_image_large,omitempty"`
	ItemKeyValues         *string `protobuf:"bytes,8,opt,name=item_key_values,json=itemKeyValues" json:"item_key_values,omitempty"`
	ItemSeries            *uint32 `protobuf:"varint,9,opt,name=item_series,json=itemSeries" json:"item_series,omitempty"`
	ItemClass             *uint32 `protobuf:"varint,10,opt,name=item_class,json=itemClass" json:"item_class,omitempty"`
	EditorAccountid       *uint32 `protobuf:"varint,11,opt,name=editor_accountid,json=editorAccountid" json:"editor_accountid,omitempty"`
	Active                *bool   `protobuf:"varint,12,opt,name=active" json:"active,omitempty"`
	ItemImageComposed     *string `protobuf:"bytes,13,opt,name=item_image_composed,json=itemImageComposed" json:"item_image_composed,omitempty"`
	ItemImageComposedFoil *string `protobuf:"bytes,14,opt,name=item_image_composed_foil,json=itemImageComposedFoil" json:"item_image_composed_foil,omitempty"`
	Deleted               *bool   `protobuf:"varint,15,opt,name=deleted" json:"deleted,omitempty"`
	ItemLastChanged       *uint32 `protobuf:"varint,16,opt,name=item_last_changed,json=itemLastChanged" json:"item_last_changed,omitempty"`
	BroadcastChannelId    *uint64 `protobuf:"varint,17,opt,name=broadcast_channel_id,json=broadcastChannelId" json:"broadcast_channel_id,omitempty"`
	ItemMovieWebm         *string `protobuf:"bytes,18,opt,name=item_movie_webm,json=itemMovieWebm" json:"item_movie_webm,omitempty"`
	ItemMovieMp4          *string `protobuf:"bytes,19,opt,name=item_movie_mp4,json=itemMovieMp4" json:"item_movie_mp4,omitempty"`
	ItemMovieWebmSmall    *string `protobuf:"bytes,20,opt,name=item_movie_webm_small,json=itemMovieWebmSmall" json:"item_movie_webm_small,omitempty"`
	ItemMovieMp4Small     *string `protobuf:"bytes,21,opt,name=item_movie_mp4_small,json=itemMovieMp4Small" json:"item_movie_mp4_small,omitempty"`
	ItemInternalName      *string `protobuf:"bytes,22,opt,name=item_internal_name,json=itemInternalName" json:"item_internal_name,omitempty"`
}

func (x *CommunityItemDefinition) Reset() {
	*x = CommunityItemDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommunityItemDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunityItemDefinition) ProtoMessage() {}

func (x *CommunityItemDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommunityItemDefinition.ProtoReflect.Descriptor instead.
func (*CommunityItemDefinition) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{0}
}

func (x *CommunityItemDefinition) GetItemType() uint32 {
	if x != nil && x.ItemType != nil {
		return *x.ItemType
	}
	return 0
}

func (x *CommunityItemDefinition) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CommunityItemDefinition) GetItemName() string {
	if x != nil && x.ItemName != nil {
		return *x.ItemName
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemTitle() string {
	if x != nil && x.ItemTitle != nil {
		return *x.ItemTitle
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemDescription() string {
	if x != nil && x.ItemDescription != nil {
		return *x.ItemDescription
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemImageSmall() string {
	if x != nil && x.ItemImageSmall != nil {
		return *x.ItemImageSmall
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemImageLarge() string {
	if x != nil && x.ItemImageLarge != nil {
		return *x.ItemImageLarge
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemKeyValues() string {
	if x != nil && x.ItemKeyValues != nil {
		return *x.ItemKeyValues
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemSeries() uint32 {
	if x != nil && x.ItemSeries != nil {
		return *x.ItemSeries
	}
	return 0
}

func (x *CommunityItemDefinition) GetItemClass() uint32 {
	if x != nil && x.ItemClass != nil {
		return *x.ItemClass
	}
	return 0
}

func (x *CommunityItemDefinition) GetEditorAccountid() uint32 {
	if x != nil && x.EditorAccountid != nil {
		return *x.EditorAccountid
	}
	return 0
}

func (x *CommunityItemDefinition) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *CommunityItemDefinition) GetItemImageComposed() string {
	if x != nil && x.ItemImageComposed != nil {
		return *x.ItemImageComposed
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemImageComposedFoil() string {
	if x != nil && x.ItemImageComposedFoil != nil {
		return *x.ItemImageComposedFoil
	}
	return ""
}

func (x *CommunityItemDefinition) GetDeleted() bool {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return false
}

func (x *CommunityItemDefinition) GetItemLastChanged() uint32 {
	if x != nil && x.ItemLastChanged != nil {
		return *x.ItemLastChanged
	}
	return 0
}

func (x *CommunityItemDefinition) GetBroadcastChannelId() uint64 {
	if x != nil && x.BroadcastChannelId != nil {
		return *x.BroadcastChannelId
	}
	return 0
}

func (x *CommunityItemDefinition) GetItemMovieWebm() string {
	if x != nil && x.ItemMovieWebm != nil {
		return *x.ItemMovieWebm
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemMovieMp4() string {
	if x != nil && x.ItemMovieMp4 != nil {
		return *x.ItemMovieMp4
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemMovieWebmSmall() string {
	if x != nil && x.ItemMovieWebmSmall != nil {
		return *x.ItemMovieWebmSmall
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemMovieMp4Small() string {
	if x != nil && x.ItemMovieMp4Small != nil {
		return *x.ItemMovieMp4Small
	}
	return ""
}

func (x *CommunityItemDefinition) GetItemInternalName() string {
	if x != nil && x.ItemInternalName != nil {
		return *x.ItemInternalName
	}
	return ""
}

type CSaleItemRewards_CanClaimItem_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (x *CSaleItemRewards_CanClaimItem_Request) Reset() {
	*x = CSaleItemRewards_CanClaimItem_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_CanClaimItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_CanClaimItem_Request) ProtoMessage() {}

func (x *CSaleItemRewards_CanClaimItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_CanClaimItem_Request.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_CanClaimItem_Request) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{1}
}

func (x *CSaleItemRewards_CanClaimItem_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CSaleItemRewards_CanClaimItem_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanClaim      *bool                    `protobuf:"varint,1,opt,name=can_claim,json=canClaim" json:"can_claim,omitempty"`
	NextClaimTime *uint32                  `protobuf:"varint,2,opt,name=next_claim_time,json=nextClaimTime" json:"next_claim_time,omitempty"`
	RewardItem    *LoyaltyRewardDefinition `protobuf:"bytes,3,opt,name=reward_item,json=rewardItem" json:"reward_item,omitempty"`
}

func (x *CSaleItemRewards_CanClaimItem_Response) Reset() {
	*x = CSaleItemRewards_CanClaimItem_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_CanClaimItem_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_CanClaimItem_Response) ProtoMessage() {}

func (x *CSaleItemRewards_CanClaimItem_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_CanClaimItem_Response.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_CanClaimItem_Response) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{2}
}

func (x *CSaleItemRewards_CanClaimItem_Response) GetCanClaim() bool {
	if x != nil && x.CanClaim != nil {
		return *x.CanClaim
	}
	return false
}

func (x *CSaleItemRewards_CanClaimItem_Response) GetNextClaimTime() uint32 {
	if x != nil && x.NextClaimTime != nil {
		return *x.NextClaimTime
	}
	return 0
}

func (x *CSaleItemRewards_CanClaimItem_Response) GetRewardItem() *LoyaltyRewardDefinition {
	if x != nil {
		return x.RewardItem
	}
	return nil
}

type CSaleItemRewards_ClaimItem_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (x *CSaleItemRewards_ClaimItem_Request) Reset() {
	*x = CSaleItemRewards_ClaimItem_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_ClaimItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_ClaimItem_Request) ProtoMessage() {}

func (x *CSaleItemRewards_ClaimItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_ClaimItem_Request.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_ClaimItem_Request) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{3}
}

func (x *CSaleItemRewards_ClaimItem_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CSaleItemRewards_ClaimItem_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Communityitemid *uint64                  `protobuf:"varint,1,opt,name=communityitemid" json:"communityitemid,omitempty"`
	NextClaimTime   *uint32                  `protobuf:"varint,2,opt,name=next_claim_time,json=nextClaimTime" json:"next_claim_time,omitempty"`
	RewardItem      *LoyaltyRewardDefinition `protobuf:"bytes,3,opt,name=reward_item,json=rewardItem" json:"reward_item,omitempty"`
}

func (x *CSaleItemRewards_ClaimItem_Response) Reset() {
	*x = CSaleItemRewards_ClaimItem_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_ClaimItem_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_ClaimItem_Response) ProtoMessage() {}

func (x *CSaleItemRewards_ClaimItem_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_ClaimItem_Response.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_ClaimItem_Response) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{4}
}

func (x *CSaleItemRewards_ClaimItem_Response) GetCommunityitemid() uint64 {
	if x != nil && x.Communityitemid != nil {
		return *x.Communityitemid
	}
	return 0
}

func (x *CSaleItemRewards_ClaimItem_Response) GetNextClaimTime() uint32 {
	if x != nil && x.NextClaimTime != nil {
		return *x.NextClaimTime
	}
	return 0
}

func (x *CSaleItemRewards_ClaimItem_Response) GetRewardItem() *LoyaltyRewardDefinition {
	if x != nil {
		return x.RewardItem
	}
	return nil
}

type CSaleItemRewards_GetClaimedSaleRewards_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaleDefType             *int32  `protobuf:"varint,1,opt,name=sale_def_type,json=saleDefType" json:"sale_def_type,omitempty"`
	Language                *string `protobuf:"bytes,2,opt,name=language" json:"language,omitempty"`
	IncludeCommunityItemDef *bool   `protobuf:"varint,3,opt,name=include_community_item_def,json=includeCommunityItemDef" json:"include_community_item_def,omitempty"`
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Request) Reset() {
	*x = CSaleItemRewards_GetClaimedSaleRewards_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_GetClaimedSaleRewards_Request) ProtoMessage() {}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_GetClaimedSaleRewards_Request.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_GetClaimedSaleRewards_Request) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{5}
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Request) GetSaleDefType() int32 {
	if x != nil && x.SaleDefType != nil {
		return *x.SaleDefType
	}
	return 0
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Request) GetIncludeCommunityItemDef() bool {
	if x != nil && x.IncludeCommunityItemDef != nil {
		return *x.IncludeCommunityItemDef
	}
	return false
}

type CSaleItemRewards_GetClaimedSaleRewards_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumItemsGranted *int32                      `protobuf:"varint,1,opt,name=num_items_granted,json=numItemsGranted" json:"num_items_granted,omitempty"`
	NumItemsEarned  *int32                      `protobuf:"varint,2,opt,name=num_items_earned,json=numItemsEarned" json:"num_items_earned,omitempty"`
	CurrentDef      *CSteamItemRewardDefinition `protobuf:"bytes,3,opt,name=current_def,json=currentDef" json:"current_def,omitempty"`
	RewardItems     []*SaleItemRewardGrant      `protobuf:"bytes,4,rep,name=reward_items,json=rewardItems" json:"reward_items,omitempty"`
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Response) Reset() {
	*x = CSaleItemRewards_GetClaimedSaleRewards_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_GetClaimedSaleRewards_Response) ProtoMessage() {}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_GetClaimedSaleRewards_Response.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_GetClaimedSaleRewards_Response) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{6}
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Response) GetNumItemsGranted() int32 {
	if x != nil && x.NumItemsGranted != nil {
		return *x.NumItemsGranted
	}
	return 0
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Response) GetNumItemsEarned() int32 {
	if x != nil && x.NumItemsEarned != nil {
		return *x.NumItemsEarned
	}
	return 0
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Response) GetCurrentDef() *CSteamItemRewardDefinition {
	if x != nil {
		return x.CurrentDef
	}
	return nil
}

func (x *CSaleItemRewards_GetClaimedSaleRewards_Response) GetRewardItems() []*SaleItemRewardGrant {
	if x != nil {
		return x.RewardItems
	}
	return nil
}

type CSaleItemRewards_GetCurrentDefinition_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaleDefType             *int32  `protobuf:"varint,1,opt,name=sale_def_type,json=saleDefType" json:"sale_def_type,omitempty"`
	Language                *string `protobuf:"bytes,2,opt,name=language" json:"language,omitempty"`
	IncludeCommunityItemDef *bool   `protobuf:"varint,3,opt,name=include_community_item_def,json=includeCommunityItemDef" json:"include_community_item_def,omitempty"`
}

func (x *CSaleItemRewards_GetCurrentDefinition_Request) Reset() {
	*x = CSaleItemRewards_GetCurrentDefinition_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_GetCurrentDefinition_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_GetCurrentDefinition_Request) ProtoMessage() {}

func (x *CSaleItemRewards_GetCurrentDefinition_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_GetCurrentDefinition_Request.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_GetCurrentDefinition_Request) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{7}
}

func (x *CSaleItemRewards_GetCurrentDefinition_Request) GetSaleDefType() int32 {
	if x != nil && x.SaleDefType != nil {
		return *x.SaleDefType
	}
	return 0
}

func (x *CSaleItemRewards_GetCurrentDefinition_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CSaleItemRewards_GetCurrentDefinition_Request) GetIncludeCommunityItemDef() bool {
	if x != nil && x.IncludeCommunityItemDef != nil {
		return *x.IncludeCommunityItemDef
	}
	return false
}

type CSaleItemRewards_GetCurrentDefinition_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definition  *CSteamItemRewardDefinition  `protobuf:"bytes,1,opt,name=definition" json:"definition,omitempty"`
	RewardItems []*SaleReward_ItemDefinition `protobuf:"bytes,2,rep,name=reward_items,json=rewardItems" json:"reward_items,omitempty"`
}

func (x *CSaleItemRewards_GetCurrentDefinition_Response) Reset() {
	*x = CSaleItemRewards_GetCurrentDefinition_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_GetCurrentDefinition_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_GetCurrentDefinition_Response) ProtoMessage() {}

func (x *CSaleItemRewards_GetCurrentDefinition_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_GetCurrentDefinition_Response.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_GetCurrentDefinition_Response) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{8}
}

func (x *CSaleItemRewards_GetCurrentDefinition_Response) GetDefinition() *CSteamItemRewardDefinition {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *CSaleItemRewards_GetCurrentDefinition_Response) GetRewardItems() []*SaleReward_ItemDefinition {
	if x != nil {
		return x.RewardItems
	}
	return nil
}

type CSaleItemRewards_GetRewardDefinitions_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualItemRewardEventId *uint32 `protobuf:"varint,1,opt,name=virtual_item_reward_event_id,json=virtualItemRewardEventId" json:"virtual_item_reward_event_id,omitempty"`
}

func (x *CSaleItemRewards_GetRewardDefinitions_Request) Reset() {
	*x = CSaleItemRewards_GetRewardDefinitions_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_GetRewardDefinitions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_GetRewardDefinitions_Request) ProtoMessage() {}

func (x *CSaleItemRewards_GetRewardDefinitions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_GetRewardDefinitions_Request.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_GetRewardDefinitions_Request) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{9}
}

func (x *CSaleItemRewards_GetRewardDefinitions_Request) GetVirtualItemRewardEventId() uint32 {
	if x != nil && x.VirtualItemRewardEventId != nil {
		return *x.VirtualItemRewardEventId
	}
	return 0
}

type CSaleItemRewards_GetRewardDefinitions_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definitions []*CSteamItemRewardDefinition `protobuf:"bytes,1,rep,name=definitions" json:"definitions,omitempty"`
}

func (x *CSaleItemRewards_GetRewardDefinitions_Response) Reset() {
	*x = CSaleItemRewards_GetRewardDefinitions_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_GetRewardDefinitions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_GetRewardDefinitions_Response) ProtoMessage() {}

func (x *CSaleItemRewards_GetRewardDefinitions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_GetRewardDefinitions_Response.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_GetRewardDefinitions_Response) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{10}
}

func (x *CSaleItemRewards_GetRewardDefinitions_Response) GetDefinitions() []*CSteamItemRewardDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

type CSaleItemRewards_SetRewardDefinitions_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definitions []*CSteamItemRewardDefinition `protobuf:"bytes,1,rep,name=definitions" json:"definitions,omitempty"`
	Action      *int32                        `protobuf:"varint,2,opt,name=action" json:"action,omitempty"`
}

func (x *CSaleItemRewards_SetRewardDefinitions_Request) Reset() {
	*x = CSaleItemRewards_SetRewardDefinitions_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_SetRewardDefinitions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_SetRewardDefinitions_Request) ProtoMessage() {}

func (x *CSaleItemRewards_SetRewardDefinitions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_SetRewardDefinitions_Request.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_SetRewardDefinitions_Request) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{11}
}

func (x *CSaleItemRewards_SetRewardDefinitions_Request) GetDefinitions() []*CSteamItemRewardDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *CSaleItemRewards_SetRewardDefinitions_Request) GetAction() int32 {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return 0
}

type CSaleItemRewards_SetRewardDefinitions_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definitions []*CSteamItemRewardDefinition `protobuf:"bytes,1,rep,name=definitions" json:"definitions,omitempty"`
}

func (x *CSaleItemRewards_SetRewardDefinitions_Response) Reset() {
	*x = CSaleItemRewards_SetRewardDefinitions_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSaleItemRewards_SetRewardDefinitions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleItemRewards_SetRewardDefinitions_Response) ProtoMessage() {}

func (x *CSaleItemRewards_SetRewardDefinitions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleItemRewards_SetRewardDefinitions_Response.ProtoReflect.Descriptor instead.
func (*CSaleItemRewards_SetRewardDefinitions_Response) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{12}
}

func (x *CSaleItemRewards_SetRewardDefinitions_Response) GetDefinitions() []*CSteamItemRewardDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

type CSteamItemRewardDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SaleRewardDefId          *uint32 `protobuf:"varint,1,opt,name=sale_reward_def_id,json=saleRewardDefId" json:"sale_reward_def_id,omitempty"`
	Appid                    *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	VirtualItemRewardEventId *uint32 `protobuf:"varint,3,opt,name=virtual_item_reward_event_id,json=virtualItemRewardEventId" json:"virtual_item_reward_event_id,omitempty"`
	RtimeStartTime           *uint32 `protobuf:"varint,4,opt,name=rtime_start_time,json=rtimeStartTime" json:"rtime_start_time,omitempty"`
	RtimeEndTime             *uint32 `protobuf:"varint,5,opt,name=rtime_end_time,json=rtimeEndTime" json:"rtime_end_time,omitempty"`
	NumItemsPerDef           *uint32 `protobuf:"varint,6,opt,name=num_items_per_def,json=numItemsPerDef" json:"num_items_per_def,omitempty"`
	RewardDefType            *int32  `protobuf:"varint,7,opt,name=reward_def_type,json=rewardDefType" json:"reward_def_type,omitempty"`
}

func (x *CSteamItemRewardDefinition) Reset() {
	*x = CSteamItemRewardDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamItemRewardDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamItemRewardDefinition) ProtoMessage() {}

func (x *CSteamItemRewardDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamItemRewardDefinition.ProtoReflect.Descriptor instead.
func (*CSteamItemRewardDefinition) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{13}
}

func (x *CSteamItemRewardDefinition) GetSaleRewardDefId() uint32 {
	if x != nil && x.SaleRewardDefId != nil {
		return *x.SaleRewardDefId
	}
	return 0
}

func (x *CSteamItemRewardDefinition) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CSteamItemRewardDefinition) GetVirtualItemRewardEventId() uint32 {
	if x != nil && x.VirtualItemRewardEventId != nil {
		return *x.VirtualItemRewardEventId
	}
	return 0
}

func (x *CSteamItemRewardDefinition) GetRtimeStartTime() uint32 {
	if x != nil && x.RtimeStartTime != nil {
		return *x.RtimeStartTime
	}
	return 0
}

func (x *CSteamItemRewardDefinition) GetRtimeEndTime() uint32 {
	if x != nil && x.RtimeEndTime != nil {
		return *x.RtimeEndTime
	}
	return 0
}

func (x *CSteamItemRewardDefinition) GetNumItemsPerDef() uint32 {
	if x != nil && x.NumItemsPerDef != nil {
		return *x.NumItemsPerDef
	}
	return 0
}

func (x *CSteamItemRewardDefinition) GetRewardDefType() int32 {
	if x != nil && x.RewardDefType != nil {
		return *x.RewardDefType
	}
	return 0
}

type SaleItemRewardGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Communityitemid *uint64                    `protobuf:"varint,1,opt,name=communityitemid" json:"communityitemid,omitempty"`
	TimeGranted     *uint32                    `protobuf:"varint,2,opt,name=time_granted,json=timeGranted" json:"time_granted,omitempty"`
	ItemDefinition  *SaleReward_ItemDefinition `protobuf:"bytes,3,opt,name=item_definition,json=itemDefinition" json:"item_definition,omitempty"`
}

func (x *SaleItemRewardGrant) Reset() {
	*x = SaleItemRewardGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleItemRewardGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleItemRewardGrant) ProtoMessage() {}

func (x *SaleItemRewardGrant) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleItemRewardGrant.ProtoReflect.Descriptor instead.
func (*SaleItemRewardGrant) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{14}
}

func (x *SaleItemRewardGrant) GetCommunityitemid() uint64 {
	if x != nil && x.Communityitemid != nil {
		return *x.Communityitemid
	}
	return 0
}

func (x *SaleItemRewardGrant) GetTimeGranted() uint32 {
	if x != nil && x.TimeGranted != nil {
		return *x.TimeGranted
	}
	return 0
}

func (x *SaleItemRewardGrant) GetItemDefinition() *SaleReward_ItemDefinition {
	if x != nil {
		return x.ItemDefinition
	}
	return nil
}

type SaleReward_ItemDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid               *uint32                  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	CommunityItemType   *uint32                  `protobuf:"varint,2,opt,name=community_item_type,json=communityItemType" json:"community_item_type,omitempty"`
	CommunityItemClass  *uint32                  `protobuf:"varint,3,opt,name=community_item_class,json=communityItemClass" json:"community_item_class,omitempty"`
	CommunityDefinition *CommunityItemDefinition `protobuf:"bytes,4,opt,name=community_definition,json=communityDefinition" json:"community_definition,omitempty"`
}

func (x *SaleReward_ItemDefinition) Reset() {
	*x = SaleReward_ItemDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_saleitemrewards_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleReward_ItemDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleReward_ItemDefinition) ProtoMessage() {}

func (x *SaleReward_ItemDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_service_saleitemrewards_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleReward_ItemDefinition.ProtoReflect.Descriptor instead.
func (*SaleReward_ItemDefinition) Descriptor() ([]byte, []int) {
	return file_service_saleitemrewards_proto_rawDescGZIP(), []int{15}
}

func (x *SaleReward_ItemDefinition) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *SaleReward_ItemDefinition) GetCommunityItemType() uint32 {
	if x != nil && x.CommunityItemType != nil {
		return *x.CommunityItemType
	}
	return 0
}

func (x *SaleReward_ItemDefinition) GetCommunityItemClass() uint32 {
	if x != nil && x.CommunityItemClass != nil {
		return *x.CommunityItemClass
	}
	return 0
}

func (x *SaleReward_ItemDefinition) GetCommunityDefinition() *CommunityItemDefinition {
	if x != nil {
		return x.CommunityDefinition
	}
	return nil
}

var File_service_saleitemrewards_proto protoreflect.FileDescriptor

var file_service_saleitemrewards_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x69, 0x74,
	0x65, 0x6d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf3, 0x06, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6c,
	0x61, 0x72, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x69,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x69, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x12, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x57, 0x65, 0x62, 0x6d, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x6d, 0x70, 0x34,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x4d, 0x70, 0x34, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x6d, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x57, 0x65,
	0x62, 0x6d, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x6d, 0x70, 0x34, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x4d, 0x70, 0x34, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x25, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x43, 0x61, 0x6e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x26,
	0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x5f, 0x43, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x40, 0x0a, 0x22, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x23, 0x43, 0x53, 0x61,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xb7, 0x01,
	0x0a, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x53, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75,
	0x6d, 0x52, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x22, 0xfe, 0x01, 0x0a, 0x2f, 0x43, 0x53, 0x61, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6e,
	0x75, 0x6d, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x61, 0x72, 0x6e, 0x65,
	0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x12,
	0x37, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x2d, 0x43, 0x53, 0x61,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x61,
	0x6c, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x73, 0x61, 0x6c,
	0x65, 0x44, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x66, 0x22, 0xac, 0x01, 0x0a, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x6f, 0x0a, 0x2d, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x6f, 0x0a, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x2d, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x1a, 0x43, 0x53, 0x74, 0x65, 0x61,
	0x6d, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x1c, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x50, 0x65, 0x72,
	0x44, 0x65, 0x66, 0x12, 0x30, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x65,
	0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe0, 0x01, 0x0a, 0x19, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x4b, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0xb1, 0x05, 0x0a, 0x0f, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x5f, 0x0a, 0x0c, 0x43, 0x61, 0x6e, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x26, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x43, 0x61, 0x6e, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x43, 0x61, 0x6e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x53, 0x61, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x7a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x53, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2f, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x43, 0x53, 0x61, 0x6c,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x43,
	0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x43,
	0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x43, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_saleitemrewards_proto_rawDescOnce sync.Once
	file_service_saleitemrewards_proto_rawDescData = file_service_saleitemrewards_proto_rawDesc
)

func file_service_saleitemrewards_proto_rawDescGZIP() []byte {
	file_service_saleitemrewards_proto_rawDescOnce.Do(func() {
		file_service_saleitemrewards_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_saleitemrewards_proto_rawDescData)
	})
	return file_service_saleitemrewards_proto_rawDescData
}

var file_service_saleitemrewards_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_service_saleitemrewards_proto_goTypes = []any{
	(*CommunityItemDefinition)(nil),                         // 0: CommunityItemDefinition
	(*CSaleItemRewards_CanClaimItem_Request)(nil),           // 1: CSaleItemRewards_CanClaimItem_Request
	(*CSaleItemRewards_CanClaimItem_Response)(nil),          // 2: CSaleItemRewards_CanClaimItem_Response
	(*CSaleItemRewards_ClaimItem_Request)(nil),              // 3: CSaleItemRewards_ClaimItem_Request
	(*CSaleItemRewards_ClaimItem_Response)(nil),             // 4: CSaleItemRewards_ClaimItem_Response
	(*CSaleItemRewards_GetClaimedSaleRewards_Request)(nil),  // 5: CSaleItemRewards_GetClaimedSaleRewards_Request
	(*CSaleItemRewards_GetClaimedSaleRewards_Response)(nil), // 6: CSaleItemRewards_GetClaimedSaleRewards_Response
	(*CSaleItemRewards_GetCurrentDefinition_Request)(nil),   // 7: CSaleItemRewards_GetCurrentDefinition_Request
	(*CSaleItemRewards_GetCurrentDefinition_Response)(nil),  // 8: CSaleItemRewards_GetCurrentDefinition_Response
	(*CSaleItemRewards_GetRewardDefinitions_Request)(nil),   // 9: CSaleItemRewards_GetRewardDefinitions_Request
	(*CSaleItemRewards_GetRewardDefinitions_Response)(nil),  // 10: CSaleItemRewards_GetRewardDefinitions_Response
	(*CSaleItemRewards_SetRewardDefinitions_Request)(nil),   // 11: CSaleItemRewards_SetRewardDefinitions_Request
	(*CSaleItemRewards_SetRewardDefinitions_Response)(nil),  // 12: CSaleItemRewards_SetRewardDefinitions_Response
	(*CSteamItemRewardDefinition)(nil),                      // 13: CSteamItemRewardDefinition
	(*SaleItemRewardGrant)(nil),                             // 14: SaleItemRewardGrant
	(*SaleReward_ItemDefinition)(nil),                       // 15: SaleReward_ItemDefinition
	(*LoyaltyRewardDefinition)(nil),                         // 16: LoyaltyRewardDefinition
}
var file_service_saleitemrewards_proto_depIdxs = []int32{
	16, // 0: CSaleItemRewards_CanClaimItem_Response.reward_item:type_name -> LoyaltyRewardDefinition
	16, // 1: CSaleItemRewards_ClaimItem_Response.reward_item:type_name -> LoyaltyRewardDefinition
	13, // 2: CSaleItemRewards_GetClaimedSaleRewards_Response.current_def:type_name -> CSteamItemRewardDefinition
	14, // 3: CSaleItemRewards_GetClaimedSaleRewards_Response.reward_items:type_name -> SaleItemRewardGrant
	13, // 4: CSaleItemRewards_GetCurrentDefinition_Response.definition:type_name -> CSteamItemRewardDefinition
	15, // 5: CSaleItemRewards_GetCurrentDefinition_Response.reward_items:type_name -> SaleReward_ItemDefinition
	13, // 6: CSaleItemRewards_GetRewardDefinitions_Response.definitions:type_name -> CSteamItemRewardDefinition
	13, // 7: CSaleItemRewards_SetRewardDefinitions_Request.definitions:type_name -> CSteamItemRewardDefinition
	13, // 8: CSaleItemRewards_SetRewardDefinitions_Response.definitions:type_name -> CSteamItemRewardDefinition
	15, // 9: SaleItemRewardGrant.item_definition:type_name -> SaleReward_ItemDefinition
	0,  // 10: SaleReward_ItemDefinition.community_definition:type_name -> CommunityItemDefinition
	1,  // 11: SaleItemRewards.CanClaimItem:input_type -> CSaleItemRewards_CanClaimItem_Request
	3,  // 12: SaleItemRewards.ClaimItem:input_type -> CSaleItemRewards_ClaimItem_Request
	5,  // 13: SaleItemRewards.GetClaimedSaleRewards:input_type -> CSaleItemRewards_GetClaimedSaleRewards_Request
	7,  // 14: SaleItemRewards.GetCurrentDefinition:input_type -> CSaleItemRewards_GetCurrentDefinition_Request
	9,  // 15: SaleItemRewards.GetRewardDefinitions:input_type -> CSaleItemRewards_GetRewardDefinitions_Request
	11, // 16: SaleItemRewards.SetRewardDefinitions:input_type -> CSaleItemRewards_SetRewardDefinitions_Request
	2,  // 17: SaleItemRewards.CanClaimItem:output_type -> CSaleItemRewards_CanClaimItem_Response
	4,  // 18: SaleItemRewards.ClaimItem:output_type -> CSaleItemRewards_ClaimItem_Response
	6,  // 19: SaleItemRewards.GetClaimedSaleRewards:output_type -> CSaleItemRewards_GetClaimedSaleRewards_Response
	8,  // 20: SaleItemRewards.GetCurrentDefinition:output_type -> CSaleItemRewards_GetCurrentDefinition_Response
	10, // 21: SaleItemRewards.GetRewardDefinitions:output_type -> CSaleItemRewards_GetRewardDefinitions_Response
	12, // 22: SaleItemRewards.SetRewardDefinitions:output_type -> CSaleItemRewards_SetRewardDefinitions_Response
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_service_saleitemrewards_proto_init() }
func file_service_saleitemrewards_proto_init() {
	if File_service_saleitemrewards_proto != nil {
		return
	}
	file_common_base_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_saleitemrewards_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CommunityItemDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_CanClaimItem_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_CanClaimItem_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_ClaimItem_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_ClaimItem_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_GetClaimedSaleRewards_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_GetClaimedSaleRewards_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_GetCurrentDefinition_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_GetCurrentDefinition_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_GetRewardDefinitions_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_GetRewardDefinitions_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_SetRewardDefinitions_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CSaleItemRewards_SetRewardDefinitions_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamItemRewardDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SaleItemRewardGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_saleitemrewards_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SaleReward_ItemDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_saleitemrewards_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_saleitemrewards_proto_goTypes,
		DependencyIndexes: file_service_saleitemrewards_proto_depIdxs,
		MessageInfos:      file_service_saleitemrewards_proto_msgTypes,
	}.Build()
	File_service_saleitemrewards_proto = out.File
	file_service_saleitemrewards_proto_rawDesc = nil
	file_service_saleitemrewards_proto_goTypes = nil
	file_service_saleitemrewards_proto_depIdxs = nil
}
