// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_usergamenotes.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CUserGameNote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Appid        *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	ShortcutName *string `protobuf:"bytes,3,opt,name=shortcut_name,json=shortcutName" json:"shortcut_name,omitempty"`
	Shortcutid   *uint32 `protobuf:"varint,4,opt,name=shortcutid" json:"shortcutid,omitempty"`
	Ordinal      *uint32 `protobuf:"varint,5,opt,name=ordinal" json:"ordinal,omitempty"`
	TimeCreated  *uint32 `protobuf:"varint,6,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	TimeModified *uint32 `protobuf:"varint,7,opt,name=time_modified,json=timeModified" json:"time_modified,omitempty"`
	Title        *string `protobuf:"bytes,8,opt,name=title" json:"title,omitempty"`
	Content      *string `protobuf:"bytes,9,opt,name=content" json:"content,omitempty"`
}

func (x *CUserGameNote) Reset() {
	*x = CUserGameNote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNote) ProtoMessage() {}

func (x *CUserGameNote) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNote.ProtoReflect.Descriptor instead.
func (*CUserGameNote) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{0}
}

func (x *CUserGameNote) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CUserGameNote) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserGameNote) GetShortcutName() string {
	if x != nil && x.ShortcutName != nil {
		return *x.ShortcutName
	}
	return ""
}

func (x *CUserGameNote) GetShortcutid() uint32 {
	if x != nil && x.Shortcutid != nil {
		return *x.Shortcutid
	}
	return 0
}

func (x *CUserGameNote) GetOrdinal() uint32 {
	if x != nil && x.Ordinal != nil {
		return *x.Ordinal
	}
	return 0
}

func (x *CUserGameNote) GetTimeCreated() uint32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *CUserGameNote) GetTimeModified() uint32 {
	if x != nil && x.TimeModified != nil {
		return *x.TimeModified
	}
	return 0
}

func (x *CUserGameNote) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CUserGameNote) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

type CUserGameNotes_DeleteNote_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid        *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ShortcutName *string `protobuf:"bytes,2,opt,name=shortcut_name,json=shortcutName" json:"shortcut_name,omitempty"`
	Shortcutid   *uint32 `protobuf:"varint,3,opt,name=shortcutid" json:"shortcutid,omitempty"`
	NoteId       *string `protobuf:"bytes,4,opt,name=note_id,json=noteId" json:"note_id,omitempty"`
}

func (x *CUserGameNotes_DeleteNote_Request) Reset() {
	*x = CUserGameNotes_DeleteNote_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_DeleteNote_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_DeleteNote_Request) ProtoMessage() {}

func (x *CUserGameNotes_DeleteNote_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_DeleteNote_Request.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_DeleteNote_Request) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{1}
}

func (x *CUserGameNotes_DeleteNote_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserGameNotes_DeleteNote_Request) GetShortcutName() string {
	if x != nil && x.ShortcutName != nil {
		return *x.ShortcutName
	}
	return ""
}

func (x *CUserGameNotes_DeleteNote_Request) GetShortcutid() uint32 {
	if x != nil && x.Shortcutid != nil {
		return *x.Shortcutid
	}
	return 0
}

func (x *CUserGameNotes_DeleteNote_Request) GetNoteId() string {
	if x != nil && x.NoteId != nil {
		return *x.NoteId
	}
	return ""
}

type CUserGameNotes_DeleteNote_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CUserGameNotes_DeleteNote_Response) Reset() {
	*x = CUserGameNotes_DeleteNote_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_DeleteNote_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_DeleteNote_Response) ProtoMessage() {}

func (x *CUserGameNotes_DeleteNote_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_DeleteNote_Response.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_DeleteNote_Response) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{2}
}

type CUserGameNotes_GetGamesWithNotes_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CUserGameNotes_GetGamesWithNotes_Request) Reset() {
	*x = CUserGameNotes_GetGamesWithNotes_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_GetGamesWithNotes_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_GetGamesWithNotes_Request) ProtoMessage() {}

func (x *CUserGameNotes_GetGamesWithNotes_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_GetGamesWithNotes_Request.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_GetGamesWithNotes_Request) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{3}
}

type CUserGameNotes_GetGamesWithNotes_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GamesWithNotes []*CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes `protobuf:"bytes,1,rep,name=games_with_notes,json=gamesWithNotes" json:"games_with_notes,omitempty"`
}

func (x *CUserGameNotes_GetGamesWithNotes_Response) Reset() {
	*x = CUserGameNotes_GetGamesWithNotes_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_GetGamesWithNotes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_GetGamesWithNotes_Response) ProtoMessage() {}

func (x *CUserGameNotes_GetGamesWithNotes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_GetGamesWithNotes_Response.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_GetGamesWithNotes_Response) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{4}
}

func (x *CUserGameNotes_GetGamesWithNotes_Response) GetGamesWithNotes() []*CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes {
	if x != nil {
		return x.GamesWithNotes
	}
	return nil
}

type CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid        *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Shortcutid   *uint32 `protobuf:"varint,2,opt,name=shortcutid" json:"shortcutid,omitempty"`
	ShortcutName *string `protobuf:"bytes,3,opt,name=shortcut_name,json=shortcutName" json:"shortcut_name,omitempty"`
	LastModified *uint32 `protobuf:"varint,4,opt,name=last_modified,json=lastModified" json:"last_modified,omitempty"`
	NoteCount    *uint32 `protobuf:"varint,5,opt,name=note_count,json=noteCount" json:"note_count,omitempty"`
}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) Reset() {
	*x = CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) ProtoMessage() {}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{5}
}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) GetShortcutid() uint32 {
	if x != nil && x.Shortcutid != nil {
		return *x.Shortcutid
	}
	return 0
}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) GetShortcutName() string {
	if x != nil && x.ShortcutName != nil {
		return *x.ShortcutName
	}
	return ""
}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) GetLastModified() uint32 {
	if x != nil && x.LastModified != nil {
		return *x.LastModified
	}
	return 0
}

func (x *CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes) GetNoteCount() uint32 {
	if x != nil && x.NoteCount != nil {
		return *x.NoteCount
	}
	return 0
}

type CUserGameNotes_GetNotesForGame_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid          *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ShortcutName   *string `protobuf:"bytes,2,opt,name=shortcut_name,json=shortcutName" json:"shortcut_name,omitempty"`
	Shortcutid     *uint32 `protobuf:"varint,3,opt,name=shortcutid" json:"shortcutid,omitempty"`
	IncludeContent *bool   `protobuf:"varint,4,opt,name=include_content,json=includeContent" json:"include_content,omitempty"`
}

func (x *CUserGameNotes_GetNotesForGame_Request) Reset() {
	*x = CUserGameNotes_GetNotesForGame_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_GetNotesForGame_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_GetNotesForGame_Request) ProtoMessage() {}

func (x *CUserGameNotes_GetNotesForGame_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_GetNotesForGame_Request.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_GetNotesForGame_Request) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{6}
}

func (x *CUserGameNotes_GetNotesForGame_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserGameNotes_GetNotesForGame_Request) GetShortcutName() string {
	if x != nil && x.ShortcutName != nil {
		return *x.ShortcutName
	}
	return ""
}

func (x *CUserGameNotes_GetNotesForGame_Request) GetShortcutid() uint32 {
	if x != nil && x.Shortcutid != nil {
		return *x.Shortcutid
	}
	return 0
}

func (x *CUserGameNotes_GetNotesForGame_Request) GetIncludeContent() bool {
	if x != nil && x.IncludeContent != nil {
		return *x.IncludeContent
	}
	return false
}

type CUserGameNotes_GetNotesForGame_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notes []*CUserGameNote `protobuf:"bytes,1,rep,name=notes" json:"notes,omitempty"`
}

func (x *CUserGameNotes_GetNotesForGame_Response) Reset() {
	*x = CUserGameNotes_GetNotesForGame_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_GetNotesForGame_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_GetNotesForGame_Response) ProtoMessage() {}

func (x *CUserGameNotes_GetNotesForGame_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_GetNotesForGame_Response.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_GetNotesForGame_Response) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{7}
}

func (x *CUserGameNotes_GetNotesForGame_Response) GetNotes() []*CUserGameNote {
	if x != nil {
		return x.Notes
	}
	return nil
}

type CUserGameNotes_SaveNote_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid        *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ShortcutName *string `protobuf:"bytes,2,opt,name=shortcut_name,json=shortcutName" json:"shortcut_name,omitempty"`
	Shortcutid   *uint32 `protobuf:"varint,3,opt,name=shortcutid" json:"shortcutid,omitempty"`
	NoteId       *string `protobuf:"bytes,4,opt,name=note_id,json=noteId" json:"note_id,omitempty"`
	CreateNew    *bool   `protobuf:"varint,5,opt,name=create_new,json=createNew" json:"create_new,omitempty"`
	Title        *string `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	Content      *string `protobuf:"bytes,7,opt,name=content" json:"content,omitempty"`
}

func (x *CUserGameNotes_SaveNote_Request) Reset() {
	*x = CUserGameNotes_SaveNote_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_SaveNote_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_SaveNote_Request) ProtoMessage() {}

func (x *CUserGameNotes_SaveNote_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_SaveNote_Request.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_SaveNote_Request) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{8}
}

func (x *CUserGameNotes_SaveNote_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserGameNotes_SaveNote_Request) GetShortcutName() string {
	if x != nil && x.ShortcutName != nil {
		return *x.ShortcutName
	}
	return ""
}

func (x *CUserGameNotes_SaveNote_Request) GetShortcutid() uint32 {
	if x != nil && x.Shortcutid != nil {
		return *x.Shortcutid
	}
	return 0
}

func (x *CUserGameNotes_SaveNote_Request) GetNoteId() string {
	if x != nil && x.NoteId != nil {
		return *x.NoteId
	}
	return ""
}

func (x *CUserGameNotes_SaveNote_Request) GetCreateNew() bool {
	if x != nil && x.CreateNew != nil {
		return *x.CreateNew
	}
	return false
}

func (x *CUserGameNotes_SaveNote_Request) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CUserGameNotes_SaveNote_Request) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

type CUserGameNotes_SaveNote_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoteId *string `protobuf:"bytes,1,opt,name=note_id,json=noteId" json:"note_id,omitempty"`
}

func (x *CUserGameNotes_SaveNote_Response) Reset() {
	*x = CUserGameNotes_SaveNote_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_usergamenotes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CUserGameNotes_SaveNote_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserGameNotes_SaveNote_Response) ProtoMessage() {}

func (x *CUserGameNotes_SaveNote_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_usergamenotes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserGameNotes_SaveNote_Response.ProtoReflect.Descriptor instead.
func (*CUserGameNotes_SaveNote_Response) Descriptor() ([]byte, []int) {
	return file_service_usergamenotes_proto_rawDescGZIP(), []int{9}
}

func (x *CUserGameNotes_SaveNote_Response) GetNoteId() string {
	if x != nil && x.NoteId != nil {
		return *x.NoteId
	}
	return ""
}

var File_service_usergamenotes_proto protoreflect.FileDescriptor

var file_service_usergamenotes_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x67, 0x61,
	0x6d, 0x65, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x02,
	0x0a, 0x0d, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x97, 0x01, 0x0a,
	0x21, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x63, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x28,
	0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x29, 0x43, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x47, 0x61, 0x6d,
	0x65, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x37, 0x43,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x47, 0x61, 0x6d, 0x65, 0x57, 0x69, 0x74,
	0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x26, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63,
	0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x27, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x1f, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63,
	0x75, 0x74, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x20,
	0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x53,
	0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x32, 0x89, 0x03, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x43, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74,
	0x65, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x43, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x5f, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x43, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x5f, 0x53, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_usergamenotes_proto_rawDescOnce sync.Once
	file_service_usergamenotes_proto_rawDescData = file_service_usergamenotes_proto_rawDesc
)

func file_service_usergamenotes_proto_rawDescGZIP() []byte {
	file_service_usergamenotes_proto_rawDescOnce.Do(func() {
		file_service_usergamenotes_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_usergamenotes_proto_rawDescData)
	})
	return file_service_usergamenotes_proto_rawDescData
}

var file_service_usergamenotes_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_service_usergamenotes_proto_goTypes = []any{
	(*CUserGameNote)(nil),                                           // 0: CUserGameNote
	(*CUserGameNotes_DeleteNote_Request)(nil),                       // 1: CUserGameNotes_DeleteNote_Request
	(*CUserGameNotes_DeleteNote_Response)(nil),                      // 2: CUserGameNotes_DeleteNote_Response
	(*CUserGameNotes_GetGamesWithNotes_Request)(nil),                // 3: CUserGameNotes_GetGamesWithNotes_Request
	(*CUserGameNotes_GetGamesWithNotes_Response)(nil),               // 4: CUserGameNotes_GetGamesWithNotes_Response
	(*CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes)(nil), // 5: CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes
	(*CUserGameNotes_GetNotesForGame_Request)(nil),                  // 6: CUserGameNotes_GetNotesForGame_Request
	(*CUserGameNotes_GetNotesForGame_Response)(nil),                 // 7: CUserGameNotes_GetNotesForGame_Response
	(*CUserGameNotes_SaveNote_Request)(nil),                         // 8: CUserGameNotes_SaveNote_Request
	(*CUserGameNotes_SaveNote_Response)(nil),                        // 9: CUserGameNotes_SaveNote_Response
}
var file_service_usergamenotes_proto_depIdxs = []int32{
	5, // 0: CUserGameNotes_GetGamesWithNotes_Response.games_with_notes:type_name -> CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes
	0, // 1: CUserGameNotes_GetNotesForGame_Response.notes:type_name -> CUserGameNote
	1, // 2: UserGameNotes.DeleteNote:input_type -> CUserGameNotes_DeleteNote_Request
	3, // 3: UserGameNotes.GetGamesWithNotes:input_type -> CUserGameNotes_GetGamesWithNotes_Request
	6, // 4: UserGameNotes.GetNotesForGame:input_type -> CUserGameNotes_GetNotesForGame_Request
	8, // 5: UserGameNotes.SaveNote:input_type -> CUserGameNotes_SaveNote_Request
	2, // 6: UserGameNotes.DeleteNote:output_type -> CUserGameNotes_DeleteNote_Response
	4, // 7: UserGameNotes.GetGamesWithNotes:output_type -> CUserGameNotes_GetGamesWithNotes_Response
	7, // 8: UserGameNotes.GetNotesForGame:output_type -> CUserGameNotes_GetNotesForGame_Response
	9, // 9: UserGameNotes.SaveNote:output_type -> CUserGameNotes_SaveNote_Response
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_service_usergamenotes_proto_init() }
func file_service_usergamenotes_proto_init() {
	if File_service_usergamenotes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_usergamenotes_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_DeleteNote_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_DeleteNote_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_GetGamesWithNotes_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_GetGamesWithNotes_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_GetGamesWithNotes_Response_GameWithNotes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_GetNotesForGame_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_GetNotesForGame_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_SaveNote_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_usergamenotes_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CUserGameNotes_SaveNote_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_usergamenotes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_usergamenotes_proto_goTypes,
		DependencyIndexes: file_service_usergamenotes_proto_depIdxs,
		MessageInfos:      file_service_usergamenotes_proto_msgTypes,
	}.Build()
	File_service_usergamenotes_proto = out.File
	file_service_usergamenotes_proto_rawDesc = nil
	file_service_usergamenotes_proto_goTypes = nil
	file_service_usergamenotes_proto_depIdxs = nil
}
