// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_store.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CPackageReservationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageid                  *uint32 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	ReservationState           *int32  `protobuf:"varint,2,opt,name=reservation_state,json=reservationState" json:"reservation_state,omitempty"`
	QueuePosition              *int32  `protobuf:"varint,3,opt,name=queue_position,json=queuePosition" json:"queue_position,omitempty"`
	TotalQueueSize             *int32  `protobuf:"varint,4,opt,name=total_queue_size,json=totalQueueSize" json:"total_queue_size,omitempty"`
	ReservationCountryCode     *string `protobuf:"bytes,5,opt,name=reservation_country_code,json=reservationCountryCode" json:"reservation_country_code,omitempty"`
	Expired                    *bool   `protobuf:"varint,6,opt,name=expired" json:"expired,omitempty"`
	TimeExpires                *uint32 `protobuf:"varint,7,opt,name=time_expires,json=timeExpires" json:"time_expires,omitempty"`
	TimeReserved               *uint32 `protobuf:"varint,8,opt,name=time_reserved,json=timeReserved" json:"time_reserved,omitempty"`
	RtimeEstimatedNotification *uint32 `protobuf:"varint,9,opt,name=rtime_estimated_notification,json=rtimeEstimatedNotification" json:"rtime_estimated_notification,omitempty"`
	NotificatonToken           *string `protobuf:"bytes,10,opt,name=notificaton_token,json=notificatonToken" json:"notificaton_token,omitempty"`
}

func (x *CPackageReservationStatus) Reset() {
	*x = CPackageReservationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPackageReservationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPackageReservationStatus) ProtoMessage() {}

func (x *CPackageReservationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPackageReservationStatus.ProtoReflect.Descriptor instead.
func (*CPackageReservationStatus) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{0}
}

func (x *CPackageReservationStatus) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CPackageReservationStatus) GetReservationState() int32 {
	if x != nil && x.ReservationState != nil {
		return *x.ReservationState
	}
	return 0
}

func (x *CPackageReservationStatus) GetQueuePosition() int32 {
	if x != nil && x.QueuePosition != nil {
		return *x.QueuePosition
	}
	return 0
}

func (x *CPackageReservationStatus) GetTotalQueueSize() int32 {
	if x != nil && x.TotalQueueSize != nil {
		return *x.TotalQueueSize
	}
	return 0
}

func (x *CPackageReservationStatus) GetReservationCountryCode() string {
	if x != nil && x.ReservationCountryCode != nil {
		return *x.ReservationCountryCode
	}
	return ""
}

func (x *CPackageReservationStatus) GetExpired() bool {
	if x != nil && x.Expired != nil {
		return *x.Expired
	}
	return false
}

func (x *CPackageReservationStatus) GetTimeExpires() uint32 {
	if x != nil && x.TimeExpires != nil {
		return *x.TimeExpires
	}
	return 0
}

func (x *CPackageReservationStatus) GetTimeReserved() uint32 {
	if x != nil && x.TimeReserved != nil {
		return *x.TimeReserved
	}
	return 0
}

func (x *CPackageReservationStatus) GetRtimeEstimatedNotification() uint32 {
	if x != nil && x.RtimeEstimatedNotification != nil {
		return *x.RtimeEstimatedNotification
	}
	return 0
}

func (x *CPackageReservationStatus) GetNotificatonToken() string {
	if x != nil && x.NotificatonToken != nil {
		return *x.NotificatonToken
	}
	return ""
}

type CReservationPositionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edistributor               *uint32 `protobuf:"varint,1,opt,name=edistributor" json:"edistributor,omitempty"`
	ProductIdentifier          *string `protobuf:"bytes,2,opt,name=product_identifier,json=productIdentifier" json:"product_identifier,omitempty"`
	StartQueuePosition         *uint32 `protobuf:"varint,3,opt,name=start_queue_position,json=startQueuePosition" json:"start_queue_position,omitempty"`
	RtimeEstimatedNotification *uint32 `protobuf:"varint,4,opt,name=rtime_estimated_notification,json=rtimeEstimatedNotification" json:"rtime_estimated_notification,omitempty"`
	LocalizationToken          *string `protobuf:"bytes,5,opt,name=localization_token,json=localizationToken" json:"localization_token,omitempty"`
	Accountid                  *uint32 `protobuf:"varint,6,opt,name=accountid" json:"accountid,omitempty"`
	RtimeCreated               *uint32 `protobuf:"varint,7,opt,name=rtime_created,json=rtimeCreated" json:"rtime_created,omitempty"`
}

func (x *CReservationPositionMessage) Reset() {
	*x = CReservationPositionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CReservationPositionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReservationPositionMessage) ProtoMessage() {}

func (x *CReservationPositionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReservationPositionMessage.ProtoReflect.Descriptor instead.
func (*CReservationPositionMessage) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{1}
}

func (x *CReservationPositionMessage) GetEdistributor() uint32 {
	if x != nil && x.Edistributor != nil {
		return *x.Edistributor
	}
	return 0
}

func (x *CReservationPositionMessage) GetProductIdentifier() string {
	if x != nil && x.ProductIdentifier != nil {
		return *x.ProductIdentifier
	}
	return ""
}

func (x *CReservationPositionMessage) GetStartQueuePosition() uint32 {
	if x != nil && x.StartQueuePosition != nil {
		return *x.StartQueuePosition
	}
	return 0
}

func (x *CReservationPositionMessage) GetRtimeEstimatedNotification() uint32 {
	if x != nil && x.RtimeEstimatedNotification != nil {
		return *x.RtimeEstimatedNotification
	}
	return 0
}

func (x *CReservationPositionMessage) GetLocalizationToken() string {
	if x != nil && x.LocalizationToken != nil {
		return *x.LocalizationToken
	}
	return ""
}

func (x *CReservationPositionMessage) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CReservationPositionMessage) GetRtimeCreated() uint32 {
	if x != nil && x.RtimeCreated != nil {
		return *x.RtimeCreated
	}
	return 0
}

type CSteamDeckCompatibility_SetFeedback_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid    *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Feedback *int32  `protobuf:"varint,2,opt,name=feedback" json:"feedback,omitempty"`
}

func (x *CSteamDeckCompatibility_SetFeedback_Request) Reset() {
	*x = CSteamDeckCompatibility_SetFeedback_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamDeckCompatibility_SetFeedback_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_SetFeedback_Request) ProtoMessage() {}

func (x *CSteamDeckCompatibility_SetFeedback_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_SetFeedback_Request.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_SetFeedback_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{2}
}

func (x *CSteamDeckCompatibility_SetFeedback_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CSteamDeckCompatibility_SetFeedback_Request) GetFeedback() int32 {
	if x != nil && x.Feedback != nil {
		return *x.Feedback
	}
	return 0
}

type CSteamDeckCompatibility_SetFeedback_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CSteamDeckCompatibility_SetFeedback_Response) Reset() {
	*x = CSteamDeckCompatibility_SetFeedback_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamDeckCompatibility_SetFeedback_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_SetFeedback_Response) ProtoMessage() {}

func (x *CSteamDeckCompatibility_SetFeedback_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_SetFeedback_Response.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_SetFeedback_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{3}
}

type CSteamDeckCompatibility_ShouldPrompt_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) Reset() {
	*x = CSteamDeckCompatibility_ShouldPrompt_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_ShouldPrompt_Request) ProtoMessage() {}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_ShouldPrompt_Request.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_ShouldPrompt_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{4}
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CSteamDeckCompatibility_ShouldPrompt_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt           *bool  `protobuf:"varint,1,opt,name=prompt" json:"prompt,omitempty"`
	FeedbackEligible *bool  `protobuf:"varint,2,opt,name=feedback_eligible,json=feedbackEligible" json:"feedback_eligible,omitempty"`
	ExistingFeedback *int32 `protobuf:"varint,3,opt,name=existing_feedback,json=existingFeedback" json:"existing_feedback,omitempty"`
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) Reset() {
	*x = CSteamDeckCompatibility_ShouldPrompt_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_ShouldPrompt_Response) ProtoMessage() {}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_ShouldPrompt_Response.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_ShouldPrompt_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{5}
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) GetPrompt() bool {
	if x != nil && x.Prompt != nil {
		return *x.Prompt
	}
	return false
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) GetFeedbackEligible() bool {
	if x != nil && x.FeedbackEligible != nil {
		return *x.FeedbackEligible
	}
	return false
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) GetExistingFeedback() int32 {
	if x != nil && x.ExistingFeedback != nil {
		return *x.ExistingFeedback
	}
	return 0
}

type CStore_DeleteReservationPositionMessage_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Edistributor       *uint32 `protobuf:"varint,1,opt,name=edistributor" json:"edistributor,omitempty"`
	ProductIdentifier  *string `protobuf:"bytes,2,opt,name=product_identifier,json=productIdentifier" json:"product_identifier,omitempty"`
	StartQueuePosition *uint32 `protobuf:"varint,3,opt,name=start_queue_position,json=startQueuePosition" json:"start_queue_position,omitempty"`
}

func (x *CStore_DeleteReservationPositionMessage_Request) Reset() {
	*x = CStore_DeleteReservationPositionMessage_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_DeleteReservationPositionMessage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_DeleteReservationPositionMessage_Request) ProtoMessage() {}

func (x *CStore_DeleteReservationPositionMessage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_DeleteReservationPositionMessage_Request.ProtoReflect.Descriptor instead.
func (*CStore_DeleteReservationPositionMessage_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{6}
}

func (x *CStore_DeleteReservationPositionMessage_Request) GetEdistributor() uint32 {
	if x != nil && x.Edistributor != nil {
		return *x.Edistributor
	}
	return 0
}

func (x *CStore_DeleteReservationPositionMessage_Request) GetProductIdentifier() string {
	if x != nil && x.ProductIdentifier != nil {
		return *x.ProductIdentifier
	}
	return ""
}

func (x *CStore_DeleteReservationPositionMessage_Request) GetStartQueuePosition() uint32 {
	if x != nil && x.StartQueuePosition != nil {
		return *x.StartQueuePosition
	}
	return 0
}

type CStore_DeleteReservationPositionMessage_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_DeleteReservationPositionMessage_Response) Reset() {
	*x = CStore_DeleteReservationPositionMessage_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_DeleteReservationPositionMessage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_DeleteReservationPositionMessage_Response) ProtoMessage() {}

func (x *CStore_DeleteReservationPositionMessage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_DeleteReservationPositionMessage_Response.ProtoReflect.Descriptor instead.
func (*CStore_DeleteReservationPositionMessage_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{7}
}

type CStore_GetAllReservationPositionMessages_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_GetAllReservationPositionMessages_Request) Reset() {
	*x = CStore_GetAllReservationPositionMessages_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetAllReservationPositionMessages_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetAllReservationPositionMessages_Request) ProtoMessage() {}

func (x *CStore_GetAllReservationPositionMessages_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetAllReservationPositionMessages_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetAllReservationPositionMessages_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{8}
}

type CStore_GetAllReservationPositionMessages_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings []*CReservationPositionMessage `protobuf:"bytes,1,rep,name=settings" json:"settings,omitempty"`
}

func (x *CStore_GetAllReservationPositionMessages_Response) Reset() {
	*x = CStore_GetAllReservationPositionMessages_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetAllReservationPositionMessages_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetAllReservationPositionMessages_Response) ProtoMessage() {}

func (x *CStore_GetAllReservationPositionMessages_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetAllReservationPositionMessages_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetAllReservationPositionMessages_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{9}
}

func (x *CStore_GetAllReservationPositionMessages_Response) GetSettings() []*CReservationPositionMessage {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CStore_GetDiscoveryQueue_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueType             *int32                        `protobuf:"varint,1,opt,name=queue_type,json=queueType" json:"queue_type,omitempty"`
	CountryCode           *string                       `protobuf:"bytes,2,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	RebuildQueue          *bool                         `protobuf:"varint,3,opt,name=rebuild_queue,json=rebuildQueue" json:"rebuild_queue,omitempty"`
	SettingsChanged       *bool                         `protobuf:"varint,4,opt,name=settings_changed,json=settingsChanged" json:"settings_changed,omitempty"`
	Settings              *CStoreDiscoveryQueueSettings `protobuf:"bytes,5,opt,name=settings" json:"settings,omitempty"`
	RebuildQueueIfStale   *bool                         `protobuf:"varint,6,opt,name=rebuild_queue_if_stale,json=rebuildQueueIfStale" json:"rebuild_queue_if_stale,omitempty"`
	IgnoreUserPreferences *bool                         `protobuf:"varint,8,opt,name=ignore_user_preferences,json=ignoreUserPreferences" json:"ignore_user_preferences,omitempty"`
	NoExperimentalResults *bool                         `protobuf:"varint,9,opt,name=no_experimental_results,json=noExperimentalResults" json:"no_experimental_results,omitempty"`
	ExperimentalCohort    *uint32                       `protobuf:"varint,10,opt,name=experimental_cohort,json=experimentalCohort" json:"experimental_cohort,omitempty"`
	DebugGetSolrQuery     *bool                         `protobuf:"varint,11,opt,name=debug_get_solr_query,json=debugGetSolrQuery" json:"debug_get_solr_query,omitempty"`
	StorePageFilter       *CStorePageFilter             `protobuf:"bytes,12,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
}

func (x *CStore_GetDiscoveryQueue_Request) Reset() {
	*x = CStore_GetDiscoveryQueue_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetDiscoveryQueue_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueue_Request) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueue_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueue_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueue_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{10}
}

func (x *CStore_GetDiscoveryQueue_Request) GetQueueType() int32 {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return 0
}

func (x *CStore_GetDiscoveryQueue_Request) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_GetDiscoveryQueue_Request) GetRebuildQueue() bool {
	if x != nil && x.RebuildQueue != nil {
		return *x.RebuildQueue
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetSettingsChanged() bool {
	if x != nil && x.SettingsChanged != nil {
		return *x.SettingsChanged
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetSettings() *CStoreDiscoveryQueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Request) GetRebuildQueueIfStale() bool {
	if x != nil && x.RebuildQueueIfStale != nil {
		return *x.RebuildQueueIfStale
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetIgnoreUserPreferences() bool {
	if x != nil && x.IgnoreUserPreferences != nil {
		return *x.IgnoreUserPreferences
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetNoExperimentalResults() bool {
	if x != nil && x.NoExperimentalResults != nil {
		return *x.NoExperimentalResults
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetExperimentalCohort() uint32 {
	if x != nil && x.ExperimentalCohort != nil {
		return *x.ExperimentalCohort
	}
	return 0
}

func (x *CStore_GetDiscoveryQueue_Request) GetDebugGetSolrQuery() bool {
	if x != nil && x.DebugGetSolrQuery != nil {
		return *x.DebugGetSolrQuery
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStore_GetDiscoveryQueue_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids             []uint32                      `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	CountryCode        *string                       `protobuf:"bytes,2,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Settings           *CStoreDiscoveryQueueSettings `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
	Skipped            *int32                        `protobuf:"varint,4,opt,name=skipped" json:"skipped,omitempty"`
	Exhausted          *bool                         `protobuf:"varint,5,opt,name=exhausted" json:"exhausted,omitempty"`
	ExperimentalCohort *uint32                       `protobuf:"varint,6,opt,name=experimental_cohort,json=experimentalCohort" json:"experimental_cohort,omitempty"`
	DebugSolrQuery     *string                       `protobuf:"bytes,7,opt,name=debug_solr_query,json=debugSolrQuery" json:"debug_solr_query,omitempty"`
}

func (x *CStore_GetDiscoveryQueue_Response) Reset() {
	*x = CStore_GetDiscoveryQueue_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetDiscoveryQueue_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueue_Response) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueue_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueue_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueue_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{11}
}

func (x *CStore_GetDiscoveryQueue_Response) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Response) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_GetDiscoveryQueue_Response) GetSettings() *CStoreDiscoveryQueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Response) GetSkipped() int32 {
	if x != nil && x.Skipped != nil {
		return *x.Skipped
	}
	return 0
}

func (x *CStore_GetDiscoveryQueue_Response) GetExhausted() bool {
	if x != nil && x.Exhausted != nil {
		return *x.Exhausted
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Response) GetExperimentalCohort() uint32 {
	if x != nil && x.ExperimentalCohort != nil {
		return *x.ExperimentalCohort
	}
	return 0
}

func (x *CStore_GetDiscoveryQueue_Response) GetDebugSolrQuery() string {
	if x != nil && x.DebugSolrQuery != nil {
		return *x.DebugSolrQuery
	}
	return ""
}

type CStore_GetDiscoveryQueueSettings_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueType       *int32            `protobuf:"varint,1,opt,name=queue_type,json=queueType" json:"queue_type,omitempty"`
	StorePageFilter *CStorePageFilter `protobuf:"bytes,2,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
}

func (x *CStore_GetDiscoveryQueueSettings_Request) Reset() {
	*x = CStore_GetDiscoveryQueueSettings_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetDiscoveryQueueSettings_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSettings_Request) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSettings_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSettings_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSettings_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{12}
}

func (x *CStore_GetDiscoveryQueueSettings_Request) GetQueueType() int32 {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return 0
}

func (x *CStore_GetDiscoveryQueueSettings_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStore_GetDiscoveryQueueSettings_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode *string                       `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Settings    *CStoreDiscoveryQueueSettings `protobuf:"bytes,2,opt,name=settings" json:"settings,omitempty"`
}

func (x *CStore_GetDiscoveryQueueSettings_Response) Reset() {
	*x = CStore_GetDiscoveryQueueSettings_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetDiscoveryQueueSettings_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSettings_Response) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSettings_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSettings_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSettings_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{13}
}

func (x *CStore_GetDiscoveryQueueSettings_Response) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_GetDiscoveryQueueSettings_Response) GetSettings() *CStoreDiscoveryQueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CStore_GetDiscoveryQueueSkippedApps_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid         *uint64           `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	QueueType       *int32            `protobuf:"varint,2,opt,name=queue_type,json=queueType" json:"queue_type,omitempty"`
	StorePageFilter *CStorePageFilter `protobuf:"bytes,3,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) Reset() {
	*x = CStore_GetDiscoveryQueueSkippedApps_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSkippedApps_Request) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSkippedApps_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSkippedApps_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{14}
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) GetQueueType() int32 {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return 0
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStore_GetDiscoveryQueueSkippedApps_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids []uint32 `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) Reset() {
	*x = CStore_GetDiscoveryQueueSkippedApps_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSkippedApps_Response) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSkippedApps_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSkippedApps_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{15}
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

type CStore_GetLocalizedNameForTags_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string  `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Tagids   []uint32 `protobuf:"varint,2,rep,name=tagids" json:"tagids,omitempty"`
}

func (x *CStore_GetLocalizedNameForTags_Request) Reset() {
	*x = CStore_GetLocalizedNameForTags_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetLocalizedNameForTags_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetLocalizedNameForTags_Request) ProtoMessage() {}

func (x *CStore_GetLocalizedNameForTags_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetLocalizedNameForTags_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetLocalizedNameForTags_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{16}
}

func (x *CStore_GetLocalizedNameForTags_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CStore_GetLocalizedNameForTags_Request) GetTagids() []uint32 {
	if x != nil {
		return x.Tagids
	}
	return nil
}

type CStore_GetLocalizedNameForTags_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*CStore_GetLocalizedNameForTags_Response_Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (x *CStore_GetLocalizedNameForTags_Response) Reset() {
	*x = CStore_GetLocalizedNameForTags_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetLocalizedNameForTags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetLocalizedNameForTags_Response) ProtoMessage() {}

func (x *CStore_GetLocalizedNameForTags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetLocalizedNameForTags_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetLocalizedNameForTags_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{17}
}

func (x *CStore_GetLocalizedNameForTags_Response) GetTags() []*CStore_GetLocalizedNameForTags_Response_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CStore_GetLocalizedNameForTags_Response_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tagid          *uint32 `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	EnglishName    *string `protobuf:"bytes,2,opt,name=english_name,json=englishName" json:"english_name,omitempty"`
	Name           *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	NormalizedName *string `protobuf:"bytes,4,opt,name=normalized_name,json=normalizedName" json:"normalized_name,omitempty"`
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) Reset() {
	*x = CStore_GetLocalizedNameForTags_Response_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetLocalizedNameForTags_Response_Tag) ProtoMessage() {}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetLocalizedNameForTags_Response_Tag.ProtoReflect.Descriptor instead.
func (*CStore_GetLocalizedNameForTags_Response_Tag) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{18}
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetEnglishName() string {
	if x != nil && x.EnglishName != nil {
		return *x.EnglishName
	}
	return ""
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetNormalizedName() string {
	if x != nil && x.NormalizedName != nil {
		return *x.NormalizedName
	}
	return ""
}

type CStore_GetMostPopularTags_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (x *CStore_GetMostPopularTags_Request) Reset() {
	*x = CStore_GetMostPopularTags_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetMostPopularTags_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetMostPopularTags_Request) ProtoMessage() {}

func (x *CStore_GetMostPopularTags_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetMostPopularTags_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetMostPopularTags_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{19}
}

func (x *CStore_GetMostPopularTags_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CStore_GetMostPopularTags_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*CStore_GetMostPopularTags_Response_Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (x *CStore_GetMostPopularTags_Response) Reset() {
	*x = CStore_GetMostPopularTags_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetMostPopularTags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetMostPopularTags_Response) ProtoMessage() {}

func (x *CStore_GetMostPopularTags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetMostPopularTags_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetMostPopularTags_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{20}
}

func (x *CStore_GetMostPopularTags_Response) GetTags() []*CStore_GetMostPopularTags_Response_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CStore_GetMostPopularTags_Response_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tagid *uint32 `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Name  *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *CStore_GetMostPopularTags_Response_Tag) Reset() {
	*x = CStore_GetMostPopularTags_Response_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetMostPopularTags_Response_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetMostPopularTags_Response_Tag) ProtoMessage() {}

func (x *CStore_GetMostPopularTags_Response_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetMostPopularTags_Response_Tag.ProtoReflect.Descriptor instead.
func (*CStore_GetMostPopularTags_Response_Tag) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{21}
}

func (x *CStore_GetMostPopularTags_Response_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_GetMostPopularTags_Response_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CStore_GetStorePreferences_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_GetStorePreferences_Request) Reset() {
	*x = CStore_GetStorePreferences_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetStorePreferences_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetStorePreferences_Request) ProtoMessage() {}

func (x *CStore_GetStorePreferences_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetStorePreferences_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetStorePreferences_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{22}
}

type CStore_GetStorePreferences_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preferences                  *CStore_UserPreferences                  `protobuf:"bytes,1,opt,name=preferences" json:"preferences,omitempty"`
	TagPreferences               *CStore_UserTagPreferences               `protobuf:"bytes,2,opt,name=tag_preferences,json=tagPreferences" json:"tag_preferences,omitempty"`
	ContentDescriptorPreferences *CStore_UserContentDescriptorPreferences `protobuf:"bytes,3,opt,name=content_descriptor_preferences,json=contentDescriptorPreferences" json:"content_descriptor_preferences,omitempty"` //optional .UserContentDescriptorPreferences content_descriptor_preferences = 3;
}

func (x *CStore_GetStorePreferences_Response) Reset() {
	*x = CStore_GetStorePreferences_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetStorePreferences_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetStorePreferences_Response) ProtoMessage() {}

func (x *CStore_GetStorePreferences_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetStorePreferences_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetStorePreferences_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{23}
}

func (x *CStore_GetStorePreferences_Response) GetPreferences() *CStore_UserPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *CStore_GetStorePreferences_Response) GetTagPreferences() *CStore_UserTagPreferences {
	if x != nil {
		return x.TagPreferences
	}
	return nil
}

func (x *CStore_GetStorePreferences_Response) GetContentDescriptorPreferences() *CStore_UserContentDescriptorPreferences {
	if x != nil {
		return x.ContentDescriptorPreferences
	}
	return nil
}

type CStore_GetTagList_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language        *string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	HaveVersionHash *string `protobuf:"bytes,2,opt,name=have_version_hash,json=haveVersionHash" json:"have_version_hash,omitempty"`
}

func (x *CStore_GetTagList_Request) Reset() {
	*x = CStore_GetTagList_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetTagList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTagList_Request) ProtoMessage() {}

func (x *CStore_GetTagList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTagList_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetTagList_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{24}
}

func (x *CStore_GetTagList_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CStore_GetTagList_Request) GetHaveVersionHash() string {
	if x != nil && x.HaveVersionHash != nil {
		return *x.HaveVersionHash
	}
	return ""
}

type CStore_GetTagList_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionHash *string                           `protobuf:"bytes,1,opt,name=version_hash,json=versionHash" json:"version_hash,omitempty"`
	Tags        []*CStore_GetTagList_Response_Tag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
}

func (x *CStore_GetTagList_Response) Reset() {
	*x = CStore_GetTagList_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetTagList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTagList_Response) ProtoMessage() {}

func (x *CStore_GetTagList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTagList_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetTagList_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{25}
}

func (x *CStore_GetTagList_Response) GetVersionHash() string {
	if x != nil && x.VersionHash != nil {
		return *x.VersionHash
	}
	return ""
}

func (x *CStore_GetTagList_Response) GetTags() []*CStore_GetTagList_Response_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CStore_GetTagList_Response_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tagid *uint32 `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Name  *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *CStore_GetTagList_Response_Tag) Reset() {
	*x = CStore_GetTagList_Response_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetTagList_Response_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTagList_Response_Tag) ProtoMessage() {}

func (x *CStore_GetTagList_Response_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTagList_Response_Tag.ProtoReflect.Descriptor instead.
func (*CStore_GetTagList_Response_Tag) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{26}
}

func (x *CStore_GetTagList_Response_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_GetTagList_Response_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CStore_GetTrendingAppsAmongFriends_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumApps       *uint32 `protobuf:"varint,1,opt,name=num_apps,json=numApps" json:"num_apps,omitempty"`
	NumTopFriends *uint32 `protobuf:"varint,2,opt,name=num_top_friends,json=numTopFriends" json:"num_top_friends,omitempty"`
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) Reset() {
	*x = CStore_GetTrendingAppsAmongFriends_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTrendingAppsAmongFriends_Request) ProtoMessage() {}

func (x *CStore_GetTrendingAppsAmongFriends_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTrendingAppsAmongFriends_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetTrendingAppsAmongFriends_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{27}
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) GetNumApps() uint32 {
	if x != nil && x.NumApps != nil {
		return *x.NumApps
	}
	return 0
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) GetNumTopFriends() uint32 {
	if x != nil && x.NumTopFriends != nil {
		return *x.NumTopFriends
	}
	return 0
}

type CStore_GetTrendingAppsAmongFriends_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrendingApps []*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData `protobuf:"bytes,1,rep,name=trending_apps,json=trendingApps" json:"trending_apps,omitempty"`
}

func (x *CStore_GetTrendingAppsAmongFriends_Response) Reset() {
	*x = CStore_GetTrendingAppsAmongFriends_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetTrendingAppsAmongFriends_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTrendingAppsAmongFriends_Response) ProtoMessage() {}

func (x *CStore_GetTrendingAppsAmongFriends_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTrendingAppsAmongFriends_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetTrendingAppsAmongFriends_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{28}
}

func (x *CStore_GetTrendingAppsAmongFriends_Response) GetTrendingApps() []*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData {
	if x != nil {
		return x.TrendingApps
	}
	return nil
}

type CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid              *uint32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	SteamidsTopFriends []uint64 `protobuf:"varint,2,rep,name=steamids_top_friends,json=steamidsTopFriends" json:"steamids_top_friends,omitempty"`
	TotalFriends       *uint32  `protobuf:"varint,3,opt,name=total_friends,json=totalFriends" json:"total_friends,omitempty"`
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) Reset() {
	*x = CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) ProtoMessage() {}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData.ProtoReflect.Descriptor instead.
func (*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{29}
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) GetSteamidsTopFriends() []uint64 {
	if x != nil {
		return x.SteamidsTopFriends
	}
	return nil
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) GetTotalFriends() uint32 {
	if x != nil && x.TotalFriends != nil {
		return *x.TotalFriends
	}
	return 0
}

type CStore_GetUserGameInterestState_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	StoreAppid *uint32 `protobuf:"varint,2,opt,name=store_appid,json=storeAppid" json:"store_appid,omitempty"`
	BetaAppid  *uint32 `protobuf:"varint,3,opt,name=beta_appid,json=betaAppid" json:"beta_appid,omitempty"`
}

func (x *CStore_GetUserGameInterestState_Request) Reset() {
	*x = CStore_GetUserGameInterestState_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetUserGameInterestState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserGameInterestState_Request) ProtoMessage() {}

func (x *CStore_GetUserGameInterestState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserGameInterestState_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetUserGameInterestState_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{30}
}

func (x *CStore_GetUserGameInterestState_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Request) GetStoreAppid() uint32 {
	if x != nil && x.StoreAppid != nil {
		return *x.StoreAppid
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Request) GetBetaAppid() uint32 {
	if x != nil && x.BetaAppid != nil {
		return *x.BetaAppid
	}
	return 0
}

type CStore_GetUserGameInterestState_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owned               *bool                                               `protobuf:"varint,1,opt,name=owned" json:"owned,omitempty"`
	Wishlist            *bool                                               `protobuf:"varint,2,opt,name=wishlist" json:"wishlist,omitempty"`
	Ignored             *bool                                               `protobuf:"varint,3,opt,name=ignored" json:"ignored,omitempty"`
	Following           *bool                                               `protobuf:"varint,4,opt,name=following" json:"following,omitempty"`
	InQueues            []int32                                             `protobuf:"varint,5,rep,name=in_queues,json=inQueues" json:"in_queues,omitempty"`
	QueuesWithSkip      []int32                                             `protobuf:"varint,6,rep,name=queues_with_skip,json=queuesWithSkip" json:"queues_with_skip,omitempty"`
	QueueItemsRemaining []int32                                             `protobuf:"varint,7,rep,name=queue_items_remaining,json=queueItemsRemaining" json:"queue_items_remaining,omitempty"`
	QueueItemsNextAppid []uint32                                            `protobuf:"varint,8,rep,name=queue_items_next_appid,json=queueItemsNextAppid" json:"queue_items_next_appid,omitempty"`
	TemporarilyOwned    *bool                                               `protobuf:"varint,9,opt,name=temporarily_owned,json=temporarilyOwned" json:"temporarily_owned,omitempty"`
	Queues              []*CStore_GetUserGameInterestState_Response_InQueue `protobuf:"bytes,10,rep,name=queues" json:"queues,omitempty"`
	IgnoredReason       *int32                                              `protobuf:"varint,11,opt,name=ignored_reason,json=ignoredReason" json:"ignored_reason,omitempty"`
	BetaStatus          *int32                                              `protobuf:"varint,12,opt,name=beta_status,json=betaStatus" json:"beta_status,omitempty"`
}

func (x *CStore_GetUserGameInterestState_Response) Reset() {
	*x = CStore_GetUserGameInterestState_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetUserGameInterestState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserGameInterestState_Response) ProtoMessage() {}

func (x *CStore_GetUserGameInterestState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserGameInterestState_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetUserGameInterestState_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{31}
}

func (x *CStore_GetUserGameInterestState_Response) GetOwned() bool {
	if x != nil && x.Owned != nil {
		return *x.Owned
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetWishlist() bool {
	if x != nil && x.Wishlist != nil {
		return *x.Wishlist
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetIgnored() bool {
	if x != nil && x.Ignored != nil {
		return *x.Ignored
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetFollowing() bool {
	if x != nil && x.Following != nil {
		return *x.Following
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetInQueues() []int32 {
	if x != nil {
		return x.InQueues
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetQueuesWithSkip() []int32 {
	if x != nil {
		return x.QueuesWithSkip
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetQueueItemsRemaining() []int32 {
	if x != nil {
		return x.QueueItemsRemaining
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetQueueItemsNextAppid() []uint32 {
	if x != nil {
		return x.QueueItemsNextAppid
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetTemporarilyOwned() bool {
	if x != nil && x.TemporarilyOwned != nil {
		return *x.TemporarilyOwned
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetQueues() []*CStore_GetUserGameInterestState_Response_InQueue {
	if x != nil {
		return x.Queues
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetIgnoredReason() int32 {
	if x != nil && x.IgnoredReason != nil {
		return *x.IgnoredReason
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Response) GetBetaStatus() int32 {
	if x != nil && x.BetaStatus != nil {
		return *x.BetaStatus
	}
	return 0
}

type CStore_GetUserGameInterestState_Response_InQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               *int32  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Skipped            *bool   `protobuf:"varint,2,opt,name=skipped" json:"skipped,omitempty"`
	ItemsRemaining     *int32  `protobuf:"varint,3,opt,name=items_remaining,json=itemsRemaining" json:"items_remaining,omitempty"`
	NextAppid          *uint32 `protobuf:"varint,4,opt,name=next_appid,json=nextAppid" json:"next_appid,omitempty"`
	ExperimentalCohort *uint32 `protobuf:"varint,5,opt,name=experimental_cohort,json=experimentalCohort" json:"experimental_cohort,omitempty"`
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) Reset() {
	*x = CStore_GetUserGameInterestState_Response_InQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserGameInterestState_Response_InQueue) ProtoMessage() {}

func (x *CStore_GetUserGameInterestState_Response_InQueue) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserGameInterestState_Response_InQueue.ProtoReflect.Descriptor instead.
func (*CStore_GetUserGameInterestState_Response_InQueue) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{32}
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetSkipped() bool {
	if x != nil && x.Skipped != nil {
		return *x.Skipped
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetItemsRemaining() int32 {
	if x != nil && x.ItemsRemaining != nil {
		return *x.ItemsRemaining
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetNextAppid() uint32 {
	if x != nil && x.NextAppid != nil {
		return *x.NextAppid
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetExperimentalCohort() uint32 {
	if x != nil && x.ExperimentalCohort != nil {
		return *x.ExperimentalCohort
	}
	return 0
}

type CStore_GetWishlistDemoEmailStatus_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid           *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DemoAppid       *uint32 `protobuf:"varint,2,opt,name=demo_appid,json=demoAppid" json:"demo_appid,omitempty"`
	AllowLateFiring *bool   `protobuf:"varint,3,opt,name=allow_late_firing,json=allowLateFiring" json:"allow_late_firing,omitempty"`
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) Reset() {
	*x = CStore_GetWishlistDemoEmailStatus_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetWishlistDemoEmailStatus_Request) ProtoMessage() {}

func (x *CStore_GetWishlistDemoEmailStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetWishlistDemoEmailStatus_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetWishlistDemoEmailStatus_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{33}
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) GetDemoAppid() uint32 {
	if x != nil && x.DemoAppid != nil {
		return *x.DemoAppid
	}
	return 0
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) GetAllowLateFiring() bool {
	if x != nil && x.AllowLateFiring != nil {
		return *x.AllowLateFiring
	}
	return false
}

type CStore_GetWishlistDemoEmailStatus_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CanFire         *bool   `protobuf:"varint,1,opt,name=can_fire,json=canFire,def=0" json:"can_fire,omitempty"`
	TimeStaged      *uint32 `protobuf:"varint,2,opt,name=time_staged,json=timeStaged" json:"time_staged,omitempty"`
	DemoReleaseDate *uint32 `protobuf:"varint,3,opt,name=demo_release_date,json=demoReleaseDate" json:"demo_release_date,omitempty"`
}

// Default values for CStore_GetWishlistDemoEmailStatus_Response fields.
const (
	Default_CStore_GetWishlistDemoEmailStatus_Response_CanFire = bool(false)
)

func (x *CStore_GetWishlistDemoEmailStatus_Response) Reset() {
	*x = CStore_GetWishlistDemoEmailStatus_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetWishlistDemoEmailStatus_Response) ProtoMessage() {}

func (x *CStore_GetWishlistDemoEmailStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetWishlistDemoEmailStatus_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetWishlistDemoEmailStatus_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{34}
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) GetCanFire() bool {
	if x != nil && x.CanFire != nil {
		return *x.CanFire
	}
	return Default_CStore_GetWishlistDemoEmailStatus_Response_CanFire
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) GetTimeStaged() uint32 {
	if x != nil && x.TimeStaged != nil {
		return *x.TimeStaged
	}
	return 0
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) GetDemoReleaseDate() uint32 {
	if x != nil && x.DemoReleaseDate != nil {
		return *x.DemoReleaseDate
	}
	return 0
}

type CStore_MigratePartnerLinkTracking_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid      *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Browserid      *uint64 `protobuf:"varint,2,opt,name=browserid" json:"browserid,omitempty"`
	BackfillSource *int32  `protobuf:"varint,3,opt,name=backfill_source,json=backfillSource" json:"backfill_source,omitempty"`
}

func (x *CStore_MigratePartnerLinkTracking_Notification) Reset() {
	*x = CStore_MigratePartnerLinkTracking_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_MigratePartnerLinkTracking_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_MigratePartnerLinkTracking_Notification) ProtoMessage() {}

func (x *CStore_MigratePartnerLinkTracking_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_MigratePartnerLinkTracking_Notification.ProtoReflect.Descriptor instead.
func (*CStore_MigratePartnerLinkTracking_Notification) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{35}
}

func (x *CStore_MigratePartnerLinkTracking_Notification) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CStore_MigratePartnerLinkTracking_Notification) GetBrowserid() uint64 {
	if x != nil && x.Browserid != nil {
		return *x.Browserid
	}
	return 0
}

func (x *CStore_MigratePartnerLinkTracking_Notification) GetBackfillSource() int32 {
	if x != nil && x.BackfillSource != nil {
		return *x.BackfillSource
	}
	return 0
}

type CStore_PurchaseReceiptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactionid   *uint64                                `protobuf:"varint,1,opt,name=transactionid" json:"transactionid,omitempty"`
	Packageid       *uint32                                `protobuf:"varint,2,opt,name=packageid" json:"packageid,omitempty"`
	PurchaseStatus  *uint32                                `protobuf:"varint,3,opt,name=purchase_status,json=purchaseStatus" json:"purchase_status,omitempty"`
	ResultDetail    *uint32                                `protobuf:"varint,4,opt,name=result_detail,json=resultDetail" json:"result_detail,omitempty"`
	TransactionTime *uint32                                `protobuf:"varint,5,opt,name=transaction_time,json=transactionTime" json:"transaction_time,omitempty"`
	PaymentMethod   *uint32                                `protobuf:"varint,6,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty"`
	BasePrice       *uint64                                `protobuf:"varint,7,opt,name=base_price,json=basePrice" json:"base_price,omitempty"`
	TotalDiscount   *uint64                                `protobuf:"varint,8,opt,name=total_discount,json=totalDiscount" json:"total_discount,omitempty"`
	Tax             *uint64                                `protobuf:"varint,9,opt,name=tax" json:"tax,omitempty"`
	Shipping        *uint64                                `protobuf:"varint,10,opt,name=shipping" json:"shipping,omitempty"`
	CurrencyCode    *uint32                                `protobuf:"varint,11,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	CountryCode     *string                                `protobuf:"bytes,12,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	ErrorHeadline   *string                                `protobuf:"bytes,13,opt,name=error_headline,json=errorHeadline" json:"error_headline,omitempty"`
	ErrorString     *string                                `protobuf:"bytes,14,opt,name=error_string,json=errorString" json:"error_string,omitempty"`
	ErrorLinkText   *string                                `protobuf:"bytes,15,opt,name=error_link_text,json=errorLinkText" json:"error_link_text,omitempty"`
	ErrorLinkUrl    *string                                `protobuf:"bytes,16,opt,name=error_link_url,json=errorLinkUrl" json:"error_link_url,omitempty"`
	ErrorAppid      *uint32                                `protobuf:"varint,17,opt,name=error_appid,json=errorAppid" json:"error_appid,omitempty"`
	LineItems       []*CStore_PurchaseReceiptInfo_LineItem `protobuf:"bytes,18,rep,name=line_items,json=lineItems" json:"line_items,omitempty"`
}

func (x *CStore_PurchaseReceiptInfo) Reset() {
	*x = CStore_PurchaseReceiptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_PurchaseReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_PurchaseReceiptInfo) ProtoMessage() {}

func (x *CStore_PurchaseReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_PurchaseReceiptInfo.ProtoReflect.Descriptor instead.
func (*CStore_PurchaseReceiptInfo) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{36}
}

func (x *CStore_PurchaseReceiptInfo) GetTransactionid() uint64 {
	if x != nil && x.Transactionid != nil {
		return *x.Transactionid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetPurchaseStatus() uint32 {
	if x != nil && x.PurchaseStatus != nil {
		return *x.PurchaseStatus
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetResultDetail() uint32 {
	if x != nil && x.ResultDetail != nil {
		return *x.ResultDetail
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetTransactionTime() uint32 {
	if x != nil && x.TransactionTime != nil {
		return *x.TransactionTime
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetPaymentMethod() uint32 {
	if x != nil && x.PaymentMethod != nil {
		return *x.PaymentMethod
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetBasePrice() uint64 {
	if x != nil && x.BasePrice != nil {
		return *x.BasePrice
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetTotalDiscount() uint64 {
	if x != nil && x.TotalDiscount != nil {
		return *x.TotalDiscount
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetTax() uint64 {
	if x != nil && x.Tax != nil {
		return *x.Tax
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetShipping() uint64 {
	if x != nil && x.Shipping != nil {
		return *x.Shipping
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetCurrencyCode() uint32 {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorHeadline() string {
	if x != nil && x.ErrorHeadline != nil {
		return *x.ErrorHeadline
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorString() string {
	if x != nil && x.ErrorString != nil {
		return *x.ErrorString
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorLinkText() string {
	if x != nil && x.ErrorLinkText != nil {
		return *x.ErrorLinkText
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorLinkUrl() string {
	if x != nil && x.ErrorLinkUrl != nil {
		return *x.ErrorLinkUrl
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorAppid() uint32 {
	if x != nil && x.ErrorAppid != nil {
		return *x.ErrorAppid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetLineItems() []*CStore_PurchaseReceiptInfo_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type CStore_PurchaseReceiptInfo_LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageid           *uint32 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	Appid               *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	LineItemDescription *string `protobuf:"bytes,3,opt,name=line_item_description,json=lineItemDescription" json:"line_item_description,omitempty"`
}

func (x *CStore_PurchaseReceiptInfo_LineItem) Reset() {
	*x = CStore_PurchaseReceiptInfo_LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_PurchaseReceiptInfo_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_PurchaseReceiptInfo_LineItem) ProtoMessage() {}

func (x *CStore_PurchaseReceiptInfo_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_PurchaseReceiptInfo_LineItem.ProtoReflect.Descriptor instead.
func (*CStore_PurchaseReceiptInfo_LineItem) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{37}
}

func (x *CStore_PurchaseReceiptInfo_LineItem) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo_LineItem) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo_LineItem) GetLineItemDescription() string {
	if x != nil && x.LineItemDescription != nil {
		return *x.LineItemDescription
	}
	return ""
}

type CStore_QueueWishlistDemoEmailToFire_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid           *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DemoAppid       *uint32 `protobuf:"varint,2,opt,name=demo_appid,json=demoAppid" json:"demo_appid,omitempty"`
	AllowLateFiring *bool   `protobuf:"varint,3,opt,name=allow_late_firing,json=allowLateFiring" json:"allow_late_firing,omitempty"`
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) Reset() {
	*x = CStore_QueueWishlistDemoEmailToFire_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_QueueWishlistDemoEmailToFire_Request) ProtoMessage() {}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_QueueWishlistDemoEmailToFire_Request.ProtoReflect.Descriptor instead.
func (*CStore_QueueWishlistDemoEmailToFire_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{38}
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) GetDemoAppid() uint32 {
	if x != nil && x.DemoAppid != nil {
		return *x.DemoAppid
	}
	return 0
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) GetAllowLateFiring() bool {
	if x != nil && x.AllowLateFiring != nil {
		return *x.AllowLateFiring
	}
	return false
}

type CStore_QueueWishlistDemoEmailToFire_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_QueueWishlistDemoEmailToFire_Response) Reset() {
	*x = CStore_QueueWishlistDemoEmailToFire_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_QueueWishlistDemoEmailToFire_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_QueueWishlistDemoEmailToFire_Response) ProtoMessage() {}

func (x *CStore_QueueWishlistDemoEmailToFire_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_QueueWishlistDemoEmailToFire_Response.ProtoReflect.Descriptor instead.
func (*CStore_QueueWishlistDemoEmailToFire_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{39}
}

type CStore_RegisterCDKey_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivationCode      *string `protobuf:"bytes,1,opt,name=activation_code,json=activationCode" json:"activation_code,omitempty"`
	PurchasePlatform    *int32  `protobuf:"varint,2,opt,name=purchase_platform,json=purchasePlatform" json:"purchase_platform,omitempty"`
	IsRequestFromClient *bool   `protobuf:"varint,3,opt,name=is_request_from_client,json=isRequestFromClient" json:"is_request_from_client,omitempty"`
}

func (x *CStore_RegisterCDKey_Request) Reset() {
	*x = CStore_RegisterCDKey_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_RegisterCDKey_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_RegisterCDKey_Request) ProtoMessage() {}

func (x *CStore_RegisterCDKey_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_RegisterCDKey_Request.ProtoReflect.Descriptor instead.
func (*CStore_RegisterCDKey_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{40}
}

func (x *CStore_RegisterCDKey_Request) GetActivationCode() string {
	if x != nil && x.ActivationCode != nil {
		return *x.ActivationCode
	}
	return ""
}

func (x *CStore_RegisterCDKey_Request) GetPurchasePlatform() int32 {
	if x != nil && x.PurchasePlatform != nil {
		return *x.PurchasePlatform
	}
	return 0
}

func (x *CStore_RegisterCDKey_Request) GetIsRequestFromClient() bool {
	if x != nil && x.IsRequestFromClient != nil {
		return *x.IsRequestFromClient
	}
	return false
}

type CStore_RegisterCDKey_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseResultDetails *int32                      `protobuf:"varint,1,opt,name=purchase_result_details,json=purchaseResultDetails" json:"purchase_result_details,omitempty"`
	PurchaseReceiptInfo   *CStore_PurchaseReceiptInfo `protobuf:"bytes,2,opt,name=purchase_receipt_info,json=purchaseReceiptInfo" json:"purchase_receipt_info,omitempty"`
}

func (x *CStore_RegisterCDKey_Response) Reset() {
	*x = CStore_RegisterCDKey_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_RegisterCDKey_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_RegisterCDKey_Response) ProtoMessage() {}

func (x *CStore_RegisterCDKey_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_RegisterCDKey_Response.ProtoReflect.Descriptor instead.
func (*CStore_RegisterCDKey_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{41}
}

func (x *CStore_RegisterCDKey_Response) GetPurchaseResultDetails() int32 {
	if x != nil && x.PurchaseResultDetails != nil {
		return *x.PurchaseResultDetails
	}
	return 0
}

func (x *CStore_RegisterCDKey_Response) GetPurchaseReceiptInfo() *CStore_PurchaseReceiptInfo {
	if x != nil {
		return x.PurchaseReceiptInfo
	}
	return nil
}

type CStore_ReloadAllReservationPositionMessages_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_ReloadAllReservationPositionMessages_Notification) Reset() {
	*x = CStore_ReloadAllReservationPositionMessages_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_ReloadAllReservationPositionMessages_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_ReloadAllReservationPositionMessages_Notification) ProtoMessage() {}

func (x *CStore_ReloadAllReservationPositionMessages_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_ReloadAllReservationPositionMessages_Notification.ProtoReflect.Descriptor instead.
func (*CStore_ReloadAllReservationPositionMessages_Notification) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{42}
}

type CStore_ReportApp_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ReportType *int32  `protobuf:"varint,2,opt,name=report_type,json=reportType" json:"report_type,omitempty"`
	Report     *string `protobuf:"bytes,3,opt,name=report" json:"report,omitempty"`
}

func (x *CStore_ReportApp_Request) Reset() {
	*x = CStore_ReportApp_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_ReportApp_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_ReportApp_Request) ProtoMessage() {}

func (x *CStore_ReportApp_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_ReportApp_Request.ProtoReflect.Descriptor instead.
func (*CStore_ReportApp_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{43}
}

func (x *CStore_ReportApp_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_ReportApp_Request) GetReportType() int32 {
	if x != nil && x.ReportType != nil {
		return *x.ReportType
	}
	return 0
}

func (x *CStore_ReportApp_Request) GetReport() string {
	if x != nil && x.Report != nil {
		return *x.Report
	}
	return ""
}

type CStore_ReportApp_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_ReportApp_Response) Reset() {
	*x = CStore_ReportApp_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_ReportApp_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_ReportApp_Response) ProtoMessage() {}

func (x *CStore_ReportApp_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_ReportApp_Response.ProtoReflect.Descriptor instead.
func (*CStore_ReportApp_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{44}
}

type CStore_SetReservationPositionMessage_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings []*CReservationPositionMessage `protobuf:"bytes,1,rep,name=settings" json:"settings,omitempty"`
}

func (x *CStore_SetReservationPositionMessage_Request) Reset() {
	*x = CStore_SetReservationPositionMessage_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_SetReservationPositionMessage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SetReservationPositionMessage_Request) ProtoMessage() {}

func (x *CStore_SetReservationPositionMessage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SetReservationPositionMessage_Request.ProtoReflect.Descriptor instead.
func (*CStore_SetReservationPositionMessage_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{45}
}

func (x *CStore_SetReservationPositionMessage_Request) GetSettings() []*CReservationPositionMessage {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CStore_SetReservationPositionMessage_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_SetReservationPositionMessage_Response) Reset() {
	*x = CStore_SetReservationPositionMessage_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_SetReservationPositionMessage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SetReservationPositionMessage_Response) ProtoMessage() {}

func (x *CStore_SetReservationPositionMessage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SetReservationPositionMessage_Response.ProtoReflect.Descriptor instead.
func (*CStore_SetReservationPositionMessage_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{46}
}

type CStore_SkipDiscoveryQueueItem_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueType       *int32            `protobuf:"varint,1,opt,name=queue_type,json=queueType" json:"queue_type,omitempty"`
	Appid           *uint32           `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	StorePageFilter *CStorePageFilter `protobuf:"bytes,3,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
}

func (x *CStore_SkipDiscoveryQueueItem_Request) Reset() {
	*x = CStore_SkipDiscoveryQueueItem_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_SkipDiscoveryQueueItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SkipDiscoveryQueueItem_Request) ProtoMessage() {}

func (x *CStore_SkipDiscoveryQueueItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SkipDiscoveryQueueItem_Request.ProtoReflect.Descriptor instead.
func (*CStore_SkipDiscoveryQueueItem_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{47}
}

func (x *CStore_SkipDiscoveryQueueItem_Request) GetQueueType() int32 {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return 0
}

func (x *CStore_SkipDiscoveryQueueItem_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_SkipDiscoveryQueueItem_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStore_SkipDiscoveryQueueItem_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CStore_SkipDiscoveryQueueItem_Response) Reset() {
	*x = CStore_SkipDiscoveryQueueItem_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_SkipDiscoveryQueueItem_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SkipDiscoveryQueueItem_Response) ProtoMessage() {}

func (x *CStore_SkipDiscoveryQueueItem_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SkipDiscoveryQueueItem_Response.ProtoReflect.Descriptor instead.
func (*CStore_SkipDiscoveryQueueItem_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{48}
}

type CStore_StorePreferencesChanged_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Preferences                  *CStore_UserPreferences                  `protobuf:"bytes,1,opt,name=preferences" json:"preferences,omitempty"`
	TagPreferences               *CStore_UserTagPreferences               `protobuf:"bytes,2,opt,name=tag_preferences,json=tagPreferences" json:"tag_preferences,omitempty"`
	ContentDescriptorPreferences *CStore_UserContentDescriptorPreferences `protobuf:"bytes,3,opt,name=content_descriptor_preferences,json=contentDescriptorPreferences" json:"content_descriptor_preferences,omitempty"` //optional .UserContentDescriptorPreferences content_descriptor_preferences = 3;
}

func (x *CStore_StorePreferencesChanged_Notification) Reset() {
	*x = CStore_StorePreferencesChanged_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_StorePreferencesChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_StorePreferencesChanged_Notification) ProtoMessage() {}

func (x *CStore_StorePreferencesChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_StorePreferencesChanged_Notification.ProtoReflect.Descriptor instead.
func (*CStore_StorePreferencesChanged_Notification) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{49}
}

func (x *CStore_StorePreferencesChanged_Notification) GetPreferences() *CStore_UserPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *CStore_StorePreferencesChanged_Notification) GetTagPreferences() *CStore_UserTagPreferences {
	if x != nil {
		return x.TagPreferences
	}
	return nil
}

func (x *CStore_StorePreferencesChanged_Notification) GetContentDescriptorPreferences() *CStore_UserContentDescriptorPreferences {
	if x != nil {
		return x.ContentDescriptorPreferences
	}
	return nil
}

type CStore_UpdatePackageReservations_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackagesToReserve   []uint32 `protobuf:"varint,1,rep,name=packages_to_reserve,json=packagesToReserve" json:"packages_to_reserve,omitempty"`
	PackagesToUnreserve []uint32 `protobuf:"varint,2,rep,name=packages_to_unreserve,json=packagesToUnreserve" json:"packages_to_unreserve,omitempty"`
	CountryCode         *string  `protobuf:"bytes,3,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
}

func (x *CStore_UpdatePackageReservations_Request) Reset() {
	*x = CStore_UpdatePackageReservations_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_UpdatePackageReservations_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UpdatePackageReservations_Request) ProtoMessage() {}

func (x *CStore_UpdatePackageReservations_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UpdatePackageReservations_Request.ProtoReflect.Descriptor instead.
func (*CStore_UpdatePackageReservations_Request) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{50}
}

func (x *CStore_UpdatePackageReservations_Request) GetPackagesToReserve() []uint32 {
	if x != nil {
		return x.PackagesToReserve
	}
	return nil
}

func (x *CStore_UpdatePackageReservations_Request) GetPackagesToUnreserve() []uint32 {
	if x != nil {
		return x.PackagesToUnreserve
	}
	return nil
}

func (x *CStore_UpdatePackageReservations_Request) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

type CStore_UpdatePackageReservations_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReservationStatus []*CPackageReservationStatus `protobuf:"bytes,1,rep,name=reservation_status,json=reservationStatus" json:"reservation_status,omitempty"`
}

func (x *CStore_UpdatePackageReservations_Response) Reset() {
	*x = CStore_UpdatePackageReservations_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_UpdatePackageReservations_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UpdatePackageReservations_Response) ProtoMessage() {}

func (x *CStore_UpdatePackageReservations_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UpdatePackageReservations_Response.ProtoReflect.Descriptor instead.
func (*CStore_UpdatePackageReservations_Response) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{51}
}

func (x *CStore_UpdatePackageReservations_Response) GetReservationStatus() []*CPackageReservationStatus {
	if x != nil {
		return x.ReservationStatus
	}
	return nil
}

type CStore_UserContentDescriptorPreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentDescriptorsToExclude []*CStore_UserContentDescriptorPreferences_ContentDescriptor `protobuf:"bytes,1,rep,name=content_descriptors_to_exclude,json=contentDescriptorsToExclude" json:"content_descriptors_to_exclude,omitempty"`
}

func (x *CStore_UserContentDescriptorPreferences) Reset() {
	*x = CStore_UserContentDescriptorPreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_UserContentDescriptorPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserContentDescriptorPreferences) ProtoMessage() {}

func (x *CStore_UserContentDescriptorPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserContentDescriptorPreferences.ProtoReflect.Descriptor instead.
func (*CStore_UserContentDescriptorPreferences) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{52}
}

func (x *CStore_UserContentDescriptorPreferences) GetContentDescriptorsToExclude() []*CStore_UserContentDescriptorPreferences_ContentDescriptor {
	if x != nil {
		return x.ContentDescriptorsToExclude
	}
	return nil
}

type CStore_UserContentDescriptorPreferences_ContentDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentDescriptorid *uint32 `protobuf:"varint,1,opt,name=content_descriptorid,json=contentDescriptorid" json:"content_descriptorid,omitempty"`
	TimestampAdded      *uint32 `protobuf:"varint,2,opt,name=timestamp_added,json=timestampAdded" json:"timestamp_added,omitempty"`
}

func (x *CStore_UserContentDescriptorPreferences_ContentDescriptor) Reset() {
	*x = CStore_UserContentDescriptorPreferences_ContentDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_UserContentDescriptorPreferences_ContentDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserContentDescriptorPreferences_ContentDescriptor) ProtoMessage() {}

func (x *CStore_UserContentDescriptorPreferences_ContentDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserContentDescriptorPreferences_ContentDescriptor.ProtoReflect.Descriptor instead.
func (*CStore_UserContentDescriptorPreferences_ContentDescriptor) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{53}
}

func (x *CStore_UserContentDescriptorPreferences_ContentDescriptor) GetContentDescriptorid() uint32 {
	if x != nil && x.ContentDescriptorid != nil {
		return *x.ContentDescriptorid
	}
	return 0
}

func (x *CStore_UserContentDescriptorPreferences_ContentDescriptor) GetTimestampAdded() uint32 {
	if x != nil && x.TimestampAdded != nil {
		return *x.TimestampAdded
	}
	return 0
}

type CStore_UserPreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryLanguage *int32 `protobuf:"varint,1,opt,name=primary_language,json=primaryLanguage" json:"primary_language,omitempty"`
	// optional uint32 primary_language = 1;
	SecondaryLanguages                           *uint32 `protobuf:"varint,2,opt,name=secondary_languages,json=secondaryLanguages" json:"secondary_languages,omitempty"`
	PlatformWindows                              *bool   `protobuf:"varint,3,opt,name=platform_windows,json=platformWindows" json:"platform_windows,omitempty"`
	PlatformMac                                  *bool   `protobuf:"varint,4,opt,name=platform_mac,json=platformMac" json:"platform_mac,omitempty"`
	PlatformLinux                                *bool   `protobuf:"varint,5,opt,name=platform_linux,json=platformLinux" json:"platform_linux,omitempty"`
	HideAdultContentViolence                     *bool   `protobuf:"varint,6,opt,name=hide_adult_content_violence,json=hideAdultContentViolence" json:"hide_adult_content_violence,omitempty"`
	HideAdultContentSex                          *bool   `protobuf:"varint,7,opt,name=hide_adult_content_sex,json=hideAdultContentSex" json:"hide_adult_content_sex,omitempty"`
	TimestampUpdated                             *uint32 `protobuf:"varint,8,opt,name=timestamp_updated,json=timestampUpdated" json:"timestamp_updated,omitempty"`
	HideStoreBroadcast                           *bool   `protobuf:"varint,9,opt,name=hide_store_broadcast,json=hideStoreBroadcast" json:"hide_store_broadcast,omitempty"`
	ReviewScorePreference                        *int32  `protobuf:"varint,10,opt,name=review_score_preference,json=reviewScorePreference" json:"review_score_preference,omitempty"`
	TimestampContentDescriptorPreferencesUpdated *int32  `protobuf:"varint,11,opt,name=timestamp_content_descriptor_preferences_updated,json=timestampContentDescriptorPreferencesUpdated" json:"timestamp_content_descriptor_preferences_updated,omitempty"`
	ProvideDeckFeedback                          *int32  `protobuf:"varint,12,opt,name=provide_deck_feedback,json=provideDeckFeedback" json:"provide_deck_feedback,omitempty"`
	AdditionalLanguages                          *string `protobuf:"bytes,13,opt,name=additional_languages,json=additionalLanguages" json:"additional_languages,omitempty"`
}

func (x *CStore_UserPreferences) Reset() {
	*x = CStore_UserPreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_UserPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserPreferences) ProtoMessage() {}

func (x *CStore_UserPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserPreferences.ProtoReflect.Descriptor instead.
func (*CStore_UserPreferences) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{54}
}

func (x *CStore_UserPreferences) GetPrimaryLanguage() int32 {
	if x != nil && x.PrimaryLanguage != nil {
		return *x.PrimaryLanguage
	}
	return 0
}

func (x *CStore_UserPreferences) GetSecondaryLanguages() uint32 {
	if x != nil && x.SecondaryLanguages != nil {
		return *x.SecondaryLanguages
	}
	return 0
}

func (x *CStore_UserPreferences) GetPlatformWindows() bool {
	if x != nil && x.PlatformWindows != nil {
		return *x.PlatformWindows
	}
	return false
}

func (x *CStore_UserPreferences) GetPlatformMac() bool {
	if x != nil && x.PlatformMac != nil {
		return *x.PlatformMac
	}
	return false
}

func (x *CStore_UserPreferences) GetPlatformLinux() bool {
	if x != nil && x.PlatformLinux != nil {
		return *x.PlatformLinux
	}
	return false
}

func (x *CStore_UserPreferences) GetHideAdultContentViolence() bool {
	if x != nil && x.HideAdultContentViolence != nil {
		return *x.HideAdultContentViolence
	}
	return false
}

func (x *CStore_UserPreferences) GetHideAdultContentSex() bool {
	if x != nil && x.HideAdultContentSex != nil {
		return *x.HideAdultContentSex
	}
	return false
}

func (x *CStore_UserPreferences) GetTimestampUpdated() uint32 {
	if x != nil && x.TimestampUpdated != nil {
		return *x.TimestampUpdated
	}
	return 0
}

func (x *CStore_UserPreferences) GetHideStoreBroadcast() bool {
	if x != nil && x.HideStoreBroadcast != nil {
		return *x.HideStoreBroadcast
	}
	return false
}

func (x *CStore_UserPreferences) GetReviewScorePreference() int32 {
	if x != nil && x.ReviewScorePreference != nil {
		return *x.ReviewScorePreference
	}
	return 0
}

func (x *CStore_UserPreferences) GetTimestampContentDescriptorPreferencesUpdated() int32 {
	if x != nil && x.TimestampContentDescriptorPreferencesUpdated != nil {
		return *x.TimestampContentDescriptorPreferencesUpdated
	}
	return 0
}

func (x *CStore_UserPreferences) GetProvideDeckFeedback() int32 {
	if x != nil && x.ProvideDeckFeedback != nil {
		return *x.ProvideDeckFeedback
	}
	return 0
}

func (x *CStore_UserPreferences) GetAdditionalLanguages() string {
	if x != nil && x.AdditionalLanguages != nil {
		return *x.AdditionalLanguages
	}
	return ""
}

type CStore_UserTagPreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagsToExclude []*CStore_UserTagPreferences_Tag `protobuf:"bytes,1,rep,name=tags_to_exclude,json=tagsToExclude" json:"tags_to_exclude,omitempty"`
}

func (x *CStore_UserTagPreferences) Reset() {
	*x = CStore_UserTagPreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_UserTagPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserTagPreferences) ProtoMessage() {}

func (x *CStore_UserTagPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserTagPreferences.ProtoReflect.Descriptor instead.
func (*CStore_UserTagPreferences) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{55}
}

func (x *CStore_UserTagPreferences) GetTagsToExclude() []*CStore_UserTagPreferences_Tag {
	if x != nil {
		return x.TagsToExclude
	}
	return nil
}

type CStore_UserTagPreferences_Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tagid          *uint32 `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Name           *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TimestampAdded *uint32 `protobuf:"varint,3,opt,name=timestamp_added,json=timestampAdded" json:"timestamp_added,omitempty"`
}

func (x *CStore_UserTagPreferences_Tag) Reset() {
	*x = CStore_UserTagPreferences_Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStore_UserTagPreferences_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserTagPreferences_Tag) ProtoMessage() {}

func (x *CStore_UserTagPreferences_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserTagPreferences_Tag.ProtoReflect.Descriptor instead.
func (*CStore_UserTagPreferences_Tag) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{56}
}

func (x *CStore_UserTagPreferences_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_UserTagPreferences_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CStore_UserTagPreferences_Tag) GetTimestampAdded() uint32 {
	if x != nil && x.TimestampAdded != nil {
		return *x.TimestampAdded
	}
	return 0
}

type CStoreDiscoveryQueueSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsWin                 *bool    `protobuf:"varint,4,opt,name=os_win,json=osWin" json:"os_win,omitempty"`
	OsMac                 *bool    `protobuf:"varint,5,opt,name=os_mac,json=osMac" json:"os_mac,omitempty"`
	OsLinux               *bool    `protobuf:"varint,6,opt,name=os_linux,json=osLinux" json:"os_linux,omitempty"`
	FullControllerSupport *bool    `protobuf:"varint,7,opt,name=full_controller_support,json=fullControllerSupport" json:"full_controller_support,omitempty"`
	NativeSteamController *bool    `protobuf:"varint,8,opt,name=native_steam_controller,json=nativeSteamController" json:"native_steam_controller,omitempty"`
	IncludeComingSoon     *bool    `protobuf:"varint,9,opt,name=include_coming_soon,json=includeComingSoon" json:"include_coming_soon,omitempty"`
	ExcludedTagids        []uint32 `protobuf:"varint,10,rep,name=excluded_tagids,json=excludedTagids" json:"excluded_tagids,omitempty"`
	ExcludeEarlyAccess    *bool    `protobuf:"varint,11,opt,name=exclude_early_access,json=excludeEarlyAccess" json:"exclude_early_access,omitempty"`
	ExcludeVideos         *bool    `protobuf:"varint,12,opt,name=exclude_videos,json=excludeVideos" json:"exclude_videos,omitempty"`
	ExcludeSoftware       *bool    `protobuf:"varint,13,opt,name=exclude_software,json=excludeSoftware" json:"exclude_software,omitempty"`
	ExcludeDlc            *bool    `protobuf:"varint,14,opt,name=exclude_dlc,json=excludeDlc" json:"exclude_dlc,omitempty"`
	ExcludeSoundtracks    *bool    `protobuf:"varint,15,opt,name=exclude_soundtracks,json=excludeSoundtracks" json:"exclude_soundtracks,omitempty"`
	FeaturedTagids        []uint32 `protobuf:"varint,16,rep,name=featured_tagids,json=featuredTagids" json:"featured_tagids,omitempty"`
}

func (x *CStoreDiscoveryQueueSettings) Reset() {
	*x = CStoreDiscoveryQueueSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_store_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStoreDiscoveryQueueSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreDiscoveryQueueSettings) ProtoMessage() {}

func (x *CStoreDiscoveryQueueSettings) ProtoReflect() protoreflect.Message {
	mi := &file_service_store_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreDiscoveryQueueSettings.ProtoReflect.Descriptor instead.
func (*CStoreDiscoveryQueueSettings) Descriptor() ([]byte, []int) {
	return file_service_store_proto_rawDescGZIP(), []int{57}
}

func (x *CStoreDiscoveryQueueSettings) GetOsWin() bool {
	if x != nil && x.OsWin != nil {
		return *x.OsWin
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetOsMac() bool {
	if x != nil && x.OsMac != nil {
		return *x.OsMac
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetOsLinux() bool {
	if x != nil && x.OsLinux != nil {
		return *x.OsLinux
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetFullControllerSupport() bool {
	if x != nil && x.FullControllerSupport != nil {
		return *x.FullControllerSupport
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetNativeSteamController() bool {
	if x != nil && x.NativeSteamController != nil {
		return *x.NativeSteamController
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetIncludeComingSoon() bool {
	if x != nil && x.IncludeComingSoon != nil {
		return *x.IncludeComingSoon
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludedTagids() []uint32 {
	if x != nil {
		return x.ExcludedTagids
	}
	return nil
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeEarlyAccess() bool {
	if x != nil && x.ExcludeEarlyAccess != nil {
		return *x.ExcludeEarlyAccess
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeVideos() bool {
	if x != nil && x.ExcludeVideos != nil {
		return *x.ExcludeVideos
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeSoftware() bool {
	if x != nil && x.ExcludeSoftware != nil {
		return *x.ExcludeSoftware
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeDlc() bool {
	if x != nil && x.ExcludeDlc != nil {
		return *x.ExcludeDlc
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeSoundtracks() bool {
	if x != nil && x.ExcludeSoundtracks != nil {
		return *x.ExcludeSoundtracks
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetFeaturedTagids() []uint32 {
	if x != nil {
		return x.FeaturedTagids
	}
	return nil
}

var File_service_store_proto protoreflect.FileDescriptor

var file_service_store_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x03, 0x0a, 0x19, 0x43, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x1c,
	0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x1a, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd6, 0x02, 0x0a, 0x1b,
	0x43, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x65, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12,
	0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x40, 0x0a, 0x1c, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x69, 0x0a, 0x2b, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65,
	0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x53, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18,
	0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22,
	0x2e, 0x0a, 0x2c, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x44, 0x0a, 0x2c, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x53, 0x68, 0x6f, 0x75, 0x6c,
	0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a, 0x2d, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12,
	0x2b, 0x0a, 0x11, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x65, 0x6c, 0x69, 0x67,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x66, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x11,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75,
	0x6d, 0x52, 0x10, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x22, 0xb6, 0x01, 0x0a, 0x2f, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x30,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x0a, 0x30, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x6d, 0x0a, 0x31, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x22, 0xbf, 0x04, 0x0a, 0x20, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x33, 0x0a, 0x16, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x69, 0x66, 0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x66, 0x53,
	0x74, 0x61, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17,
	0x6e, 0x6f, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6e,
	0x6f, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x67,
	0x65, 0x74, 0x5f, 0x73, 0x6f, 0x6c, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x65, 0x62, 0x75, 0x67, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x6c,
	0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xac, 0x02, 0x0a, 0x21, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x65, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x68, 0x6f, 0x72, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x5f, 0x73, 0x6f, 0x6c, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x62, 0x75, 0x67, 0x53, 0x6f, 0x6c, 0x72, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x92, 0x01, 0x0a, 0x28, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52,
	0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x11, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x29, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x2b, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x46, 0x0a, 0x2c, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x22,
	0x5c, 0x0a, 0x26, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x67,
	0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x67, 0x69, 0x64, 0x73, 0x22, 0x6b, 0x0a,
	0x27, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x73, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x46, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x2b, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61,
	0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x67, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x3f, 0x0a, 0x21, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0x61, 0x0a, 0x22, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x4d,
	0x6f, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x61, 0x67,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x67, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x22, 0x52, 0x0a, 0x26, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x61, 0x67,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74,
	0x61, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x95,
	0x02, 0x0a, 0x23, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x61, 0x67, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0e, 0x74, 0x61, 0x67, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x1e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x1c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x19, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x61, 0x76, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x74, 0x0a, 0x1a, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x22, 0x4a, 0x0a, 0x1e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a,
	0x2a, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x41, 0x6d, 0x6f, 0x6e, 0x67, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x75, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e,
	0x75, 0x6d, 0x41, 0x70, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x6f,
	0x70, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6e, 0x75, 0x6d, 0x54, 0x6f, 0x70, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x90,
	0x01, 0x0a, 0x2b, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x41, 0x6d, 0x6f, 0x6e, 0x67, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x0d, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x70, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x41, 0x6d,
	0x6f, 0x6e, 0x67, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0c, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70,
	0x73, 0x22, 0xaa, 0x01, 0x0a, 0x3b, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x41, 0x6d, 0x6f, 0x6e,
	0x67, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x69, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x12, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x73, 0x54,
	0x6f, 0x70, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x7f,
	0x0a, 0x27, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x65, 0x74, 0x61, 0x41, 0x70, 0x70, 0x69, 0x64, 0x22,
	0xa2, 0x04, 0x0a, 0x28, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65,
	0x6e, 0x75, 0x6d, 0x52, 0x08, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x32, 0x0a,
	0x10, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x6b, 0x69,
	0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75,
	0x6d, 0x52, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x6b, 0x69,
	0x70, 0x12, 0x32, 0x0a, 0x15, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x13, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x16, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x4e, 0x65, 0x78, 0x74, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x69, 0x6c, 0x79, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x69,
	0x6c, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x64, 0x12, 0x49, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x06, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x0b, 0x62, 0x65, 0x74,
	0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x62, 0x65, 0x74, 0x61, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x30, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x49, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75,
	0x6d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x68, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x68, 0x6f, 0x72, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x29, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6d, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x6d, 0x6f, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x9b, 0x01, 0x0a, 0x2a, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f,
	0x66, 0x69, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x46, 0x69, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x65, 0x6d, 0x6f, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x64, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x2e, 0x43, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x66,
	0x69, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xba, 0x05, 0x0a, 0x1a, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x74, 0x61, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x69,
	0x64, 0x12, 0x43, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x5f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x23, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x2b, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x46, 0x69, 0x72, 0x65, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6d, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x65, 0x6d, 0x6f, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x2e, 0x0a, 0x2c, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x46, 0x69, 0x72, 0x65, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x1c, 0x43, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x44, 0x4b, 0x65, 0x79,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x33,
	0x0a, 0x16, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x1d, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4f, 0x0a,
	0x15, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x13, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3a,
	0x0a, 0x38, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x18, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x1b, 0x0a, 0x19, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x41, 0x70, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x2c,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x43, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x2f, 0x0a, 0x2d, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x25, 0x43, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x53, 0x6b, 0x69, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52,
	0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x3d, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x28, 0x0a, 0x26, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x53, 0x6b, 0x69, 0x70, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x2b, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x74, 0x61, 0x67, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x0e, 0x74, 0x61, 0x67, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x1e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x1c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x28, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x54,
	0x6f, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x76, 0x0a,
	0x29, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x27, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x7f, 0x0a, 0x1e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x43, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x73, 0x54, 0x6f, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x39, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x12, 0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x41, 0x64, 0x64, 0x65, 0x64, 0x22, 0xd7, 0x05, 0x0a,
	0x16, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61,
	0x63, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6c, 0x69,
	0x6e, 0x75, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x12, 0x3d, 0x0a, 0x1b, 0x68, 0x69, 0x64, 0x65,
	0x5f, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x76,
	0x69, 0x6f, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x68,
	0x69, 0x64, 0x65, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x56,
	0x69, 0x6f, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x69, 0x64, 0x65, 0x5f,
	0x61, 0x64, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x69, 0x64, 0x65, 0x41, 0x64, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x11,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x69, 0x64,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x17, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x15, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x66, 0x0a,
	0x30, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x2c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x5f, 0x64, 0x65, 0x63, 0x6b, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x13,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x44, 0x65, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x19, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0f, 0x74, 0x61, 0x67, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x54, 0x61, 0x67, 0x52, 0x0d, 0x74, 0x61,
	0x67, 0x73, 0x54, 0x6f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x22, 0x72, 0x0a, 0x1d, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x67, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x61, 0x67,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x41, 0x64, 0x64, 0x65, 0x64, 0x22,
	0xaf, 0x04, 0x0a, 0x1c, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x6f, 0x73, 0x57, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73, 0x5f, 0x6d, 0x61,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6f, 0x73, 0x4d, 0x61, 0x63, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x6f, 0x73, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x66, 0x75, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x36, 0x0a, 0x17, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6f, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x6f, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x54, 0x61, 0x67, 0x69,
	0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x65, 0x61,
	0x72, 0x6c, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x64, 0x6c, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x44, 0x6c, 0x63, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x54, 0x61, 0x67, 0x69, 0x64,
	0x73, 0x32, 0x80, 0x13, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x20,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32,
	0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x43, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29, 0x2e, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x73, 0x12, 0x2c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6c, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x27, 0x2e, 0x43, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72,
	0x54, 0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x22, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54, 0x61, 0x67, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x54,
	0x61, 0x67, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x43,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x41, 0x6d, 0x6f, 0x6e, 0x67, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x2b, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x41, 0x6d, 0x6f,
	0x6e, 0x67, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x73, 0x41, 0x6d, 0x6f, 0x6e, 0x67, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x43, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a,
	0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c,
	0x69, 0x73, 0x74, 0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x43, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x1a, 0x4d, 0x69, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x4d,
	0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x6e,
	0x6b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0b, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x1c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x57, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x46,
	0x69, 0x72, 0x65, 0x12, 0x2c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x54, 0x6f, 0x46, 0x69, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x57, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x6d, 0x6f, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x6f, 0x46, 0x69, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x44, 0x4b, 0x65,
	0x79, 0x12, 0x1d, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x44, 0x4b, 0x65, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6e, 0x0a, 0x24, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x39, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x0b, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x12, 0x19, 0x2e,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x70, 0x70, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x12, 0x2c, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x65, 0x65, 0x64,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a,
	0x1d, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d,
	0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x24, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x46, 0x6f,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2d, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44,
	0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x43, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65,
	0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x53, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x53, 0x6b, 0x69, 0x70, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x26, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x53, 0x6b, 0x69, 0x70, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x53, 0x6b, 0x69, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x72, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e,
	0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x69, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x2c, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x0b, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_store_proto_rawDescOnce sync.Once
	file_service_store_proto_rawDescData = file_service_store_proto_rawDesc
)

func file_service_store_proto_rawDescGZIP() []byte {
	file_service_store_proto_rawDescOnce.Do(func() {
		file_service_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_store_proto_rawDescData)
	})
	return file_service_store_proto_rawDescData
}

var file_service_store_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_service_store_proto_goTypes = []any{
	(*CPackageReservationStatus)(nil),                                   // 0: CPackageReservationStatus
	(*CReservationPositionMessage)(nil),                                 // 1: CReservationPositionMessage
	(*CSteamDeckCompatibility_SetFeedback_Request)(nil),                 // 2: CSteamDeckCompatibility_SetFeedback_Request
	(*CSteamDeckCompatibility_SetFeedback_Response)(nil),                // 3: CSteamDeckCompatibility_SetFeedback_Response
	(*CSteamDeckCompatibility_ShouldPrompt_Request)(nil),                // 4: CSteamDeckCompatibility_ShouldPrompt_Request
	(*CSteamDeckCompatibility_ShouldPrompt_Response)(nil),               // 5: CSteamDeckCompatibility_ShouldPrompt_Response
	(*CStore_DeleteReservationPositionMessage_Request)(nil),             // 6: CStore_DeleteReservationPositionMessage_Request
	(*CStore_DeleteReservationPositionMessage_Response)(nil),            // 7: CStore_DeleteReservationPositionMessage_Response
	(*CStore_GetAllReservationPositionMessages_Request)(nil),            // 8: CStore_GetAllReservationPositionMessages_Request
	(*CStore_GetAllReservationPositionMessages_Response)(nil),           // 9: CStore_GetAllReservationPositionMessages_Response
	(*CStore_GetDiscoveryQueue_Request)(nil),                            // 10: CStore_GetDiscoveryQueue_Request
	(*CStore_GetDiscoveryQueue_Response)(nil),                           // 11: CStore_GetDiscoveryQueue_Response
	(*CStore_GetDiscoveryQueueSettings_Request)(nil),                    // 12: CStore_GetDiscoveryQueueSettings_Request
	(*CStore_GetDiscoveryQueueSettings_Response)(nil),                   // 13: CStore_GetDiscoveryQueueSettings_Response
	(*CStore_GetDiscoveryQueueSkippedApps_Request)(nil),                 // 14: CStore_GetDiscoveryQueueSkippedApps_Request
	(*CStore_GetDiscoveryQueueSkippedApps_Response)(nil),                // 15: CStore_GetDiscoveryQueueSkippedApps_Response
	(*CStore_GetLocalizedNameForTags_Request)(nil),                      // 16: CStore_GetLocalizedNameForTags_Request
	(*CStore_GetLocalizedNameForTags_Response)(nil),                     // 17: CStore_GetLocalizedNameForTags_Response
	(*CStore_GetLocalizedNameForTags_Response_Tag)(nil),                 // 18: CStore_GetLocalizedNameForTags_Response_Tag
	(*CStore_GetMostPopularTags_Request)(nil),                           // 19: CStore_GetMostPopularTags_Request
	(*CStore_GetMostPopularTags_Response)(nil),                          // 20: CStore_GetMostPopularTags_Response
	(*CStore_GetMostPopularTags_Response_Tag)(nil),                      // 21: CStore_GetMostPopularTags_Response_Tag
	(*CStore_GetStorePreferences_Request)(nil),                          // 22: CStore_GetStorePreferences_Request
	(*CStore_GetStorePreferences_Response)(nil),                         // 23: CStore_GetStorePreferences_Response
	(*CStore_GetTagList_Request)(nil),                                   // 24: CStore_GetTagList_Request
	(*CStore_GetTagList_Response)(nil),                                  // 25: CStore_GetTagList_Response
	(*CStore_GetTagList_Response_Tag)(nil),                              // 26: CStore_GetTagList_Response_Tag
	(*CStore_GetTrendingAppsAmongFriends_Request)(nil),                  // 27: CStore_GetTrendingAppsAmongFriends_Request
	(*CStore_GetTrendingAppsAmongFriends_Response)(nil),                 // 28: CStore_GetTrendingAppsAmongFriends_Response
	(*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData)(nil), // 29: CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData
	(*CStore_GetUserGameInterestState_Request)(nil),                     // 30: CStore_GetUserGameInterestState_Request
	(*CStore_GetUserGameInterestState_Response)(nil),                    // 31: CStore_GetUserGameInterestState_Response
	(*CStore_GetUserGameInterestState_Response_InQueue)(nil),            // 32: CStore_GetUserGameInterestState_Response_InQueue
	(*CStore_GetWishlistDemoEmailStatus_Request)(nil),                   // 33: CStore_GetWishlistDemoEmailStatus_Request
	(*CStore_GetWishlistDemoEmailStatus_Response)(nil),                  // 34: CStore_GetWishlistDemoEmailStatus_Response
	(*CStore_MigratePartnerLinkTracking_Notification)(nil),              // 35: CStore_MigratePartnerLinkTracking_Notification
	(*CStore_PurchaseReceiptInfo)(nil),                                  // 36: CStore_PurchaseReceiptInfo
	(*CStore_PurchaseReceiptInfo_LineItem)(nil),                         // 37: CStore_PurchaseReceiptInfo_LineItem
	(*CStore_QueueWishlistDemoEmailToFire_Request)(nil),                 // 38: CStore_QueueWishlistDemoEmailToFire_Request
	(*CStore_QueueWishlistDemoEmailToFire_Response)(nil),                // 39: CStore_QueueWishlistDemoEmailToFire_Response
	(*CStore_RegisterCDKey_Request)(nil),                                // 40: CStore_RegisterCDKey_Request
	(*CStore_RegisterCDKey_Response)(nil),                               // 41: CStore_RegisterCDKey_Response
	(*CStore_ReloadAllReservationPositionMessages_Notification)(nil),    // 42: CStore_ReloadAllReservationPositionMessages_Notification
	(*CStore_ReportApp_Request)(nil),                                    // 43: CStore_ReportApp_Request
	(*CStore_ReportApp_Response)(nil),                                   // 44: CStore_ReportApp_Response
	(*CStore_SetReservationPositionMessage_Request)(nil),                // 45: CStore_SetReservationPositionMessage_Request
	(*CStore_SetReservationPositionMessage_Response)(nil),               // 46: CStore_SetReservationPositionMessage_Response
	(*CStore_SkipDiscoveryQueueItem_Request)(nil),                       // 47: CStore_SkipDiscoveryQueueItem_Request
	(*CStore_SkipDiscoveryQueueItem_Response)(nil),                      // 48: CStore_SkipDiscoveryQueueItem_Response
	(*CStore_StorePreferencesChanged_Notification)(nil),                 // 49: CStore_StorePreferencesChanged_Notification
	(*CStore_UpdatePackageReservations_Request)(nil),                    // 50: CStore_UpdatePackageReservations_Request
	(*CStore_UpdatePackageReservations_Response)(nil),                   // 51: CStore_UpdatePackageReservations_Response
	(*CStore_UserContentDescriptorPreferences)(nil),                     // 52: CStore_UserContentDescriptorPreferences
	(*CStore_UserContentDescriptorPreferences_ContentDescriptor)(nil),   // 53: CStore_UserContentDescriptorPreferences_ContentDescriptor
	(*CStore_UserPreferences)(nil),                                      // 54: CStore_UserPreferences
	(*CStore_UserTagPreferences)(nil),                                   // 55: CStore_UserTagPreferences
	(*CStore_UserTagPreferences_Tag)(nil),                               // 56: CStore_UserTagPreferences_Tag
	(*CStoreDiscoveryQueueSettings)(nil),                                // 57: CStoreDiscoveryQueueSettings
	(*CStorePageFilter)(nil),                                            // 58: CStorePageFilter
	(*NoResponse)(nil),                                                  // 59: NoResponse
}
var file_service_store_proto_depIdxs = []int32{
	1,  // 0: CStore_GetAllReservationPositionMessages_Response.settings:type_name -> CReservationPositionMessage
	57, // 1: CStore_GetDiscoveryQueue_Request.settings:type_name -> CStoreDiscoveryQueueSettings
	58, // 2: CStore_GetDiscoveryQueue_Request.store_page_filter:type_name -> CStorePageFilter
	57, // 3: CStore_GetDiscoveryQueue_Response.settings:type_name -> CStoreDiscoveryQueueSettings
	58, // 4: CStore_GetDiscoveryQueueSettings_Request.store_page_filter:type_name -> CStorePageFilter
	57, // 5: CStore_GetDiscoveryQueueSettings_Response.settings:type_name -> CStoreDiscoveryQueueSettings
	58, // 6: CStore_GetDiscoveryQueueSkippedApps_Request.store_page_filter:type_name -> CStorePageFilter
	18, // 7: CStore_GetLocalizedNameForTags_Response.tags:type_name -> CStore_GetLocalizedNameForTags_Response_Tag
	21, // 8: CStore_GetMostPopularTags_Response.tags:type_name -> CStore_GetMostPopularTags_Response_Tag
	54, // 9: CStore_GetStorePreferences_Response.preferences:type_name -> CStore_UserPreferences
	55, // 10: CStore_GetStorePreferences_Response.tag_preferences:type_name -> CStore_UserTagPreferences
	52, // 11: CStore_GetStorePreferences_Response.content_descriptor_preferences:type_name -> CStore_UserContentDescriptorPreferences
	26, // 12: CStore_GetTagList_Response.tags:type_name -> CStore_GetTagList_Response_Tag
	29, // 13: CStore_GetTrendingAppsAmongFriends_Response.trending_apps:type_name -> CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData
	32, // 14: CStore_GetUserGameInterestState_Response.queues:type_name -> CStore_GetUserGameInterestState_Response_InQueue
	37, // 15: CStore_PurchaseReceiptInfo.line_items:type_name -> CStore_PurchaseReceiptInfo_LineItem
	36, // 16: CStore_RegisterCDKey_Response.purchase_receipt_info:type_name -> CStore_PurchaseReceiptInfo
	1,  // 17: CStore_SetReservationPositionMessage_Request.settings:type_name -> CReservationPositionMessage
	58, // 18: CStore_SkipDiscoveryQueueItem_Request.store_page_filter:type_name -> CStorePageFilter
	54, // 19: CStore_StorePreferencesChanged_Notification.preferences:type_name -> CStore_UserPreferences
	55, // 20: CStore_StorePreferencesChanged_Notification.tag_preferences:type_name -> CStore_UserTagPreferences
	52, // 21: CStore_StorePreferencesChanged_Notification.content_descriptor_preferences:type_name -> CStore_UserContentDescriptorPreferences
	0,  // 22: CStore_UpdatePackageReservations_Response.reservation_status:type_name -> CPackageReservationStatus
	53, // 23: CStore_UserContentDescriptorPreferences.content_descriptors_to_exclude:type_name -> CStore_UserContentDescriptorPreferences_ContentDescriptor
	56, // 24: CStore_UserTagPreferences.tags_to_exclude:type_name -> CStore_UserTagPreferences_Tag
	6,  // 25: Store.DeleteReservationPositionMessage:input_type -> CStore_DeleteReservationPositionMessage_Request
	8,  // 26: Store.GetAllReservationPositionMessages:input_type -> CStore_GetAllReservationPositionMessages_Request
	10, // 27: Store.GetDiscoveryQueue:input_type -> CStore_GetDiscoveryQueue_Request
	12, // 28: Store.GetDiscoveryQueueSettings:input_type -> CStore_GetDiscoveryQueueSettings_Request
	14, // 29: Store.GetDiscoveryQueueSkippedApps:input_type -> CStore_GetDiscoveryQueueSkippedApps_Request
	16, // 30: Store.GetLocalizedNameForTags:input_type -> CStore_GetLocalizedNameForTags_Request
	19, // 31: Store.GetMostPopularTags:input_type -> CStore_GetMostPopularTags_Request
	22, // 32: Store.GetStorePreferences:input_type -> CStore_GetStorePreferences_Request
	24, // 33: Store.GetTagList:input_type -> CStore_GetTagList_Request
	27, // 34: Store.GetTrendingAppsAmongFriends:input_type -> CStore_GetTrendingAppsAmongFriends_Request
	30, // 35: Store.GetUserGameInterestState:input_type -> CStore_GetUserGameInterestState_Request
	33, // 36: Store.GetWishlistDemoEmailStatus:input_type -> CStore_GetWishlistDemoEmailStatus_Request
	35, // 37: Store.MigratePartnerLinkTracking:input_type -> CStore_MigratePartnerLinkTracking_Notification
	38, // 38: Store.QueueWishlistDemoEmailToFire:input_type -> CStore_QueueWishlistDemoEmailToFire_Request
	40, // 39: Store.RegisterCDKey:input_type -> CStore_RegisterCDKey_Request
	42, // 40: Store.ReloadAllReservationPositionMessages:input_type -> CStore_ReloadAllReservationPositionMessages_Notification
	43, // 41: Store.ReportApp:input_type -> CStore_ReportApp_Request
	2,  // 42: Store.SetCompatibilityFeedback:input_type -> CSteamDeckCompatibility_SetFeedback_Request
	45, // 43: Store.SetReservationPositionMessage:input_type -> CStore_SetReservationPositionMessage_Request
	4,  // 44: Store.ShouldPromptForCompatibilityFeedback:input_type -> CSteamDeckCompatibility_ShouldPrompt_Request
	47, // 45: Store.SkipDiscoveryQueueItem:input_type -> CStore_SkipDiscoveryQueueItem_Request
	50, // 46: Store.UpdatePackageReservations:input_type -> CStore_UpdatePackageReservations_Request
	49, // 47: StoreClient.NotifyStorePreferencesChanged:input_type -> CStore_StorePreferencesChanged_Notification
	7,  // 48: Store.DeleteReservationPositionMessage:output_type -> CStore_DeleteReservationPositionMessage_Response
	9,  // 49: Store.GetAllReservationPositionMessages:output_type -> CStore_GetAllReservationPositionMessages_Response
	11, // 50: Store.GetDiscoveryQueue:output_type -> CStore_GetDiscoveryQueue_Response
	13, // 51: Store.GetDiscoveryQueueSettings:output_type -> CStore_GetDiscoveryQueueSettings_Response
	15, // 52: Store.GetDiscoveryQueueSkippedApps:output_type -> CStore_GetDiscoveryQueueSkippedApps_Response
	17, // 53: Store.GetLocalizedNameForTags:output_type -> CStore_GetLocalizedNameForTags_Response
	20, // 54: Store.GetMostPopularTags:output_type -> CStore_GetMostPopularTags_Response
	23, // 55: Store.GetStorePreferences:output_type -> CStore_GetStorePreferences_Response
	25, // 56: Store.GetTagList:output_type -> CStore_GetTagList_Response
	28, // 57: Store.GetTrendingAppsAmongFriends:output_type -> CStore_GetTrendingAppsAmongFriends_Response
	31, // 58: Store.GetUserGameInterestState:output_type -> CStore_GetUserGameInterestState_Response
	34, // 59: Store.GetWishlistDemoEmailStatus:output_type -> CStore_GetWishlistDemoEmailStatus_Response
	59, // 60: Store.MigratePartnerLinkTracking:output_type -> NoResponse
	39, // 61: Store.QueueWishlistDemoEmailToFire:output_type -> CStore_QueueWishlistDemoEmailToFire_Response
	41, // 62: Store.RegisterCDKey:output_type -> CStore_RegisterCDKey_Response
	59, // 63: Store.ReloadAllReservationPositionMessages:output_type -> NoResponse
	44, // 64: Store.ReportApp:output_type -> CStore_ReportApp_Response
	3,  // 65: Store.SetCompatibilityFeedback:output_type -> CSteamDeckCompatibility_SetFeedback_Response
	46, // 66: Store.SetReservationPositionMessage:output_type -> CStore_SetReservationPositionMessage_Response
	5,  // 67: Store.ShouldPromptForCompatibilityFeedback:output_type -> CSteamDeckCompatibility_ShouldPrompt_Response
	48, // 68: Store.SkipDiscoveryQueueItem:output_type -> CStore_SkipDiscoveryQueueItem_Response
	51, // 69: Store.UpdatePackageReservations:output_type -> CStore_UpdatePackageReservations_Response
	59, // 70: StoreClient.NotifyStorePreferencesChanged:output_type -> NoResponse
	48, // [48:71] is the sub-list for method output_type
	25, // [25:48] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_service_store_proto_init() }
func file_service_store_proto_init() {
	if File_service_store_proto != nil {
		return
	}
	file_common_base_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_store_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CPackageReservationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CReservationPositionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamDeckCompatibility_SetFeedback_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamDeckCompatibility_SetFeedback_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamDeckCompatibility_ShouldPrompt_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CSteamDeckCompatibility_ShouldPrompt_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_DeleteReservationPositionMessage_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_DeleteReservationPositionMessage_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetAllReservationPositionMessages_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetAllReservationPositionMessages_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetDiscoveryQueue_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetDiscoveryQueue_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetDiscoveryQueueSettings_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetDiscoveryQueueSettings_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetDiscoveryQueueSkippedApps_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetDiscoveryQueueSkippedApps_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetLocalizedNameForTags_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetLocalizedNameForTags_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetLocalizedNameForTags_Response_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetMostPopularTags_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetMostPopularTags_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetMostPopularTags_Response_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetStorePreferences_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetStorePreferences_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetTagList_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetTagList_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetTagList_Response_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetTrendingAppsAmongFriends_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetTrendingAppsAmongFriends_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetUserGameInterestState_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetUserGameInterestState_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetUserGameInterestState_Response_InQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetWishlistDemoEmailStatus_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_GetWishlistDemoEmailStatus_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_MigratePartnerLinkTracking_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_PurchaseReceiptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_PurchaseReceiptInfo_LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_QueueWishlistDemoEmailToFire_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_QueueWishlistDemoEmailToFire_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_RegisterCDKey_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_RegisterCDKey_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_ReloadAllReservationPositionMessages_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_ReportApp_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_ReportApp_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_SetReservationPositionMessage_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_SetReservationPositionMessage_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_SkipDiscoveryQueueItem_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_SkipDiscoveryQueueItem_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_StorePreferencesChanged_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_UpdatePackageReservations_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_UpdatePackageReservations_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_UserContentDescriptorPreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_UserContentDescriptorPreferences_ContentDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_UserPreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_UserTagPreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*CStore_UserTagPreferences_Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_store_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*CStoreDiscoveryQueueSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_service_store_proto_goTypes,
		DependencyIndexes: file_service_store_proto_depIdxs,
		MessageInfos:      file_service_store_proto_msgTypes,
	}.Build()
	File_service_store_proto = out.File
	file_service_store_proto_rawDesc = nil
	file_service_store_proto_goTypes = nil
	file_service_store_proto_depIdxs = nil
}
