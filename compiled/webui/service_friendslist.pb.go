// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_friendslist.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CFriendsList_FavoritesChanged_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favorites []*CFriendsListFavoriteEntry `protobuf:"bytes,1,rep,name=favorites" json:"favorites,omitempty"`
}

func (x *CFriendsList_FavoritesChanged_Notification) Reset() {
	*x = CFriendsList_FavoritesChanged_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_FavoritesChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_FavoritesChanged_Notification) ProtoMessage() {}

func (x *CFriendsList_FavoritesChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_FavoritesChanged_Notification.ProtoReflect.Descriptor instead.
func (*CFriendsList_FavoritesChanged_Notification) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{0}
}

func (x *CFriendsList_FavoritesChanged_Notification) GetFavorites() []*CFriendsListFavoriteEntry {
	if x != nil {
		return x.Favorites
	}
	return nil
}

type CFriendsList_GetCategories_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CFriendsList_GetCategories_Request) Reset() {
	*x = CFriendsList_GetCategories_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_GetCategories_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_GetCategories_Request) ProtoMessage() {}

func (x *CFriendsList_GetCategories_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_GetCategories_Request.ProtoReflect.Descriptor instead.
func (*CFriendsList_GetCategories_Request) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{1}
}

type CFriendsList_GetCategories_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*CFriendsListCategory `protobuf:"bytes,1,rep,name=categories" json:"categories,omitempty"`
}

func (x *CFriendsList_GetCategories_Response) Reset() {
	*x = CFriendsList_GetCategories_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_GetCategories_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_GetCategories_Response) ProtoMessage() {}

func (x *CFriendsList_GetCategories_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_GetCategories_Response.ProtoReflect.Descriptor instead.
func (*CFriendsList_GetCategories_Response) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{2}
}

func (x *CFriendsList_GetCategories_Response) GetCategories() []*CFriendsListCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type CFriendsList_GetFavorites_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CFriendsList_GetFavorites_Request) Reset() {
	*x = CFriendsList_GetFavorites_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_GetFavorites_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_GetFavorites_Request) ProtoMessage() {}

func (x *CFriendsList_GetFavorites_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_GetFavorites_Request.ProtoReflect.Descriptor instead.
func (*CFriendsList_GetFavorites_Request) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{3}
}

type CFriendsList_GetFavorites_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favorites []*CFriendsListFavoriteEntry `protobuf:"bytes,1,rep,name=favorites" json:"favorites,omitempty"`
}

func (x *CFriendsList_GetFavorites_Response) Reset() {
	*x = CFriendsList_GetFavorites_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_GetFavorites_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_GetFavorites_Response) ProtoMessage() {}

func (x *CFriendsList_GetFavorites_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_GetFavorites_Response.ProtoReflect.Descriptor instead.
func (*CFriendsList_GetFavorites_Response) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{4}
}

func (x *CFriendsList_GetFavorites_Response) GetFavorites() []*CFriendsListFavoriteEntry {
	if x != nil {
		return x.Favorites
	}
	return nil
}

type CFriendsList_GetFriendsList_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CFriendsList_GetFriendsList_Request) Reset() {
	*x = CFriendsList_GetFriendsList_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_GetFriendsList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_GetFriendsList_Request) ProtoMessage() {}

func (x *CFriendsList_GetFriendsList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_GetFriendsList_Request.ProtoReflect.Descriptor instead.
func (*CFriendsList_GetFriendsList_Request) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{5}
}

type CFriendsList_GetFriendsList_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friendslist *CMsgClientFriendsList `protobuf:"bytes,1,opt,name=friendslist" json:"friendslist,omitempty"`
}

func (x *CFriendsList_GetFriendsList_Response) Reset() {
	*x = CFriendsList_GetFriendsList_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_GetFriendsList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_GetFriendsList_Response) ProtoMessage() {}

func (x *CFriendsList_GetFriendsList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_GetFriendsList_Response.ProtoReflect.Descriptor instead.
func (*CFriendsList_GetFriendsList_Response) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{6}
}

func (x *CFriendsList_GetFriendsList_Response) GetFriendslist() *CMsgClientFriendsList {
	if x != nil {
		return x.Friendslist
	}
	return nil
}

type CFriendsList_SetFavorites_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Favorites []*CFriendsListFavoriteEntry `protobuf:"bytes,1,rep,name=favorites" json:"favorites,omitempty"`
}

func (x *CFriendsList_SetFavorites_Request) Reset() {
	*x = CFriendsList_SetFavorites_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_SetFavorites_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_SetFavorites_Request) ProtoMessage() {}

func (x *CFriendsList_SetFavorites_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_SetFavorites_Request.ProtoReflect.Descriptor instead.
func (*CFriendsList_SetFavorites_Request) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{7}
}

func (x *CFriendsList_SetFavorites_Request) GetFavorites() []*CFriendsListFavoriteEntry {
	if x != nil {
		return x.Favorites
	}
	return nil
}

type CFriendsList_SetFavorites_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CFriendsList_SetFavorites_Response) Reset() {
	*x = CFriendsList_SetFavorites_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsList_SetFavorites_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsList_SetFavorites_Response) ProtoMessage() {}

func (x *CFriendsList_SetFavorites_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsList_SetFavorites_Response.ProtoReflect.Descriptor instead.
func (*CFriendsList_SetFavorites_Response) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{8}
}

type CFriendsListCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groupid          *uint32  `protobuf:"varint,1,opt,name=groupid" json:"groupid,omitempty"`
	Name             *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AccountidMembers []uint32 `protobuf:"varint,3,rep,name=accountid_members,json=accountidMembers" json:"accountid_members,omitempty"`
}

func (x *CFriendsListCategory) Reset() {
	*x = CFriendsListCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsListCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsListCategory) ProtoMessage() {}

func (x *CFriendsListCategory) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsListCategory.ProtoReflect.Descriptor instead.
func (*CFriendsListCategory) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{9}
}

func (x *CFriendsListCategory) GetGroupid() uint32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *CFriendsListCategory) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CFriendsListCategory) GetAccountidMembers() []uint32 {
	if x != nil {
		return x.AccountidMembers
	}
	return nil
}

type CFriendsListFavoriteEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid   *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Clanid      *uint32 `protobuf:"varint,2,opt,name=clanid" json:"clanid,omitempty"`
	ChatGroupId *uint64 `protobuf:"varint,3,opt,name=chat_group_id,json=chatGroupId" json:"chat_group_id,omitempty"`
}

func (x *CFriendsListFavoriteEntry) Reset() {
	*x = CFriendsListFavoriteEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CFriendsListFavoriteEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendsListFavoriteEntry) ProtoMessage() {}

func (x *CFriendsListFavoriteEntry) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendsListFavoriteEntry.ProtoReflect.Descriptor instead.
func (*CFriendsListFavoriteEntry) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{10}
}

func (x *CFriendsListFavoriteEntry) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CFriendsListFavoriteEntry) GetClanid() uint32 {
	if x != nil && x.Clanid != nil {
		return *x.Clanid
	}
	return 0
}

func (x *CFriendsListFavoriteEntry) GetChatGroupId() uint64 {
	if x != nil && x.ChatGroupId != nil {
		return *x.ChatGroupId
	}
	return 0
}

type CMsgClientFriendsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bincremental      *bool                           `protobuf:"varint,1,opt,name=bincremental" json:"bincremental,omitempty"`
	Friends           []*CMsgClientFriendsList_Friend `protobuf:"bytes,2,rep,name=friends" json:"friends,omitempty"`
	MaxFriendCount    *uint32                         `protobuf:"varint,3,opt,name=max_friend_count,json=maxFriendCount" json:"max_friend_count,omitempty"`
	ActiveFriendCount *uint32                         `protobuf:"varint,4,opt,name=active_friend_count,json=activeFriendCount" json:"active_friend_count,omitempty"`
	FriendsLimitHit   *bool                           `protobuf:"varint,5,opt,name=friends_limit_hit,json=friendsLimitHit" json:"friends_limit_hit,omitempty"`
}

func (x *CMsgClientFriendsList) Reset() {
	*x = CMsgClientFriendsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientFriendsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendsList) ProtoMessage() {}

func (x *CMsgClientFriendsList) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendsList.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendsList) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientFriendsList) GetBincremental() bool {
	if x != nil && x.Bincremental != nil {
		return *x.Bincremental
	}
	return false
}

func (x *CMsgClientFriendsList) GetFriends() []*CMsgClientFriendsList_Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *CMsgClientFriendsList) GetMaxFriendCount() uint32 {
	if x != nil && x.MaxFriendCount != nil {
		return *x.MaxFriendCount
	}
	return 0
}

func (x *CMsgClientFriendsList) GetActiveFriendCount() uint32 {
	if x != nil && x.ActiveFriendCount != nil {
		return *x.ActiveFriendCount
	}
	return 0
}

func (x *CMsgClientFriendsList) GetFriendsLimitHit() bool {
	if x != nil && x.FriendsLimitHit != nil {
		return *x.FriendsLimitHit
	}
	return false
}

type CMsgClientFriendsList_Friend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ulfriendid          *uint64 `protobuf:"fixed64,1,opt,name=ulfriendid" json:"ulfriendid,omitempty"`
	Efriendrelationship *uint32 `protobuf:"varint,2,opt,name=efriendrelationship" json:"efriendrelationship,omitempty"`
}

func (x *CMsgClientFriendsList_Friend) Reset() {
	*x = CMsgClientFriendsList_Friend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_friendslist_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientFriendsList_Friend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientFriendsList_Friend) ProtoMessage() {}

func (x *CMsgClientFriendsList_Friend) ProtoReflect() protoreflect.Message {
	mi := &file_service_friendslist_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientFriendsList_Friend.ProtoReflect.Descriptor instead.
func (*CMsgClientFriendsList_Friend) Descriptor() ([]byte, []int) {
	return file_service_friendslist_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgClientFriendsList_Friend) GetUlfriendid() uint64 {
	if x != nil && x.Ulfriendid != nil {
		return *x.Ulfriendid
	}
	return 0
}

func (x *CMsgClientFriendsList_Friend) GetEfriendrelationship() uint32 {
	if x != nil && x.Efriendrelationship != nil {
		return *x.Efriendrelationship
	}
	return 0
}

var File_service_friendslist_proto protoreflect.FileDescriptor

var file_service_friendslist_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66,
	0x0a, 0x2a, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a, 0x23,
	0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x43, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x5e, 0x0a, 0x22, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x22,
	0x25, 0x0a, 0x23, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x24, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38,
	0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x21, 0x43, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x22, 0x43, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71, 0x0a,
	0x14, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x10,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0x75, 0x0a, 0x19, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6c, 0x61, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6c, 0x61,
	0x6e, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x68, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x48, 0x69, 0x74, 0x22, 0x70, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0a, 0x75, 0x6c, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x65, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x32, 0xfa, 0x02, 0x0a, 0x0b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x12, 0x22, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e,
	0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x43, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x43, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x53, 0x65,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0x61, 0x0a, 0x11, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x2b, 0x2e, 0x43,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0b, 0x2e, 0x4e, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_friendslist_proto_rawDescOnce sync.Once
	file_service_friendslist_proto_rawDescData = file_service_friendslist_proto_rawDesc
)

func file_service_friendslist_proto_rawDescGZIP() []byte {
	file_service_friendslist_proto_rawDescOnce.Do(func() {
		file_service_friendslist_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_friendslist_proto_rawDescData)
	})
	return file_service_friendslist_proto_rawDescData
}

var file_service_friendslist_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_service_friendslist_proto_goTypes = []any{
	(*CFriendsList_FavoritesChanged_Notification)(nil), // 0: CFriendsList_FavoritesChanged_Notification
	(*CFriendsList_GetCategories_Request)(nil),         // 1: CFriendsList_GetCategories_Request
	(*CFriendsList_GetCategories_Response)(nil),        // 2: CFriendsList_GetCategories_Response
	(*CFriendsList_GetFavorites_Request)(nil),          // 3: CFriendsList_GetFavorites_Request
	(*CFriendsList_GetFavorites_Response)(nil),         // 4: CFriendsList_GetFavorites_Response
	(*CFriendsList_GetFriendsList_Request)(nil),        // 5: CFriendsList_GetFriendsList_Request
	(*CFriendsList_GetFriendsList_Response)(nil),       // 6: CFriendsList_GetFriendsList_Response
	(*CFriendsList_SetFavorites_Request)(nil),          // 7: CFriendsList_SetFavorites_Request
	(*CFriendsList_SetFavorites_Response)(nil),         // 8: CFriendsList_SetFavorites_Response
	(*CFriendsListCategory)(nil),                       // 9: CFriendsListCategory
	(*CFriendsListFavoriteEntry)(nil),                  // 10: CFriendsListFavoriteEntry
	(*CMsgClientFriendsList)(nil),                      // 11: CMsgClientFriendsList
	(*CMsgClientFriendsList_Friend)(nil),               // 12: CMsgClientFriendsList_Friend
	(*NoResponse)(nil),                                 // 13: NoResponse
}
var file_service_friendslist_proto_depIdxs = []int32{
	10, // 0: CFriendsList_FavoritesChanged_Notification.favorites:type_name -> CFriendsListFavoriteEntry
	9,  // 1: CFriendsList_GetCategories_Response.categories:type_name -> CFriendsListCategory
	10, // 2: CFriendsList_GetFavorites_Response.favorites:type_name -> CFriendsListFavoriteEntry
	11, // 3: CFriendsList_GetFriendsList_Response.friendslist:type_name -> CMsgClientFriendsList
	10, // 4: CFriendsList_SetFavorites_Request.favorites:type_name -> CFriendsListFavoriteEntry
	12, // 5: CMsgClientFriendsList.friends:type_name -> CMsgClientFriendsList_Friend
	1,  // 6: FriendsList.GetCategories:input_type -> CFriendsList_GetCategories_Request
	3,  // 7: FriendsList.GetFavorites:input_type -> CFriendsList_GetFavorites_Request
	5,  // 8: FriendsList.GetFriendsList:input_type -> CFriendsList_GetFriendsList_Request
	7,  // 9: FriendsList.SetFavorites:input_type -> CFriendsList_SetFavorites_Request
	0,  // 10: FriendsListClient.FavoritesChanged:input_type -> CFriendsList_FavoritesChanged_Notification
	2,  // 11: FriendsList.GetCategories:output_type -> CFriendsList_GetCategories_Response
	4,  // 12: FriendsList.GetFavorites:output_type -> CFriendsList_GetFavorites_Response
	6,  // 13: FriendsList.GetFriendsList:output_type -> CFriendsList_GetFriendsList_Response
	8,  // 14: FriendsList.SetFavorites:output_type -> CFriendsList_SetFavorites_Response
	13, // 15: FriendsListClient.FavoritesChanged:output_type -> NoResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_service_friendslist_proto_init() }
func file_service_friendslist_proto_init() {
	if File_service_friendslist_proto != nil {
		return
	}
	file_common_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_friendslist_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_FavoritesChanged_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_GetCategories_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_GetCategories_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_GetFavorites_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_GetFavorites_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_GetFriendsList_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_GetFriendsList_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_SetFavorites_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsList_SetFavorites_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsListCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CFriendsListFavoriteEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientFriendsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_friendslist_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CMsgClientFriendsList_Friend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_friendslist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_service_friendslist_proto_goTypes,
		DependencyIndexes: file_service_friendslist_proto_depIdxs,
		MessageInfos:      file_service_friendslist_proto_msgTypes,
	}.Build()
	File_service_friendslist_proto = out.File
	file_service_friendslist_proto_rawDesc = nil
	file_service_friendslist_proto_goTypes = nil
	file_service_friendslist_proto_depIdxs = nil
}
