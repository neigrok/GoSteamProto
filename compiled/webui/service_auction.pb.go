// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_auction.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CAuction_Bid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid            *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Auctiondescriptionid *uint64 `protobuf:"varint,2,opt,name=auctiondescriptionid" json:"auctiondescriptionid,omitempty"`
	State                *int32  `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	TimeCreated          *uint32 `protobuf:"varint,4,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	TimeUpdated          *uint32 `protobuf:"varint,5,opt,name=time_updated,json=timeUpdated" json:"time_updated,omitempty"`
	AmountBid            *int64  `protobuf:"varint,6,opt,name=amount_bid,json=amountBid" json:"amount_bid,omitempty"`
	AmountPaid           *int64  `protobuf:"varint,7,opt,name=amount_paid,json=amountPaid" json:"amount_paid,omitempty"`
	Auctionbidid         *int64  `protobuf:"varint,8,opt,name=auctionbidid" json:"auctionbidid,omitempty"`
}

func (x *CAuction_Bid) Reset() {
	*x = CAuction_Bid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_Bid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_Bid) ProtoMessage() {}

func (x *CAuction_Bid) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_Bid.ProtoReflect.Descriptor instead.
func (*CAuction_Bid) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{0}
}

func (x *CAuction_Bid) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CAuction_Bid) GetAuctiondescriptionid() uint64 {
	if x != nil && x.Auctiondescriptionid != nil {
		return *x.Auctiondescriptionid
	}
	return 0
}

func (x *CAuction_Bid) GetState() int32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

func (x *CAuction_Bid) GetTimeCreated() uint32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *CAuction_Bid) GetTimeUpdated() uint32 {
	if x != nil && x.TimeUpdated != nil {
		return *x.TimeUpdated
	}
	return 0
}

func (x *CAuction_Bid) GetAmountBid() int64 {
	if x != nil && x.AmountBid != nil {
		return *x.AmountBid
	}
	return 0
}

func (x *CAuction_Bid) GetAmountPaid() int64 {
	if x != nil && x.AmountPaid != nil {
		return *x.AmountPaid
	}
	return 0
}

func (x *CAuction_Bid) GetAuctionbidid() int64 {
	if x != nil && x.Auctionbidid != nil {
		return *x.Auctionbidid
	}
	return 0
}

type CAuction_CancelBid_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auctiondescriptionid *uint64 `protobuf:"varint,1,opt,name=auctiondescriptionid" json:"auctiondescriptionid,omitempty"`
}

func (x *CAuction_CancelBid_Request) Reset() {
	*x = CAuction_CancelBid_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_CancelBid_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_CancelBid_Request) ProtoMessage() {}

func (x *CAuction_CancelBid_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_CancelBid_Request.ProtoReflect.Descriptor instead.
func (*CAuction_CancelBid_Request) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{1}
}

func (x *CAuction_CancelBid_Request) GetAuctiondescriptionid() uint64 {
	if x != nil && x.Auctiondescriptionid != nil {
		return *x.Auctiondescriptionid
	}
	return 0
}

type CAuction_CancelBid_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmountReturned *int64 `protobuf:"varint,1,opt,name=amount_returned,json=amountReturned" json:"amount_returned,omitempty"`
}

func (x *CAuction_CancelBid_Response) Reset() {
	*x = CAuction_CancelBid_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_CancelBid_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_CancelBid_Response) ProtoMessage() {}

func (x *CAuction_CancelBid_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_CancelBid_Response.ProtoReflect.Descriptor instead.
func (*CAuction_CancelBid_Response) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{2}
}

func (x *CAuction_CancelBid_Response) GetAmountReturned() int64 {
	if x != nil && x.AmountReturned != nil {
		return *x.AmountReturned
	}
	return 0
}

type CAuction_GetAllItems_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CAuction_GetAllItems_Request) Reset() {
	*x = CAuction_GetAllItems_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetAllItems_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetAllItems_Request) ProtoMessage() {}

func (x *CAuction_GetAllItems_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetAllItems_Request.ProtoReflect.Descriptor instead.
func (*CAuction_GetAllItems_Request) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{3}
}

type CAuction_GetAllItems_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CAuction_Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *CAuction_GetAllItems_Response) Reset() {
	*x = CAuction_GetAllItems_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetAllItems_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetAllItems_Response) ProtoMessage() {}

func (x *CAuction_GetAllItems_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetAllItems_Response.ProtoReflect.Descriptor instead.
func (*CAuction_GetAllItems_Response) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{4}
}

func (x *CAuction_GetAllItems_Response) GetItems() []*CAuction_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type CAuction_GetBidsForItem_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auctiondescriptionid *uint64 `protobuf:"varint,1,opt,name=auctiondescriptionid" json:"auctiondescriptionid,omitempty"`
}

func (x *CAuction_GetBidsForItem_Request) Reset() {
	*x = CAuction_GetBidsForItem_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetBidsForItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetBidsForItem_Request) ProtoMessage() {}

func (x *CAuction_GetBidsForItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetBidsForItem_Request.ProtoReflect.Descriptor instead.
func (*CAuction_GetBidsForItem_Request) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{5}
}

func (x *CAuction_GetBidsForItem_Request) GetAuctiondescriptionid() uint64 {
	if x != nil && x.Auctiondescriptionid != nil {
		return *x.Auctiondescriptionid
	}
	return 0
}

type CAuction_GetBidsForItem_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item                *CAuction_Item  `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
	CountTotal          *int32          `protobuf:"varint,2,opt,name=count_total,json=countTotal" json:"count_total,omitempty"`
	CurrentUserPosition *int32          `protobuf:"varint,3,opt,name=current_user_position,json=currentUserPosition" json:"current_user_position,omitempty"`
	WinningBids         []*CAuction_Bid `protobuf:"bytes,4,rep,name=winning_bids,json=winningBids" json:"winning_bids,omitempty"`
}

func (x *CAuction_GetBidsForItem_Response) Reset() {
	*x = CAuction_GetBidsForItem_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetBidsForItem_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetBidsForItem_Response) ProtoMessage() {}

func (x *CAuction_GetBidsForItem_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetBidsForItem_Response.ProtoReflect.Descriptor instead.
func (*CAuction_GetBidsForItem_Response) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{6}
}

func (x *CAuction_GetBidsForItem_Response) GetItem() *CAuction_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CAuction_GetBidsForItem_Response) GetCountTotal() int32 {
	if x != nil && x.CountTotal != nil {
		return *x.CountTotal
	}
	return 0
}

func (x *CAuction_GetBidsForItem_Response) GetCurrentUserPosition() int32 {
	if x != nil && x.CurrentUserPosition != nil {
		return *x.CurrentUserPosition
	}
	return 0
}

func (x *CAuction_GetBidsForItem_Response) GetWinningBids() []*CAuction_Bid {
	if x != nil {
		return x.WinningBids
	}
	return nil
}

type CAuction_GetBidsForUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CAuction_GetBidsForUser_Request) Reset() {
	*x = CAuction_GetBidsForUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetBidsForUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetBidsForUser_Request) ProtoMessage() {}

func (x *CAuction_GetBidsForUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetBidsForUser_Request.ProtoReflect.Descriptor instead.
func (*CAuction_GetBidsForUser_Request) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{7}
}

func (x *CAuction_GetBidsForUser_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CAuction_GetBidsForUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bids []*CAuction_Bid `protobuf:"bytes,1,rep,name=bids" json:"bids,omitempty"`
}

func (x *CAuction_GetBidsForUser_Response) Reset() {
	*x = CAuction_GetBidsForUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetBidsForUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetBidsForUser_Response) ProtoMessage() {}

func (x *CAuction_GetBidsForUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetBidsForUser_Response.ProtoReflect.Descriptor instead.
func (*CAuction_GetBidsForUser_Response) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{8}
}

func (x *CAuction_GetBidsForUser_Response) GetBids() []*CAuction_Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

type CAuction_GetItemDetails_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auctiondescriptionid *uint64 `protobuf:"varint,1,opt,name=auctiondescriptionid" json:"auctiondescriptionid,omitempty"`
}

func (x *CAuction_GetItemDetails_Request) Reset() {
	*x = CAuction_GetItemDetails_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetItemDetails_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetItemDetails_Request) ProtoMessage() {}

func (x *CAuction_GetItemDetails_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetItemDetails_Request.ProtoReflect.Descriptor instead.
func (*CAuction_GetItemDetails_Request) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{9}
}

func (x *CAuction_GetItemDetails_Request) GetAuctiondescriptionid() uint64 {
	if x != nil && x.Auctiondescriptionid != nil {
		return *x.Auctiondescriptionid
	}
	return 0
}

type CAuction_GetItemDetails_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *CAuction_Item `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
}

func (x *CAuction_GetItemDetails_Response) Reset() {
	*x = CAuction_GetItemDetails_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetItemDetails_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetItemDetails_Response) ProtoMessage() {}

func (x *CAuction_GetItemDetails_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetItemDetails_Response.ProtoReflect.Descriptor instead.
func (*CAuction_GetItemDetails_Response) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{10}
}

func (x *CAuction_GetItemDetails_Response) GetItem() *CAuction_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type CAuction_GetUserBidForItem_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auctiondescriptionid *uint64 `protobuf:"varint,1,opt,name=auctiondescriptionid" json:"auctiondescriptionid,omitempty"`
}

func (x *CAuction_GetUserBidForItem_Request) Reset() {
	*x = CAuction_GetUserBidForItem_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetUserBidForItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetUserBidForItem_Request) ProtoMessage() {}

func (x *CAuction_GetUserBidForItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetUserBidForItem_Request.ProtoReflect.Descriptor instead.
func (*CAuction_GetUserBidForItem_Request) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{11}
}

func (x *CAuction_GetUserBidForItem_Request) GetAuctiondescriptionid() uint64 {
	if x != nil && x.Auctiondescriptionid != nil {
		return *x.Auctiondescriptionid
	}
	return 0
}

type CAuction_GetUserBidForItem_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bid *CAuction_Bid `protobuf:"bytes,1,opt,name=bid" json:"bid,omitempty"`
}

func (x *CAuction_GetUserBidForItem_Response) Reset() {
	*x = CAuction_GetUserBidForItem_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_GetUserBidForItem_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_GetUserBidForItem_Response) ProtoMessage() {}

func (x *CAuction_GetUserBidForItem_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_GetUserBidForItem_Response.ProtoReflect.Descriptor instead.
func (*CAuction_GetUserBidForItem_Response) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{12}
}

func (x *CAuction_GetUserBidForItem_Response) GetBid() *CAuction_Bid {
	if x != nil {
		return x.Bid
	}
	return nil
}

type CAuction_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auctiondescriptionid   *uint64  `protobuf:"varint,1,opt,name=auctiondescriptionid" json:"auctiondescriptionid,omitempty"`
	TimeStart              *uint32  `protobuf:"varint,2,opt,name=time_start,json=timeStart" json:"time_start,omitempty"`
	TimeEnd                *uint32  `protobuf:"varint,3,opt,name=time_end,json=timeEnd" json:"time_end,omitempty"`
	AmountTotal            *int64   `protobuf:"varint,5,opt,name=amount_total,json=amountTotal" json:"amount_total,omitempty"`
	AmountRemaining        *int64   `protobuf:"varint,6,opt,name=amount_remaining,json=amountRemaining" json:"amount_remaining,omitempty"`
	HighestAmount          *int64   `protobuf:"varint,7,opt,name=highest_amount,json=highestAmount" json:"highest_amount,omitempty"`
	HighestBidderAccountid *uint32  `protobuf:"varint,8,opt,name=highest_bidder_accountid,json=highestBidderAccountid" json:"highest_bidder_accountid,omitempty"`
	CommunityItemAppid     *uint32  `protobuf:"varint,9,opt,name=community_item_appid,json=communityItemAppid" json:"community_item_appid,omitempty"`
	CommunityItemType      *uint32  `protobuf:"varint,10,opt,name=community_item_type,json=communityItemType" json:"community_item_type,omitempty"`
	StoreAppid             *uint32  `protobuf:"varint,11,opt,name=store_appid,json=storeAppid" json:"store_appid,omitempty"`
	StorePackageids        []uint32 `protobuf:"varint,12,rep,name=store_packageids,json=storePackageids" json:"store_packageids,omitempty"`
	ReservePrice           *int64   `protobuf:"varint,13,opt,name=reserve_price,json=reservePrice" json:"reserve_price,omitempty"`
}

func (x *CAuction_Item) Reset() {
	*x = CAuction_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_Item) ProtoMessage() {}

func (x *CAuction_Item) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_Item.ProtoReflect.Descriptor instead.
func (*CAuction_Item) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{13}
}

func (x *CAuction_Item) GetAuctiondescriptionid() uint64 {
	if x != nil && x.Auctiondescriptionid != nil {
		return *x.Auctiondescriptionid
	}
	return 0
}

func (x *CAuction_Item) GetTimeStart() uint32 {
	if x != nil && x.TimeStart != nil {
		return *x.TimeStart
	}
	return 0
}

func (x *CAuction_Item) GetTimeEnd() uint32 {
	if x != nil && x.TimeEnd != nil {
		return *x.TimeEnd
	}
	return 0
}

func (x *CAuction_Item) GetAmountTotal() int64 {
	if x != nil && x.AmountTotal != nil {
		return *x.AmountTotal
	}
	return 0
}

func (x *CAuction_Item) GetAmountRemaining() int64 {
	if x != nil && x.AmountRemaining != nil {
		return *x.AmountRemaining
	}
	return 0
}

func (x *CAuction_Item) GetHighestAmount() int64 {
	if x != nil && x.HighestAmount != nil {
		return *x.HighestAmount
	}
	return 0
}

func (x *CAuction_Item) GetHighestBidderAccountid() uint32 {
	if x != nil && x.HighestBidderAccountid != nil {
		return *x.HighestBidderAccountid
	}
	return 0
}

func (x *CAuction_Item) GetCommunityItemAppid() uint32 {
	if x != nil && x.CommunityItemAppid != nil {
		return *x.CommunityItemAppid
	}
	return 0
}

func (x *CAuction_Item) GetCommunityItemType() uint32 {
	if x != nil && x.CommunityItemType != nil {
		return *x.CommunityItemType
	}
	return 0
}

func (x *CAuction_Item) GetStoreAppid() uint32 {
	if x != nil && x.StoreAppid != nil {
		return *x.StoreAppid
	}
	return 0
}

func (x *CAuction_Item) GetStorePackageids() []uint32 {
	if x != nil {
		return x.StorePackageids
	}
	return nil
}

func (x *CAuction_Item) GetReservePrice() int64 {
	if x != nil && x.ReservePrice != nil {
		return *x.ReservePrice
	}
	return 0
}

type CAuction_PlaceBid_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auctiondescriptionid    *uint64 `protobuf:"varint,1,opt,name=auctiondescriptionid" json:"auctiondescriptionid,omitempty"`
	AmountBid               *int64  `protobuf:"varint,2,opt,name=amount_bid,json=amountBid" json:"amount_bid,omitempty"`
	ExpectedAmountRemaining *int32  `protobuf:"varint,3,opt,name=expected_amount_remaining,json=expectedAmountRemaining" json:"expected_amount_remaining,omitempty"`
}

func (x *CAuction_PlaceBid_Request) Reset() {
	*x = CAuction_PlaceBid_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_PlaceBid_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_PlaceBid_Request) ProtoMessage() {}

func (x *CAuction_PlaceBid_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_PlaceBid_Request.ProtoReflect.Descriptor instead.
func (*CAuction_PlaceBid_Request) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{14}
}

func (x *CAuction_PlaceBid_Request) GetAuctiondescriptionid() uint64 {
	if x != nil && x.Auctiondescriptionid != nil {
		return *x.Auctiondescriptionid
	}
	return 0
}

func (x *CAuction_PlaceBid_Request) GetAmountBid() int64 {
	if x != nil && x.AmountBid != nil {
		return *x.AmountBid
	}
	return 0
}

func (x *CAuction_PlaceBid_Request) GetExpectedAmountRemaining() int32 {
	if x != nil && x.ExpectedAmountRemaining != nil {
		return *x.ExpectedAmountRemaining
	}
	return 0
}

type CAuction_PlaceBid_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CAuction_PlaceBid_Response) Reset() {
	*x = CAuction_PlaceBid_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_auction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAuction_PlaceBid_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAuction_PlaceBid_Response) ProtoMessage() {}

func (x *CAuction_PlaceBid_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_auction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAuction_PlaceBid_Response.ProtoReflect.Descriptor instead.
func (*CAuction_PlaceBid_Response) Descriptor() ([]byte, []int) {
	return file_service_auction_proto_rawDescGZIP(), []int{15}
}

var File_service_auction_proto protoreflect.FileDescriptor

var file_service_auction_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x0c, 0x43,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x42, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x61, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x69,
	0x64, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x62, 0x69, 0x64, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x1a, 0x43, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x69, 0x64, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x1b, 0x43, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x69, 0x64, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65,
	0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x45, 0x0a, 0x1d, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x1f, 0x43, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x61,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22,
	0xcd, 0x01, 0x0a, 0x20, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74,
	0x42, 0x69, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a,
	0x0c, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x42,
	0x69, 0x64, 0x52, 0x0b, 0x77, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x64, 0x73, 0x22,
	0x3b, 0x0a, 0x1f, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42,
	0x69, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x20,
	0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x73,
	0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x42, 0x69, 0x64, 0x52, 0x04, 0x62,
	0x69, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x1f, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x20, 0x43, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x22, 0x58, 0x0a, 0x22, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x23,
	0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x42, 0x69, 0x64, 0x52,
	0x03, 0x62, 0x69, 0x64, 0x22, 0xff, 0x03, 0x0a, 0x0d, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68, 0x69, 0x67, 0x68,
	0x65, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x68, 0x69, 0x67,
	0x68, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x68, 0x69, 0x67,
	0x68, 0x65, 0x73, 0x74, 0x42, 0x69, 0x64, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x43, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x69, 0x64, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x62, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x69, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xc9, 0x04, 0x0a, 0x07, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a,
	0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x69, 0x64, 0x12, 0x1b, 0x2e, 0x43, 0x41, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x69, 0x64, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x69, 0x64, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x73, 0x46, 0x6f,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x43,
	0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64, 0x73, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x69, 0x64,
	0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x20, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x2e,
	0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x69, 0x64, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x42, 0x69, 0x64, 0x12, 0x1a, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x69, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x43, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x42, 0x69, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_auction_proto_rawDescOnce sync.Once
	file_service_auction_proto_rawDescData = file_service_auction_proto_rawDesc
)

func file_service_auction_proto_rawDescGZIP() []byte {
	file_service_auction_proto_rawDescOnce.Do(func() {
		file_service_auction_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_auction_proto_rawDescData)
	})
	return file_service_auction_proto_rawDescData
}

var file_service_auction_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_service_auction_proto_goTypes = []any{
	(*CAuction_Bid)(nil),                        // 0: CAuction_Bid
	(*CAuction_CancelBid_Request)(nil),          // 1: CAuction_CancelBid_Request
	(*CAuction_CancelBid_Response)(nil),         // 2: CAuction_CancelBid_Response
	(*CAuction_GetAllItems_Request)(nil),        // 3: CAuction_GetAllItems_Request
	(*CAuction_GetAllItems_Response)(nil),       // 4: CAuction_GetAllItems_Response
	(*CAuction_GetBidsForItem_Request)(nil),     // 5: CAuction_GetBidsForItem_Request
	(*CAuction_GetBidsForItem_Response)(nil),    // 6: CAuction_GetBidsForItem_Response
	(*CAuction_GetBidsForUser_Request)(nil),     // 7: CAuction_GetBidsForUser_Request
	(*CAuction_GetBidsForUser_Response)(nil),    // 8: CAuction_GetBidsForUser_Response
	(*CAuction_GetItemDetails_Request)(nil),     // 9: CAuction_GetItemDetails_Request
	(*CAuction_GetItemDetails_Response)(nil),    // 10: CAuction_GetItemDetails_Response
	(*CAuction_GetUserBidForItem_Request)(nil),  // 11: CAuction_GetUserBidForItem_Request
	(*CAuction_GetUserBidForItem_Response)(nil), // 12: CAuction_GetUserBidForItem_Response
	(*CAuction_Item)(nil),                       // 13: CAuction_Item
	(*CAuction_PlaceBid_Request)(nil),           // 14: CAuction_PlaceBid_Request
	(*CAuction_PlaceBid_Response)(nil),          // 15: CAuction_PlaceBid_Response
}
var file_service_auction_proto_depIdxs = []int32{
	13, // 0: CAuction_GetAllItems_Response.items:type_name -> CAuction_Item
	13, // 1: CAuction_GetBidsForItem_Response.item:type_name -> CAuction_Item
	0,  // 2: CAuction_GetBidsForItem_Response.winning_bids:type_name -> CAuction_Bid
	0,  // 3: CAuction_GetBidsForUser_Response.bids:type_name -> CAuction_Bid
	13, // 4: CAuction_GetItemDetails_Response.item:type_name -> CAuction_Item
	0,  // 5: CAuction_GetUserBidForItem_Response.bid:type_name -> CAuction_Bid
	1,  // 6: Auction.CancelBid:input_type -> CAuction_CancelBid_Request
	3,  // 7: Auction.GetAllItems:input_type -> CAuction_GetAllItems_Request
	5,  // 8: Auction.GetBidsForItem:input_type -> CAuction_GetBidsForItem_Request
	7,  // 9: Auction.GetBidsForUser:input_type -> CAuction_GetBidsForUser_Request
	9,  // 10: Auction.GetItemDetails:input_type -> CAuction_GetItemDetails_Request
	11, // 11: Auction.GetUserBidForItem:input_type -> CAuction_GetUserBidForItem_Request
	14, // 12: Auction.PlaceBid:input_type -> CAuction_PlaceBid_Request
	2,  // 13: Auction.CancelBid:output_type -> CAuction_CancelBid_Response
	4,  // 14: Auction.GetAllItems:output_type -> CAuction_GetAllItems_Response
	6,  // 15: Auction.GetBidsForItem:output_type -> CAuction_GetBidsForItem_Response
	8,  // 16: Auction.GetBidsForUser:output_type -> CAuction_GetBidsForUser_Response
	10, // 17: Auction.GetItemDetails:output_type -> CAuction_GetItemDetails_Response
	12, // 18: Auction.GetUserBidForItem:output_type -> CAuction_GetUserBidForItem_Response
	15, // 19: Auction.PlaceBid:output_type -> CAuction_PlaceBid_Response
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_service_auction_proto_init() }
func file_service_auction_proto_init() {
	if File_service_auction_proto != nil {
		return
	}
	file_common_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_auction_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_Bid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_CancelBid_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_CancelBid_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetAllItems_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetAllItems_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetBidsForItem_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetBidsForItem_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetBidsForUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetBidsForUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetItemDetails_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetItemDetails_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetUserBidForItem_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_GetUserBidForItem_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_PlaceBid_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_auction_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CAuction_PlaceBid_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_auction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_auction_proto_goTypes,
		DependencyIndexes: file_service_auction_proto_depIdxs,
		MessageInfos:      file_service_auction_proto_msgTypes,
	}.Build()
	File_service_auction_proto = out.File
	file_service_auction_proto_rawDesc = nil
	file_service_auction_proto_goTypes = nil
	file_service_auction_proto_depIdxs = nil
}
