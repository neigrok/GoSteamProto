// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_storetopsellers.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CStoreTopSellers_GetCountryList_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *string `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (x *CStoreTopSellers_GetCountryList_Request) Reset() {
	*x = CStoreTopSellers_GetCountryList_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_storetopsellers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStoreTopSellers_GetCountryList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreTopSellers_GetCountryList_Request) ProtoMessage() {}

func (x *CStoreTopSellers_GetCountryList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storetopsellers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreTopSellers_GetCountryList_Request.ProtoReflect.Descriptor instead.
func (*CStoreTopSellers_GetCountryList_Request) Descriptor() ([]byte, []int) {
	return file_service_storetopsellers_proto_rawDescGZIP(), []int{0}
}

func (x *CStoreTopSellers_GetCountryList_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CStoreTopSellers_GetCountryList_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Countries []*CStoreTopSellers_GetCountryList_Response_Country `protobuf:"bytes,1,rep,name=countries" json:"countries,omitempty"`
}

func (x *CStoreTopSellers_GetCountryList_Response) Reset() {
	*x = CStoreTopSellers_GetCountryList_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_storetopsellers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStoreTopSellers_GetCountryList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreTopSellers_GetCountryList_Response) ProtoMessage() {}

func (x *CStoreTopSellers_GetCountryList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storetopsellers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreTopSellers_GetCountryList_Response.ProtoReflect.Descriptor instead.
func (*CStoreTopSellers_GetCountryList_Response) Descriptor() ([]byte, []int) {
	return file_service_storetopsellers_proto_rawDescGZIP(), []int{1}
}

func (x *CStoreTopSellers_GetCountryList_Response) GetCountries() []*CStoreTopSellers_GetCountryList_Response_Country {
	if x != nil {
		return x.Countries
	}
	return nil
}

type CStoreTopSellers_GetCountryList_Response_Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode *string `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *CStoreTopSellers_GetCountryList_Response_Country) Reset() {
	*x = CStoreTopSellers_GetCountryList_Response_Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_storetopsellers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStoreTopSellers_GetCountryList_Response_Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreTopSellers_GetCountryList_Response_Country) ProtoMessage() {}

func (x *CStoreTopSellers_GetCountryList_Response_Country) ProtoReflect() protoreflect.Message {
	mi := &file_service_storetopsellers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreTopSellers_GetCountryList_Response_Country.ProtoReflect.Descriptor instead.
func (*CStoreTopSellers_GetCountryList_Response_Country) Descriptor() ([]byte, []int) {
	return file_service_storetopsellers_proto_rawDescGZIP(), []int{2}
}

func (x *CStoreTopSellers_GetCountryList_Response_Country) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStoreTopSellers_GetCountryList_Response_Country) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CStoreTopSellers_GetWeeklyTopSellers_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode *string                     `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Context     *StoreBrowseContext         `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
	DataRequest *StoreBrowseItemDataRequest `protobuf:"bytes,3,opt,name=data_request,json=dataRequest" json:"data_request,omitempty"`
	StartDate   *uint32                     `protobuf:"varint,4,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	PageStart   *int32                      `protobuf:"varint,5,opt,name=page_start,json=pageStart" json:"page_start,omitempty"`
	PageCount   *int32                      `protobuf:"varint,6,opt,name=page_count,json=pageCount,def=20" json:"page_count,omitempty"`
}

// Default values for CStoreTopSellers_GetWeeklyTopSellers_Request fields.
const (
	Default_CStoreTopSellers_GetWeeklyTopSellers_Request_PageCount = int32(20)
)

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) Reset() {
	*x = CStoreTopSellers_GetWeeklyTopSellers_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_storetopsellers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreTopSellers_GetWeeklyTopSellers_Request) ProtoMessage() {}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storetopsellers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreTopSellers_GetWeeklyTopSellers_Request.ProtoReflect.Descriptor instead.
func (*CStoreTopSellers_GetWeeklyTopSellers_Request) Descriptor() ([]byte, []int) {
	return file_service_storetopsellers_proto_rawDescGZIP(), []int{3}
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) GetDataRequest() *StoreBrowseItemDataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) GetStartDate() uint32 {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return 0
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) GetPageStart() int32 {
	if x != nil && x.PageStart != nil {
		return *x.PageStart
	}
	return 0
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Request) GetPageCount() int32 {
	if x != nil && x.PageCount != nil {
		return *x.PageCount
	}
	return Default_CStoreTopSellers_GetWeeklyTopSellers_Request_PageCount
}

type CStoreTopSellers_GetWeeklyTopSellers_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate     *uint32                                                         `protobuf:"varint,1,opt,name=start_date,json=startDate" json:"start_date,omitempty"`
	Ranks         []*CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank `protobuf:"bytes,2,rep,name=ranks" json:"ranks,omitempty"`
	NextPageStart *int32                                                          `protobuf:"varint,3,opt,name=next_page_start,json=nextPageStart" json:"next_page_start,omitempty"`
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response) Reset() {
	*x = CStoreTopSellers_GetWeeklyTopSellers_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_storetopsellers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreTopSellers_GetWeeklyTopSellers_Response) ProtoMessage() {}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storetopsellers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreTopSellers_GetWeeklyTopSellers_Response.ProtoReflect.Descriptor instead.
func (*CStoreTopSellers_GetWeeklyTopSellers_Response) Descriptor() ([]byte, []int) {
	return file_service_storetopsellers_proto_rawDescGZIP(), []int{4}
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response) GetStartDate() uint32 {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return 0
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response) GetRanks() []*CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank {
	if x != nil {
		return x.Ranks
	}
	return nil
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response) GetNextPageStart() int32 {
	if x != nil && x.NextPageStart != nil {
		return *x.NextPageStart
	}
	return 0
}

type CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank             *int32     `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	Appid            *int32     `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Item             *StoreItem `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	LastWeekRank     *int32     `protobuf:"varint,4,opt,name=last_week_rank,json=lastWeekRank" json:"last_week_rank,omitempty"`
	ConsecutiveWeeks *int32     `protobuf:"varint,5,opt,name=consecutive_weeks,json=consecutiveWeeks" json:"consecutive_weeks,omitempty"`
	FirstTop100      *bool      `protobuf:"varint,6,opt,name=first_top100,json=firstTop100" json:"first_top100,omitempty"`
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) Reset() {
	*x = CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_storetopsellers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) ProtoMessage() {}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) ProtoReflect() protoreflect.Message {
	mi := &file_service_storetopsellers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank.ProtoReflect.Descriptor instead.
func (*CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) Descriptor() ([]byte, []int) {
	return file_service_storetopsellers_proto_rawDescGZIP(), []int{5}
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) GetRank() int32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) GetAppid() int32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) GetItem() *StoreItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) GetLastWeekRank() int32 {
	if x != nil && x.LastWeekRank != nil {
		return *x.LastWeekRank
	}
	return 0
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) GetConsecutiveWeeks() int32 {
	if x != nil && x.ConsecutiveWeeks != nil {
		return *x.ConsecutiveWeeks
	}
	return 0
}

func (x *CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank) GetFirstTop100() bool {
	if x != nil && x.FirstTop100 != nil {
		return *x.FirstTop100
	}
	return false
}

var File_service_storetopsellers_proto protoreflect.FileDescriptor

var file_service_storetopsellers_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x74,
	0x6f, 0x70, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a,
	0x27, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x22, 0x7b, 0x0a, 0x28, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f,
	0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x69, 0x0a, 0x30, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa1, 0x02, 0x0a,
	0x2c, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x54, 0x6f, 0x70, 0x53, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x3e, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x21, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x02, 0x32, 0x30, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xcb, 0x01, 0x0a, 0x2d, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x54,
	0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x53, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x54, 0x6f, 0x70,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0xfe,
	0x01, 0x0a, 0x3c, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x54, 0x6f, 0x70,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77,
	0x65, 0x65, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x57, 0x65, 0x65, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x31, 0x30, 0x30, 0x32,
	0xee, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f,
	0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65,
	0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x12, 0x2d, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x54, 0x6f,
	0x70, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x43, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x53, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x54, 0x6f, 0x70,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_storetopsellers_proto_rawDescOnce sync.Once
	file_service_storetopsellers_proto_rawDescData = file_service_storetopsellers_proto_rawDesc
)

func file_service_storetopsellers_proto_rawDescGZIP() []byte {
	file_service_storetopsellers_proto_rawDescOnce.Do(func() {
		file_service_storetopsellers_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_storetopsellers_proto_rawDescData)
	})
	return file_service_storetopsellers_proto_rawDescData
}

var file_service_storetopsellers_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_service_storetopsellers_proto_goTypes = []any{
	(*CStoreTopSellers_GetCountryList_Request)(nil),                      // 0: CStoreTopSellers_GetCountryList_Request
	(*CStoreTopSellers_GetCountryList_Response)(nil),                     // 1: CStoreTopSellers_GetCountryList_Response
	(*CStoreTopSellers_GetCountryList_Response_Country)(nil),             // 2: CStoreTopSellers_GetCountryList_Response_Country
	(*CStoreTopSellers_GetWeeklyTopSellers_Request)(nil),                 // 3: CStoreTopSellers_GetWeeklyTopSellers_Request
	(*CStoreTopSellers_GetWeeklyTopSellers_Response)(nil),                // 4: CStoreTopSellers_GetWeeklyTopSellers_Response
	(*CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank)(nil), // 5: CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank
	(*StoreBrowseContext)(nil),                                           // 6: StoreBrowseContext
	(*StoreBrowseItemDataRequest)(nil),                                   // 7: StoreBrowseItemDataRequest
	(*StoreItem)(nil),                                                    // 8: StoreItem
}
var file_service_storetopsellers_proto_depIdxs = []int32{
	2, // 0: CStoreTopSellers_GetCountryList_Response.countries:type_name -> CStoreTopSellers_GetCountryList_Response_Country
	6, // 1: CStoreTopSellers_GetWeeklyTopSellers_Request.context:type_name -> StoreBrowseContext
	7, // 2: CStoreTopSellers_GetWeeklyTopSellers_Request.data_request:type_name -> StoreBrowseItemDataRequest
	5, // 3: CStoreTopSellers_GetWeeklyTopSellers_Response.ranks:type_name -> CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank
	8, // 4: CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank.item:type_name -> StoreItem
	0, // 5: StoreTopSellers.GetCountryList:input_type -> CStoreTopSellers_GetCountryList_Request
	3, // 6: StoreTopSellers.GetWeeklyTopSellers:input_type -> CStoreTopSellers_GetWeeklyTopSellers_Request
	1, // 7: StoreTopSellers.GetCountryList:output_type -> CStoreTopSellers_GetCountryList_Response
	4, // 8: StoreTopSellers.GetWeeklyTopSellers:output_type -> CStoreTopSellers_GetWeeklyTopSellers_Response
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_service_storetopsellers_proto_init() }
func file_service_storetopsellers_proto_init() {
	if File_service_storetopsellers_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_storetopsellers_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CStoreTopSellers_GetCountryList_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_storetopsellers_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CStoreTopSellers_GetCountryList_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_storetopsellers_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CStoreTopSellers_GetCountryList_Response_Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_storetopsellers_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CStoreTopSellers_GetWeeklyTopSellers_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_storetopsellers_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CStoreTopSellers_GetWeeklyTopSellers_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_storetopsellers_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CStoreTopSellers_GetWeeklyTopSellers_Response_TopSellersRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_storetopsellers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_storetopsellers_proto_goTypes,
		DependencyIndexes: file_service_storetopsellers_proto_depIdxs,
		MessageInfos:      file_service_storetopsellers_proto_msgTypes,
	}.Build()
	File_service_storetopsellers_proto = out.File
	file_service_storetopsellers_proto_rawDesc = nil
	file_service_storetopsellers_proto_goTypes = nil
	file_service_storetopsellers_proto_depIdxs = nil
}
