// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_checkout.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CCheckout_AddFreeLicense_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId *StoreItemID `protobuf:"bytes,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
}

func (x *CCheckout_AddFreeLicense_Request) Reset() {
	*x = CCheckout_AddFreeLicense_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_AddFreeLicense_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_AddFreeLicense_Request) ProtoMessage() {}

func (x *CCheckout_AddFreeLicense_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_AddFreeLicense_Request.ProtoReflect.Descriptor instead.
func (*CCheckout_AddFreeLicense_Request) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{0}
}

func (x *CCheckout_AddFreeLicense_Request) GetItemId() *StoreItemID {
	if x != nil {
		return x.ItemId
	}
	return nil
}

type CCheckout_AddFreeLicense_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageidsAdded      []uint32 `protobuf:"varint,1,rep,name=packageids_added,json=packageidsAdded" json:"packageids_added,omitempty"`
	AppidsAdded          []uint32 `protobuf:"varint,2,rep,name=appids_added,json=appidsAdded" json:"appids_added,omitempty"`
	PurchaseResultDetail *uint32  `protobuf:"varint,3,opt,name=purchase_result_detail,json=purchaseResultDetail" json:"purchase_result_detail,omitempty"`
}

func (x *CCheckout_AddFreeLicense_Response) Reset() {
	*x = CCheckout_AddFreeLicense_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_AddFreeLicense_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_AddFreeLicense_Response) ProtoMessage() {}

func (x *CCheckout_AddFreeLicense_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_AddFreeLicense_Response.ProtoReflect.Descriptor instead.
func (*CCheckout_AddFreeLicense_Response) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{1}
}

func (x *CCheckout_AddFreeLicense_Response) GetPackageidsAdded() []uint32 {
	if x != nil {
		return x.PackageidsAdded
	}
	return nil
}

func (x *CCheckout_AddFreeLicense_Response) GetAppidsAdded() []uint32 {
	if x != nil {
		return x.AppidsAdded
	}
	return nil
}

func (x *CCheckout_AddFreeLicense_Response) GetPurchaseResultDetail() uint32 {
	if x != nil && x.PurchaseResultDetail != nil {
		return *x.PurchaseResultDetail
	}
	return 0
}

type CCheckout_GetFriendOwnershipForGifting_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds []*StoreItemID `protobuf:"bytes,1,rep,name=item_ids,json=itemIds" json:"item_ids,omitempty"`
}

func (x *CCheckout_GetFriendOwnershipForGifting_Request) Reset() {
	*x = CCheckout_GetFriendOwnershipForGifting_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_GetFriendOwnershipForGifting_Request) ProtoMessage() {}

func (x *CCheckout_GetFriendOwnershipForGifting_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_GetFriendOwnershipForGifting_Request.ProtoReflect.Descriptor instead.
func (*CCheckout_GetFriendOwnershipForGifting_Request) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{2}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Request) GetItemIds() []*StoreItemID {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type CCheckout_GetFriendOwnershipForGifting_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnershipInfo []*CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo `protobuf:"bytes,1,rep,name=ownership_info,json=ownershipInfo" json:"ownership_info,omitempty"`
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response) Reset() {
	*x = CCheckout_GetFriendOwnershipForGifting_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_GetFriendOwnershipForGifting_Response) ProtoMessage() {}

func (x *CCheckout_GetFriendOwnershipForGifting_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_GetFriendOwnershipForGifting_Response.ProtoReflect.Descriptor instead.
func (*CCheckout_GetFriendOwnershipForGifting_Response) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{3}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response) GetOwnershipInfo() []*CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo {
	if x != nil {
		return x.OwnershipInfo
	}
	return nil
}

type CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accountid         *uint32  `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	AlreadyOwns       *bool    `protobuf:"varint,2,opt,name=already_owns,json=alreadyOwns" json:"already_owns,omitempty"`
	WishesFor         *bool    `protobuf:"varint,3,opt,name=wishes_for,json=wishesFor" json:"wishes_for,omitempty"`
	PartialOwnsAppids []uint32 `protobuf:"varint,4,rep,name=partial_owns_appids,json=partialOwnsAppids" json:"partial_owns_appids,omitempty"`
	PartialWishesFor  []uint32 `protobuf:"varint,5,rep,name=partial_wishes_for,json=partialWishesFor" json:"partial_wishes_for,omitempty"`
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) Reset() {
	*x = CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) ProtoMessage() {}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership.ProtoReflect.Descriptor instead.
func (*CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{4}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) GetAlreadyOwns() bool {
	if x != nil && x.AlreadyOwns != nil {
		return *x.AlreadyOwns
	}
	return false
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) GetWishesFor() bool {
	if x != nil && x.WishesFor != nil {
		return *x.WishesFor
	}
	return false
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) GetPartialOwnsAppids() []uint32 {
	if x != nil {
		return x.PartialOwnsAppids
	}
	return nil
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership) GetPartialWishesFor() []uint32 {
	if x != nil {
		return x.PartialWishesFor
	}
	return nil
}

type CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId          *StoreItemID                                                       `protobuf:"bytes,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	FriendOwnership []*CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership `protobuf:"bytes,2,rep,name=friend_ownership,json=friendOwnership" json:"friend_ownership,omitempty"`
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo) Reset() {
	*x = CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo) ProtoMessage() {}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo.ProtoReflect.Descriptor instead.
func (*CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{5}
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo) GetItemId() *StoreItemID {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo) GetFriendOwnership() []*CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership {
	if x != nil {
		return x.FriendOwnership
	}
	return nil
}

type CCheckout_ValidateCart_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gidshoppingcart    *int64                      `protobuf:"varint,1,opt,name=gidshoppingcart" json:"gidshoppingcart,omitempty"`
	Context            *StoreBrowseContext         `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
	DataRequest        *StoreBrowseItemDataRequest `protobuf:"bytes,3,opt,name=data_request,json=dataRequest" json:"data_request,omitempty"`
	GiftInfo           *CartGiftInfo               `protobuf:"bytes,4,opt,name=gift_info,json=giftInfo" json:"gift_info,omitempty"`
	Gidreplayoftransid *uint64                     `protobuf:"fixed64,5,opt,name=gidreplayoftransid" json:"gidreplayoftransid,omitempty"`
	ForInitPurchase    *bool                       `protobuf:"varint,6,opt,name=for_init_purchase,json=forInitPurchase" json:"for_init_purchase,omitempty"`
}

func (x *CCheckout_ValidateCart_Request) Reset() {
	*x = CCheckout_ValidateCart_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_ValidateCart_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_ValidateCart_Request) ProtoMessage() {}

func (x *CCheckout_ValidateCart_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_ValidateCart_Request.ProtoReflect.Descriptor instead.
func (*CCheckout_ValidateCart_Request) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{6}
}

func (x *CCheckout_ValidateCart_Request) GetGidshoppingcart() int64 {
	if x != nil && x.Gidshoppingcart != nil {
		return *x.Gidshoppingcart
	}
	return 0
}

func (x *CCheckout_ValidateCart_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CCheckout_ValidateCart_Request) GetDataRequest() *StoreBrowseItemDataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

func (x *CCheckout_ValidateCart_Request) GetGiftInfo() *CartGiftInfo {
	if x != nil {
		return x.GiftInfo
	}
	return nil
}

func (x *CCheckout_ValidateCart_Request) GetGidreplayoftransid() uint64 {
	if x != nil && x.Gidreplayoftransid != nil {
		return *x.Gidreplayoftransid
	}
	return 0
}

func (x *CCheckout_ValidateCart_Request) GetForInitPurchase() bool {
	if x != nil && x.ForInitPurchase != nil {
		return *x.ForInitPurchase
	}
	return false
}

type CCheckout_ValidateCart_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CartItems       []*CCheckout_ValidateCart_Response_CartItem      `protobuf:"bytes,1,rep,name=cart_items,json=cartItems" json:"cart_items,omitempty"`
	EstimatedTotals *CCheckout_ValidateCart_Response_EstimatedTotals `protobuf:"bytes,5,opt,name=estimated_totals,json=estimatedTotals" json:"estimated_totals,omitempty"`
}

func (x *CCheckout_ValidateCart_Response) Reset() {
	*x = CCheckout_ValidateCart_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_ValidateCart_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_ValidateCart_Response) ProtoMessage() {}

func (x *CCheckout_ValidateCart_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_ValidateCart_Response.ProtoReflect.Descriptor instead.
func (*CCheckout_ValidateCart_Response) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{7}
}

func (x *CCheckout_ValidateCart_Response) GetCartItems() []*CCheckout_ValidateCart_Response_CartItem {
	if x != nil {
		return x.CartItems
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response) GetEstimatedTotals() *CCheckout_ValidateCart_Response_EstimatedTotals {
	if x != nil {
		return x.EstimatedTotals
	}
	return nil
}

type CCheckout_ValidateCart_Response_CartItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LineItemId                  *uint64                                            `protobuf:"varint,1,opt,name=line_item_id,json=lineItemId" json:"line_item_id,omitempty"`
	ItemId                      *StoreItemID                                       `protobuf:"bytes,2,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	StoreItem                   *StoreItem                                         `protobuf:"bytes,3,opt,name=store_item,json=storeItem" json:"store_item,omitempty"`
	GiftInfo                    *CartGiftInfo                                      `protobuf:"bytes,4,opt,name=gift_info,json=giftInfo" json:"gift_info,omitempty"`
	Errors                      *CCheckout_ValidateCart_Response_CartItem_Errors   `protobuf:"bytes,5,opt,name=errors" json:"errors,omitempty"`
	Warnings                    *CCheckout_ValidateCart_Response_CartItem_Warnings `protobuf:"bytes,6,opt,name=warnings" json:"warnings,omitempty"`
	Subtotal                    *CartAmount                                        `protobuf:"bytes,7,opt,name=subtotal" json:"subtotal,omitempty"`
	PriceWhenAdded              *CartAmount                                        `protobuf:"bytes,8,opt,name=price_when_added,json=priceWhenAdded" json:"price_when_added,omitempty"`
	OriginalPrice               *CartAmount                                        `protobuf:"bytes,9,opt,name=original_price,json=originalPrice" json:"original_price,omitempty"`
	CouponApplied               *CartCoupon                                        `protobuf:"bytes,10,opt,name=coupon_applied,json=couponApplied" json:"coupon_applied,omitempty"`
	CouponDiscount              *CartAmount                                        `protobuf:"bytes,11,opt,name=coupon_discount,json=couponDiscount" json:"coupon_discount,omitempty"`
	CanPurchaseAsGift           *bool                                              `protobuf:"varint,12,opt,name=can_purchase_as_gift,json=canPurchaseAsGift" json:"can_purchase_as_gift,omitempty"`
	RestrictAddAdditionalToCart *bool                                              `protobuf:"varint,13,opt,name=restrict_add_additional_to_cart,json=restrictAddAdditionalToCart" json:"restrict_add_additional_to_cart,omitempty"`
}

func (x *CCheckout_ValidateCart_Response_CartItem) Reset() {
	*x = CCheckout_ValidateCart_Response_CartItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_ValidateCart_Response_CartItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_ValidateCart_Response_CartItem) ProtoMessage() {}

func (x *CCheckout_ValidateCart_Response_CartItem) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_ValidateCart_Response_CartItem.ProtoReflect.Descriptor instead.
func (*CCheckout_ValidateCart_Response_CartItem) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{8}
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetLineItemId() uint64 {
	if x != nil && x.LineItemId != nil {
		return *x.LineItemId
	}
	return 0
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetItemId() *StoreItemID {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetStoreItem() *StoreItem {
	if x != nil {
		return x.StoreItem
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetGiftInfo() *CartGiftInfo {
	if x != nil {
		return x.GiftInfo
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetErrors() *CCheckout_ValidateCart_Response_CartItem_Errors {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetWarnings() *CCheckout_ValidateCart_Response_CartItem_Warnings {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetSubtotal() *CartAmount {
	if x != nil {
		return x.Subtotal
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetPriceWhenAdded() *CartAmount {
	if x != nil {
		return x.PriceWhenAdded
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetOriginalPrice() *CartAmount {
	if x != nil {
		return x.OriginalPrice
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetCouponApplied() *CartCoupon {
	if x != nil {
		return x.CouponApplied
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetCouponDiscount() *CartAmount {
	if x != nil {
		return x.CouponDiscount
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetCanPurchaseAsGift() bool {
	if x != nil && x.CanPurchaseAsGift != nil {
		return *x.CanPurchaseAsGift
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem) GetRestrictAddAdditionalToCart() bool {
	if x != nil && x.RestrictAddAdditionalToCart != nil {
		return *x.RestrictAddAdditionalToCart
	}
	return false
}

type CCheckout_ValidateCart_Response_CartItem_Errors struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnedAppids                 []int32 `protobuf:"varint,1,rep,name=owned_appids,json=ownedAppids" json:"owned_appids,omitempty"`
	DuplicateAppidsInCart       []int32 `protobuf:"varint,2,rep,name=duplicate_appids_in_cart,json=duplicateAppidsInCart" json:"duplicate_appids_in_cart,omitempty"`
	UnavailableInCountry        *bool   `protobuf:"varint,3,opt,name=unavailable_in_country,json=unavailableInCountry" json:"unavailable_in_country,omitempty"`
	InvalidCoupon               *bool   `protobuf:"varint,4,opt,name=invalid_coupon,json=invalidCoupon" json:"invalid_coupon,omitempty"`
	InvalidCouponForItem        *bool   `protobuf:"varint,5,opt,name=invalid_coupon_for_item,json=invalidCouponForItem" json:"invalid_coupon_for_item,omitempty"`
	CouponExclusivePromo        *bool   `protobuf:"varint,6,opt,name=coupon_exclusive_promo,json=couponExclusivePromo" json:"coupon_exclusive_promo,omitempty"`
	CannotPurchaseAsGift        *bool   `protobuf:"varint,7,opt,name=cannot_purchase_as_gift,json=cannotPurchaseAsGift" json:"cannot_purchase_as_gift,omitempty"`
	InvalidItem                 *bool   `protobuf:"varint,8,opt,name=invalid_item,json=invalidItem" json:"invalid_item,omitempty"`
	TooManyInCart               *bool   `protobuf:"varint,9,opt,name=too_many_in_cart,json=tooManyInCart" json:"too_many_in_cart,omitempty"`
	HasExistingBillingAgreement *bool   `protobuf:"varint,10,opt,name=has_existing_billing_agreement,json=hasExistingBillingAgreement" json:"has_existing_billing_agreement,omitempty"`
	MissingMustOwnAppids        []int32 `protobuf:"varint,11,rep,name=missing_must_own_appids,json=missingMustOwnAppids" json:"missing_must_own_appids,omitempty"`
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) Reset() {
	*x = CCheckout_ValidateCart_Response_CartItem_Errors{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_ValidateCart_Response_CartItem_Errors) ProtoMessage() {}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_ValidateCart_Response_CartItem_Errors.ProtoReflect.Descriptor instead.
func (*CCheckout_ValidateCart_Response_CartItem_Errors) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{9}
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetOwnedAppids() []int32 {
	if x != nil {
		return x.OwnedAppids
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetDuplicateAppidsInCart() []int32 {
	if x != nil {
		return x.DuplicateAppidsInCart
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetUnavailableInCountry() bool {
	if x != nil && x.UnavailableInCountry != nil {
		return *x.UnavailableInCountry
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetInvalidCoupon() bool {
	if x != nil && x.InvalidCoupon != nil {
		return *x.InvalidCoupon
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetInvalidCouponForItem() bool {
	if x != nil && x.InvalidCouponForItem != nil {
		return *x.InvalidCouponForItem
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetCouponExclusivePromo() bool {
	if x != nil && x.CouponExclusivePromo != nil {
		return *x.CouponExclusivePromo
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetCannotPurchaseAsGift() bool {
	if x != nil && x.CannotPurchaseAsGift != nil {
		return *x.CannotPurchaseAsGift
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetInvalidItem() bool {
	if x != nil && x.InvalidItem != nil {
		return *x.InvalidItem
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetTooManyInCart() bool {
	if x != nil && x.TooManyInCart != nil {
		return *x.TooManyInCart
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetHasExistingBillingAgreement() bool {
	if x != nil && x.HasExistingBillingAgreement != nil {
		return *x.HasExistingBillingAgreement
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Errors) GetMissingMustOwnAppids() []int32 {
	if x != nil {
		return x.MissingMustOwnAppids
	}
	return nil
}

type CCheckout_ValidateCart_Response_CartItem_Warnings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnedAppids          []int32                                                             `protobuf:"varint,1,rep,name=owned_appids,json=ownedAppids" json:"owned_appids,omitempty"`
	OwnedAppidsExtraCopy []int32                                                             `protobuf:"varint,2,rep,name=owned_appids_extra_copy,json=ownedAppidsExtraCopy" json:"owned_appids_extra_copy,omitempty"`
	AppidsInMastersub    []*CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub `protobuf:"bytes,3,rep,name=appids_in_mastersub,json=appidsInMastersub" json:"appids_in_mastersub,omitempty"`
	PriceHasChanged      *bool                                                               `protobuf:"varint,4,opt,name=price_has_changed,json=priceHasChanged" json:"price_has_changed,omitempty"`
	NonRefundable        *bool                                                               `protobuf:"varint,5,opt,name=non_refundable,json=nonRefundable" json:"non_refundable,omitempty"`
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) Reset() {
	*x = CCheckout_ValidateCart_Response_CartItem_Warnings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_ValidateCart_Response_CartItem_Warnings) ProtoMessage() {}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_ValidateCart_Response_CartItem_Warnings.ProtoReflect.Descriptor instead.
func (*CCheckout_ValidateCart_Response_CartItem_Warnings) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{10}
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) GetOwnedAppids() []int32 {
	if x != nil {
		return x.OwnedAppids
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) GetOwnedAppidsExtraCopy() []int32 {
	if x != nil {
		return x.OwnedAppidsExtraCopy
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) GetAppidsInMastersub() []*CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub {
	if x != nil {
		return x.AppidsInMastersub
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) GetPriceHasChanged() bool {
	if x != nil && x.PriceHasChanged != nil {
		return *x.PriceHasChanged
	}
	return false
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings) GetNonRefundable() bool {
	if x != nil && x.NonRefundable != nil {
		return *x.NonRefundable
	}
	return false
}

type CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CartAppid      *uint32 `protobuf:"varint,1,opt,name=cart_appid,json=cartAppid" json:"cart_appid,omitempty"`
	MastersubAppid *uint32 `protobuf:"varint,2,opt,name=mastersub_appid,json=mastersubAppid" json:"mastersub_appid,omitempty"`
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub) Reset() {
	*x = CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub) ProtoMessage() {}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub.ProtoReflect.Descriptor instead.
func (*CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{11}
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub) GetCartAppid() uint32 {
	if x != nil && x.CartAppid != nil {
		return *x.CartAppid
	}
	return 0
}

func (x *CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub) GetMastersubAppid() uint32 {
	if x != nil && x.MastersubAppid != nil {
		return *x.MastersubAppid
	}
	return 0
}

type CCheckout_ValidateCart_Response_EstimatedTotals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtotal               *CartAmount `protobuf:"bytes,1,opt,name=subtotal" json:"subtotal,omitempty"`
	WalletBalance          *CartAmount `protobuf:"bytes,2,opt,name=wallet_balance,json=walletBalance" json:"wallet_balance,omitempty"`
	ExceedingWalletBalance *CartAmount `protobuf:"bytes,3,opt,name=exceeding_wallet_balance,json=exceedingWalletBalance" json:"exceeding_wallet_balance,omitempty"`
	RemainingWalletBalance *CartAmount `protobuf:"bytes,4,opt,name=remaining_wallet_balance,json=remainingWalletBalance" json:"remaining_wallet_balance,omitempty"`
}

func (x *CCheckout_ValidateCart_Response_EstimatedTotals) Reset() {
	*x = CCheckout_ValidateCart_Response_EstimatedTotals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_checkout_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCheckout_ValidateCart_Response_EstimatedTotals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCheckout_ValidateCart_Response_EstimatedTotals) ProtoMessage() {}

func (x *CCheckout_ValidateCart_Response_EstimatedTotals) ProtoReflect() protoreflect.Message {
	mi := &file_service_checkout_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCheckout_ValidateCart_Response_EstimatedTotals.ProtoReflect.Descriptor instead.
func (*CCheckout_ValidateCart_Response_EstimatedTotals) Descriptor() ([]byte, []int) {
	return file_service_checkout_proto_rawDescGZIP(), []int{12}
}

func (x *CCheckout_ValidateCart_Response_EstimatedTotals) GetSubtotal() *CartAmount {
	if x != nil {
		return x.Subtotal
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_EstimatedTotals) GetWalletBalance() *CartAmount {
	if x != nil {
		return x.WalletBalance
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_EstimatedTotals) GetExceedingWalletBalance() *CartAmount {
	if x != nil {
		return x.ExceedingWalletBalance
	}
	return nil
}

func (x *CCheckout_ValidateCart_Response_EstimatedTotals) GetRemainingWalletBalance() *CartAmount {
	if x != nil {
		return x.RemainingWalletBalance
	}
	return nil
}

var File_service_checkout_proto protoreflect.FileDescriptor

var file_service_checkout_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x49, 0x0a, 0x20, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x5f, 0x41, 0x64, 0x64, 0x46, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x22, 0xa7, 0x01, 0x0a, 0x21, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x69, 0x64, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x73, 0x41, 0x64, 0x64,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x5f, 0x61, 0x64, 0x64,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73,
	0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x59, 0x0a, 0x2e, 0x43,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x47, 0x69,
	0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x52, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x2f, 0x43, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x47, 0x69, 0x66, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0e, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x46, 0x6f, 0x72, 0x47, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xff, 0x01, 0x0a, 0x3f, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x46, 0x6f, 0x72, 0x47, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x6f,
	0x77, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x4f, 0x77, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x5f, 0x66, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x69, 0x73, 0x68,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x6f, 0x77, 0x6e, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x77, 0x6e, 0x73, 0x41,
	0x70, 0x70, 0x69, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x77, 0x69, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x57, 0x69, 0x73, 0x68, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x22, 0xd3, 0x01, 0x0a, 0x3d, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x47, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x44, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x6b, 0x0a, 0x10,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x47, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0xc1, 0x02, 0x0a, 0x1e, 0x43, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x67, 0x69, 0x64, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x63, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x67, 0x69, 0x64, 0x73, 0x68, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x63, 0x61, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x42, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x47,
	0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x69, 0x64, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x6f, 0x66,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x12, 0x67,
	0x69, 0x64, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x6f, 0x66, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x6f,
	0x72, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x22, 0xc8, 0x01,
	0x0a, 0x1f, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x5b, 0x0a, 0x10, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x0f, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x22, 0xd9, 0x05, 0x0a, 0x28, 0x43, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2a, 0x0a, 0x09, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43,
	0x61, 0x72, 0x74, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x67, 0x69, 0x66,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12,
	0x4e, 0x0a, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x57, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x27, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12,
	0x32, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a,
	0x14, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x73,
	0x5f, 0x67, 0x69, 0x66, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x6e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x73, 0x47, 0x69, 0x66, 0x74, 0x12, 0x44,
	0x0a, 0x1f, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x61, 0x72,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x54, 0x6f,
	0x43, 0x61, 0x72, 0x74, 0x22, 0xd6, 0x04, 0x0a, 0x2f, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x64, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b,
	0x6f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x70, 0x69, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x64,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x5f,
	0x69, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x64,
	0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x69, 0x64, 0x73, 0x49, 0x6e,
	0x43, 0x61, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x46, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x35,
	0x0a, 0x17, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x73, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41,
	0x73, 0x47, 0x69, 0x66, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x27, 0x0a, 0x10, 0x74, 0x6f, 0x6f, 0x5f,
	0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x74, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x43, 0x61, 0x72,
	0x74, 0x12, 0x43, 0x0a, 0x1e, 0x68, 0x61, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x68, 0x61, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x4d, 0x75, 0x73, 0x74, 0x4f, 0x77, 0x6e, 0x41, 0x70, 0x70, 0x69, 0x64, 0x73, 0x22, 0xd3, 0x02,
	0x0a, 0x31, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x57, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x69, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x5f,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x63, 0x6f, 0x70,
	0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x14, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x41, 0x70,
	0x70, 0x69, 0x64, 0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x71, 0x0a,
	0x13, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x75, 0x62, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x43, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x61, 0x72,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x52, 0x11, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x73, 0x49, 0x6e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x75, 0x62,
	0x12, 0x2a, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x48, 0x61, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x6e, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x40, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x5f, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x75, 0x62, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74,
	0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x74, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70, 0x69, 0x64,
	0x22, 0x9c, 0x02, 0x0a, 0x2f, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a,
	0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x18, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x16, 0x65, 0x78, 0x63, 0x65, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x16, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x32,
	0xba, 0x02, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x57, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x41, 0x64,
	0x64, 0x46, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x47,
	0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x47, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x43, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x6f, 0x75, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x46, 0x6f, 0x72, 0x47, 0x69, 0x66, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x43, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x43, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
}

var (
	file_service_checkout_proto_rawDescOnce sync.Once
	file_service_checkout_proto_rawDescData = file_service_checkout_proto_rawDesc
)

func file_service_checkout_proto_rawDescGZIP() []byte {
	file_service_checkout_proto_rawDescOnce.Do(func() {
		file_service_checkout_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_checkout_proto_rawDescData)
	})
	return file_service_checkout_proto_rawDescData
}

var file_service_checkout_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_service_checkout_proto_goTypes = []any{
	(*CCheckout_AddFreeLicense_Request)(nil),                                 // 0: CCheckout_AddFreeLicense_Request
	(*CCheckout_AddFreeLicense_Response)(nil),                                // 1: CCheckout_AddFreeLicense_Response
	(*CCheckout_GetFriendOwnershipForGifting_Request)(nil),                   // 2: CCheckout_GetFriendOwnershipForGifting_Request
	(*CCheckout_GetFriendOwnershipForGifting_Response)(nil),                  // 3: CCheckout_GetFriendOwnershipForGifting_Response
	(*CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership)(nil),  // 4: CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership
	(*CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo)(nil),    // 5: CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo
	(*CCheckout_ValidateCart_Request)(nil),                                   // 6: CCheckout_ValidateCart_Request
	(*CCheckout_ValidateCart_Response)(nil),                                  // 7: CCheckout_ValidateCart_Response
	(*CCheckout_ValidateCart_Response_CartItem)(nil),                         // 8: CCheckout_ValidateCart_Response_CartItem
	(*CCheckout_ValidateCart_Response_CartItem_Errors)(nil),                  // 9: CCheckout_ValidateCart_Response_CartItem_Errors
	(*CCheckout_ValidateCart_Response_CartItem_Warnings)(nil),                // 10: CCheckout_ValidateCart_Response_CartItem_Warnings
	(*CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub)(nil), // 11: CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub
	(*CCheckout_ValidateCart_Response_EstimatedTotals)(nil),                  // 12: CCheckout_ValidateCart_Response_EstimatedTotals
	(*StoreItemID)(nil),                // 13: StoreItemID
	(*StoreBrowseContext)(nil),         // 14: StoreBrowseContext
	(*StoreBrowseItemDataRequest)(nil), // 15: StoreBrowseItemDataRequest
	(*CartGiftInfo)(nil),               // 16: CartGiftInfo
	(*StoreItem)(nil),                  // 17: StoreItem
	(*CartAmount)(nil),                 // 18: CartAmount
	(*CartCoupon)(nil),                 // 19: CartCoupon
}
var file_service_checkout_proto_depIdxs = []int32{
	13, // 0: CCheckout_AddFreeLicense_Request.item_id:type_name -> StoreItemID
	13, // 1: CCheckout_GetFriendOwnershipForGifting_Request.item_ids:type_name -> StoreItemID
	5,  // 2: CCheckout_GetFriendOwnershipForGifting_Response.ownership_info:type_name -> CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo
	13, // 3: CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo.item_id:type_name -> StoreItemID
	4,  // 4: CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo.friend_ownership:type_name -> CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership
	14, // 5: CCheckout_ValidateCart_Request.context:type_name -> StoreBrowseContext
	15, // 6: CCheckout_ValidateCart_Request.data_request:type_name -> StoreBrowseItemDataRequest
	16, // 7: CCheckout_ValidateCart_Request.gift_info:type_name -> CartGiftInfo
	8,  // 8: CCheckout_ValidateCart_Response.cart_items:type_name -> CCheckout_ValidateCart_Response_CartItem
	12, // 9: CCheckout_ValidateCart_Response.estimated_totals:type_name -> CCheckout_ValidateCart_Response_EstimatedTotals
	13, // 10: CCheckout_ValidateCart_Response_CartItem.item_id:type_name -> StoreItemID
	17, // 11: CCheckout_ValidateCart_Response_CartItem.store_item:type_name -> StoreItem
	16, // 12: CCheckout_ValidateCart_Response_CartItem.gift_info:type_name -> CartGiftInfo
	9,  // 13: CCheckout_ValidateCart_Response_CartItem.errors:type_name -> CCheckout_ValidateCart_Response_CartItem_Errors
	10, // 14: CCheckout_ValidateCart_Response_CartItem.warnings:type_name -> CCheckout_ValidateCart_Response_CartItem_Warnings
	18, // 15: CCheckout_ValidateCart_Response_CartItem.subtotal:type_name -> CartAmount
	18, // 16: CCheckout_ValidateCart_Response_CartItem.price_when_added:type_name -> CartAmount
	18, // 17: CCheckout_ValidateCart_Response_CartItem.original_price:type_name -> CartAmount
	19, // 18: CCheckout_ValidateCart_Response_CartItem.coupon_applied:type_name -> CartCoupon
	18, // 19: CCheckout_ValidateCart_Response_CartItem.coupon_discount:type_name -> CartAmount
	11, // 20: CCheckout_ValidateCart_Response_CartItem_Warnings.appids_in_mastersub:type_name -> CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub
	18, // 21: CCheckout_ValidateCart_Response_EstimatedTotals.subtotal:type_name -> CartAmount
	18, // 22: CCheckout_ValidateCart_Response_EstimatedTotals.wallet_balance:type_name -> CartAmount
	18, // 23: CCheckout_ValidateCart_Response_EstimatedTotals.exceeding_wallet_balance:type_name -> CartAmount
	18, // 24: CCheckout_ValidateCart_Response_EstimatedTotals.remaining_wallet_balance:type_name -> CartAmount
	0,  // 25: Checkout.AddFreeLicense:input_type -> CCheckout_AddFreeLicense_Request
	2,  // 26: Checkout.GetFriendOwnershipForGifting:input_type -> CCheckout_GetFriendOwnershipForGifting_Request
	6,  // 27: Checkout.ValidateCart:input_type -> CCheckout_ValidateCart_Request
	1,  // 28: Checkout.AddFreeLicense:output_type -> CCheckout_AddFreeLicense_Response
	3,  // 29: Checkout.GetFriendOwnershipForGifting:output_type -> CCheckout_GetFriendOwnershipForGifting_Response
	7,  // 30: Checkout.ValidateCart:output_type -> CCheckout_ValidateCart_Response
	28, // [28:31] is the sub-list for method output_type
	25, // [25:28] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_service_checkout_proto_init() }
func file_service_checkout_proto_init() {
	if File_service_checkout_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_checkout_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_AddFreeLicense_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_AddFreeLicense_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_GetFriendOwnershipForGifting_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_GetFriendOwnershipForGifting_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_GetFriendOwnershipForGifting_Response_FriendOwnership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_GetFriendOwnershipForGifting_Response_OwnershipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_ValidateCart_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_ValidateCart_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_ValidateCart_Response_CartItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_ValidateCart_Response_CartItem_Errors); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_ValidateCart_Response_CartItem_Warnings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_ValidateCart_Response_CartItem_Warnings_AppInMasterSub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_checkout_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CCheckout_ValidateCart_Response_EstimatedTotals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_checkout_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_checkout_proto_goTypes,
		DependencyIndexes: file_service_checkout_proto_depIdxs,
		MessageInfos:      file_service_checkout_proto_msgTypes,
	}.Build()
	File_service_checkout_proto = out.File
	file_service_checkout_proto_rawDesc = nil
	file_service_checkout_proto_goTypes = nil
	file_service_checkout_proto_depIdxs = nil
}
