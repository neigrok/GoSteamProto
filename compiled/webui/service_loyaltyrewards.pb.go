// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: service_loyaltyrewards.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CLoyaltyRewards_AddReaction_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetType *int32  `protobuf:"varint,1,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
	Targetid   *uint64 `protobuf:"varint,2,opt,name=targetid" json:"targetid,omitempty"`
	Reactionid *uint32 `protobuf:"varint,3,opt,name=reactionid" json:"reactionid,omitempty"`
}

func (x *CLoyaltyRewards_AddReaction_Request) Reset() {
	*x = CLoyaltyRewards_AddReaction_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_AddReaction_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_AddReaction_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_AddReaction_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_AddReaction_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_AddReaction_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{0}
}

func (x *CLoyaltyRewards_AddReaction_Request) GetTargetType() int32 {
	if x != nil && x.TargetType != nil {
		return *x.TargetType
	}
	return 0
}

func (x *CLoyaltyRewards_AddReaction_Request) GetTargetid() uint64 {
	if x != nil && x.Targetid != nil {
		return *x.Targetid
	}
	return 0
}

func (x *CLoyaltyRewards_AddReaction_Request) GetReactionid() uint32 {
	if x != nil && x.Reactionid != nil {
		return *x.Reactionid
	}
	return 0
}

type CLoyaltyRewards_AddReaction_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CLoyaltyRewards_AddReaction_Response) Reset() {
	*x = CLoyaltyRewards_AddReaction_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_AddReaction_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_AddReaction_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_AddReaction_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_AddReaction_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_AddReaction_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{1}
}

type CLoyaltyRewards_BatchedQueryRewardItems_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*CLoyaltyRewards_QueryRewardItems_Request `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Request) Reset() {
	*x = CLoyaltyRewards_BatchedQueryRewardItems_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_BatchedQueryRewardItems_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_BatchedQueryRewardItems_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_BatchedQueryRewardItems_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{2}
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Request) GetRequests() []*CLoyaltyRewards_QueryRewardItems_Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type CLoyaltyRewards_BatchedQueryRewardItems_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*CLoyaltyRewards_BatchedQueryRewardItems_Response_Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response) Reset() {
	*x = CLoyaltyRewards_BatchedQueryRewardItems_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_BatchedQueryRewardItems_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_BatchedQueryRewardItems_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_BatchedQueryRewardItems_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{3}
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response) GetResponses() []*CLoyaltyRewards_BatchedQueryRewardItems_Response_Response {
	if x != nil {
		return x.Responses
	}
	return nil
}

type CLoyaltyRewards_BatchedQueryRewardItems_Response_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult  *int32                                     `protobuf:"varint,1,opt,name=eresult" json:"eresult,omitempty"`
	Response *CLoyaltyRewards_QueryRewardItems_Response `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response_Response) Reset() {
	*x = CLoyaltyRewards_BatchedQueryRewardItems_Response_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_BatchedQueryRewardItems_Response_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_BatchedQueryRewardItems_Response_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_BatchedQueryRewardItems_Response_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{4}
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response_Response) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return 0
}

func (x *CLoyaltyRewards_BatchedQueryRewardItems_Response_Response) GetResponse() *CLoyaltyRewards_QueryRewardItems_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type CLoyaltyRewards_GetActivePurchaseBonuses_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CLoyaltyRewards_GetActivePurchaseBonuses_Request) Reset() {
	*x = CLoyaltyRewards_GetActivePurchaseBonuses_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetActivePurchaseBonuses_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetActivePurchaseBonuses_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetActivePurchaseBonuses_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetActivePurchaseBonuses_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetActivePurchaseBonuses_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{5}
}

type CLoyaltyRewards_GetActivePurchaseBonuses_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bonuses []*LoyaltyRewardPurchaseBonus `protobuf:"bytes,1,rep,name=bonuses" json:"bonuses,omitempty"`
}

func (x *CLoyaltyRewards_GetActivePurchaseBonuses_Response) Reset() {
	*x = CLoyaltyRewards_GetActivePurchaseBonuses_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetActivePurchaseBonuses_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetActivePurchaseBonuses_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetActivePurchaseBonuses_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetActivePurchaseBonuses_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetActivePurchaseBonuses_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{6}
}

func (x *CLoyaltyRewards_GetActivePurchaseBonuses_Response) GetBonuses() []*LoyaltyRewardPurchaseBonus {
	if x != nil {
		return x.Bonuses
	}
	return nil
}

type CLoyaltyRewards_GetEligibleApps_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CLoyaltyRewards_GetEligibleApps_Request) Reset() {
	*x = CLoyaltyRewards_GetEligibleApps_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetEligibleApps_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetEligibleApps_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetEligibleApps_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetEligibleApps_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetEligibleApps_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{7}
}

type CLoyaltyRewards_GetEligibleApps_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps []*CLoyaltyRewards_GetEligibleApps_Response_EligibleApp `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
}

func (x *CLoyaltyRewards_GetEligibleApps_Response) Reset() {
	*x = CLoyaltyRewards_GetEligibleApps_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetEligibleApps_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetEligibleApps_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetEligibleApps_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetEligibleApps_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetEligibleApps_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{8}
}

func (x *CLoyaltyRewards_GetEligibleApps_Response) GetApps() []*CLoyaltyRewards_GetEligibleApps_Response_EligibleApp {
	if x != nil {
		return x.Apps
	}
	return nil
}

type CLoyaltyRewards_GetEligibleApps_Response_EligibleApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid                     *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	HasItemsAnyoneCanPurchase *bool   `protobuf:"varint,2,opt,name=has_items_anyone_can_purchase,json=hasItemsAnyoneCanPurchase" json:"has_items_anyone_can_purchase,omitempty"`
	EventApp                  *bool   `protobuf:"varint,3,opt,name=event_app,json=eventApp" json:"event_app,omitempty"`
	HeroCarouselImage         *string `protobuf:"bytes,4,opt,name=hero_carousel_image,json=heroCarouselImage" json:"hero_carousel_image,omitempty"`
	Owned                     *bool   `protobuf:"varint,5,opt,name=owned" json:"owned,omitempty"`
}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) Reset() {
	*x = CLoyaltyRewards_GetEligibleApps_Response_EligibleApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) ProtoMessage() {}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetEligibleApps_Response_EligibleApp.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{9}
}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) GetHasItemsAnyoneCanPurchase() bool {
	if x != nil && x.HasItemsAnyoneCanPurchase != nil {
		return *x.HasItemsAnyoneCanPurchase
	}
	return false
}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) GetEventApp() bool {
	if x != nil && x.EventApp != nil {
		return *x.EventApp
	}
	return false
}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) GetHeroCarouselImage() string {
	if x != nil && x.HeroCarouselImage != nil {
		return *x.HeroCarouselImage
	}
	return ""
}

func (x *CLoyaltyRewards_GetEligibleApps_Response_EligibleApp) GetOwned() bool {
	if x != nil && x.Owned != nil {
		return *x.Owned
	}
	return false
}

type CLoyaltyRewards_GetEquippedProfileItems_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid  *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Language *string `protobuf:"bytes,2,opt,name=language" json:"language,omitempty"`
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Request) Reset() {
	*x = CLoyaltyRewards_GetEquippedProfileItems_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetEquippedProfileItems_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetEquippedProfileItems_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetEquippedProfileItems_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{10}
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CLoyaltyRewards_GetEquippedProfileItems_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDefinitions   []*LoyaltyRewardDefinition `protobuf:"bytes,1,rep,name=active_definitions,json=activeDefinitions" json:"active_definitions,omitempty"`
	InactiveDefinitions []*LoyaltyRewardDefinition `protobuf:"bytes,2,rep,name=inactive_definitions,json=inactiveDefinitions" json:"inactive_definitions,omitempty"`
	BundleDefinitions   []*LoyaltyRewardDefinition `protobuf:"bytes,3,rep,name=bundle_definitions,json=bundleDefinitions" json:"bundle_definitions,omitempty"`
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Response) Reset() {
	*x = CLoyaltyRewards_GetEquippedProfileItems_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetEquippedProfileItems_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetEquippedProfileItems_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetEquippedProfileItems_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{11}
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Response) GetActiveDefinitions() []*LoyaltyRewardDefinition {
	if x != nil {
		return x.ActiveDefinitions
	}
	return nil
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Response) GetInactiveDefinitions() []*LoyaltyRewardDefinition {
	if x != nil {
		return x.InactiveDefinitions
	}
	return nil
}

func (x *CLoyaltyRewards_GetEquippedProfileItems_Response) GetBundleDefinitions() []*LoyaltyRewardDefinition {
	if x != nil {
		return x.BundleDefinitions
	}
	return nil
}

type CLoyaltyRewards_GetPointsForSpend_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount    *int64  `protobuf:"varint,1,opt,name=amount" json:"amount,omitempty"`
	Ecurrency *uint32 `protobuf:"varint,2,opt,name=ecurrency" json:"ecurrency,omitempty"`
}

func (x *CLoyaltyRewards_GetPointsForSpend_Request) Reset() {
	*x = CLoyaltyRewards_GetPointsForSpend_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetPointsForSpend_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetPointsForSpend_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetPointsForSpend_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetPointsForSpend_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetPointsForSpend_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{12}
}

func (x *CLoyaltyRewards_GetPointsForSpend_Request) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *CLoyaltyRewards_GetPointsForSpend_Request) GetEcurrency() uint32 {
	if x != nil && x.Ecurrency != nil {
		return *x.Ecurrency
	}
	return 0
}

type CLoyaltyRewards_GetPointsForSpend_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points *int64 `protobuf:"varint,1,opt,name=points" json:"points,omitempty"`
}

func (x *CLoyaltyRewards_GetPointsForSpend_Response) Reset() {
	*x = CLoyaltyRewards_GetPointsForSpend_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetPointsForSpend_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetPointsForSpend_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetPointsForSpend_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetPointsForSpend_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetPointsForSpend_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{13}
}

func (x *CLoyaltyRewards_GetPointsForSpend_Response) GetPoints() int64 {
	if x != nil && x.Points != nil {
		return *x.Points
	}
	return 0
}

type CLoyaltyRewards_GetProfileCustomizationsConfig_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Request) Reset() {
	*x = CLoyaltyRewards_GetProfileCustomizationsConfig_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetProfileCustomizationsConfig_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetProfileCustomizationsConfig_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetProfileCustomizationsConfig_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{14}
}

type CLoyaltyRewards_GetProfileCustomizationsConfig_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PointsCost                    *uint32 `protobuf:"varint,1,opt,name=points_cost,json=pointsCost" json:"points_cost,omitempty"`
	UpgradePointsCost             *uint32 `protobuf:"varint,2,opt,name=upgrade_points_cost,json=upgradePointsCost" json:"upgrade_points_cost,omitempty"`
	PurchasableCustomizationTypes []int32 `protobuf:"varint,3,rep,name=purchasable_customization_types,json=purchasableCustomizationTypes" json:"purchasable_customization_types,omitempty"`
	UpgradableCustomizationTypes  []int32 `protobuf:"varint,4,rep,name=upgradable_customization_types,json=upgradableCustomizationTypes" json:"upgradable_customization_types,omitempty"`
	MaxSlotsPerType               *uint32 `protobuf:"varint,5,opt,name=max_slots_per_type,json=maxSlotsPerType" json:"max_slots_per_type,omitempty"`
	MaxUpgradableLevel            *uint32 `protobuf:"varint,6,opt,name=max_upgradable_level,json=maxUpgradableLevel" json:"max_upgradable_level,omitempty"`
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) Reset() {
	*x = CLoyaltyRewards_GetProfileCustomizationsConfig_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetProfileCustomizationsConfig_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetProfileCustomizationsConfig_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetProfileCustomizationsConfig_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{15}
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) GetPointsCost() uint32 {
	if x != nil && x.PointsCost != nil {
		return *x.PointsCost
	}
	return 0
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) GetUpgradePointsCost() uint32 {
	if x != nil && x.UpgradePointsCost != nil {
		return *x.UpgradePointsCost
	}
	return 0
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) GetPurchasableCustomizationTypes() []int32 {
	if x != nil {
		return x.PurchasableCustomizationTypes
	}
	return nil
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) GetUpgradableCustomizationTypes() []int32 {
	if x != nil {
		return x.UpgradableCustomizationTypes
	}
	return nil
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) GetMaxSlotsPerType() uint32 {
	if x != nil && x.MaxSlotsPerType != nil {
		return *x.MaxSlotsPerType
	}
	return 0
}

func (x *CLoyaltyRewards_GetProfileCustomizationsConfig_Response) GetMaxUpgradableLevel() uint32 {
	if x != nil && x.MaxUpgradableLevel != nil {
		return *x.MaxUpgradableLevel
	}
	return 0
}

type CLoyaltyRewards_GetReactionConfig_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CLoyaltyRewards_GetReactionConfig_Request) Reset() {
	*x = CLoyaltyRewards_GetReactionConfig_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactionConfig_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactionConfig_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactionConfig_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactionConfig_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactionConfig_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{16}
}

type CLoyaltyRewards_GetReactionConfig_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reactions []*CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig `protobuf:"bytes,3,rep,name=reactions" json:"reactions,omitempty"`
}

func (x *CLoyaltyRewards_GetReactionConfig_Response) Reset() {
	*x = CLoyaltyRewards_GetReactionConfig_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactionConfig_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactionConfig_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactionConfig_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactionConfig_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactionConfig_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{17}
}

func (x *CLoyaltyRewards_GetReactionConfig_Response) GetReactions() []*CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig {
	if x != nil {
		return x.Reactions
	}
	return nil
}

type CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reactionid        *int32   `protobuf:"varint,1,opt,name=reactionid" json:"reactionid,omitempty"`
	PointsCost        *uint32  `protobuf:"varint,2,opt,name=points_cost,json=pointsCost" json:"points_cost,omitempty"`
	PointsTransferred *uint32  `protobuf:"varint,3,opt,name=points_transferred,json=pointsTransferred" json:"points_transferred,omitempty"`
	ValidTargetTypes  []int32  `protobuf:"varint,4,rep,name=valid_target_types,json=validTargetTypes" json:"valid_target_types,omitempty"`
	ValidUgcTypes     []uint32 `protobuf:"varint,5,rep,name=valid_ugc_types,json=validUgcTypes" json:"valid_ugc_types,omitempty"`
}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) Reset() {
	*x = CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{18}
}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) GetReactionid() int32 {
	if x != nil && x.Reactionid != nil {
		return *x.Reactionid
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) GetPointsCost() uint32 {
	if x != nil && x.PointsCost != nil {
		return *x.PointsCost
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) GetPointsTransferred() uint32 {
	if x != nil && x.PointsTransferred != nil {
		return *x.PointsTransferred
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) GetValidTargetTypes() []int32 {
	if x != nil {
		return x.ValidTargetTypes
	}
	return nil
}

func (x *CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig) GetValidUgcTypes() []uint32 {
	if x != nil {
		return x.ValidUgcTypes
	}
	return nil
}

type CLoyaltyRewards_GetReactions_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetType *int32  `protobuf:"varint,1,opt,name=target_type,json=targetType" json:"target_type,omitempty"`
	Targetid   *uint64 `protobuf:"varint,2,opt,name=targetid" json:"targetid,omitempty"`
}

func (x *CLoyaltyRewards_GetReactions_Request) Reset() {
	*x = CLoyaltyRewards_GetReactions_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactions_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactions_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactions_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{19}
}

func (x *CLoyaltyRewards_GetReactions_Request) GetTargetType() int32 {
	if x != nil && x.TargetType != nil {
		return *x.TargetType
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactions_Request) GetTargetid() uint64 {
	if x != nil && x.Targetid != nil {
		return *x.Targetid
	}
	return 0
}

type CLoyaltyRewards_GetReactions_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reactionids []uint32 `protobuf:"varint,1,rep,name=reactionids" json:"reactionids,omitempty"`
}

func (x *CLoyaltyRewards_GetReactions_Response) Reset() {
	*x = CLoyaltyRewards_GetReactions_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactions_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactions_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactions_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{20}
}

func (x *CLoyaltyRewards_GetReactions_Response) GetReactionids() []uint32 {
	if x != nil {
		return x.Reactionids
	}
	return nil
}

type CLoyaltyRewards_GetReactionsSummaryForUser_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Request) Reset() {
	*x = CLoyaltyRewards_GetReactionsSummaryForUser_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactionsSummaryForUser_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactionsSummaryForUser_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactionsSummaryForUser_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{21}
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CLoyaltyRewards_GetReactionsSummaryForUser_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown `protobuf:"bytes,1,rep,name=total" json:"total,omitempty"`
	UserReviews []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown `protobuf:"bytes,2,rep,name=user_reviews,json=userReviews" json:"user_reviews,omitempty"`
	Ugc         []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown `protobuf:"bytes,3,rep,name=ugc" json:"ugc,omitempty"`
	Profile     []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown `protobuf:"bytes,4,rep,name=profile" json:"profile,omitempty"`
	ForumTopics []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown `protobuf:"bytes,5,rep,name=forum_topics,json=forumTopics" json:"forum_topics,omitempty"`
	// optional uint32 total_given = 5;
	Comments []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown `protobuf:"bytes,6,rep,name=comments" json:"comments,omitempty"`
	// optional uint32 total_received = 6;
	TotalPointsGiven *int64 `protobuf:"varint,7,opt,name=total_points_given,json=totalPointsGiven" json:"total_points_given,omitempty"`
	// optional uint32 total_given = 7;
	TotalPointsReceived *int64 `protobuf:"varint,8,opt,name=total_points_received,json=totalPointsReceived" json:"total_points_received,omitempty"`
	// optional uint32 total_received = 8;
	TotalPointsGiven_Field_9     *int64 `protobuf:"varint,9,opt,name=total_points_given__field_9,json=totalPointsGivenField9" json:"total_points_given__field_9,omitempty"`
	TotalPointsReceived_Field_10 *int64 `protobuf:"varint,10,opt,name=total_points_received__field_10,json=totalPointsReceivedField10" json:"total_points_received__field_10,omitempty"`
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) Reset() {
	*x = CLoyaltyRewards_GetReactionsSummaryForUser_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactionsSummaryForUser_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactionsSummaryForUser_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactionsSummaryForUser_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{22}
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetTotal() []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetUserReviews() []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown {
	if x != nil {
		return x.UserReviews
	}
	return nil
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetUgc() []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown {
	if x != nil {
		return x.Ugc
	}
	return nil
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetProfile() []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetForumTopics() []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown {
	if x != nil {
		return x.ForumTopics
	}
	return nil
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetComments() []*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetTotalPointsGiven() int64 {
	if x != nil && x.TotalPointsGiven != nil {
		return *x.TotalPointsGiven
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetTotalPointsReceived() int64 {
	if x != nil && x.TotalPointsReceived != nil {
		return *x.TotalPointsReceived
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetTotalPointsGiven_Field_9() int64 {
	if x != nil && x.TotalPointsGiven_Field_9 != nil {
		return *x.TotalPointsGiven_Field_9
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response) GetTotalPointsReceived_Field_10() int64 {
	if x != nil && x.TotalPointsReceived_Field_10 != nil {
		return *x.TotalPointsReceived_Field_10
	}
	return 0
}

type CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reactionid     *int32  `protobuf:"varint,1,opt,name=reactionid" json:"reactionid,omitempty"`
	Given          *uint32 `protobuf:"varint,2,opt,name=given" json:"given,omitempty"`
	Received       *uint32 `protobuf:"varint,3,opt,name=received" json:"received,omitempty"`
	PointsGiven    *int64  `protobuf:"varint,4,opt,name=points_given,json=pointsGiven" json:"points_given,omitempty"`
	PointsReceived *int64  `protobuf:"varint,5,opt,name=points_received,json=pointsReceived" json:"points_received,omitempty"`
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) Reset() {
	*x = CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) ProtoMessage() {}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{23}
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) GetReactionid() int32 {
	if x != nil && x.Reactionid != nil {
		return *x.Reactionid
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) GetGiven() uint32 {
	if x != nil && x.Given != nil {
		return *x.Given
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) GetReceived() uint32 {
	if x != nil && x.Received != nil {
		return *x.Received
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) GetPointsGiven() int64 {
	if x != nil && x.PointsGiven != nil {
		return *x.PointsGiven
	}
	return 0
}

func (x *CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown) GetPointsReceived() int64 {
	if x != nil && x.PointsReceived != nil {
		return *x.PointsReceived
	}
	return 0
}

type CLoyaltyRewards_GetSummary_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Steamid *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
}

func (x *CLoyaltyRewards_GetSummary_Request) Reset() {
	*x = CLoyaltyRewards_GetSummary_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetSummary_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetSummary_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_GetSummary_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetSummary_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetSummary_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{24}
}

func (x *CLoyaltyRewards_GetSummary_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CLoyaltyRewards_GetSummary_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Summary          *CLoyaltyRewards_GetSummary_Response_Summary `protobuf:"bytes,1,opt,name=summary" json:"summary,omitempty"`
	TimestampUpdated *uint32                                      `protobuf:"varint,2,opt,name=timestamp_updated,json=timestampUpdated" json:"timestamp_updated,omitempty"`
	AuditidHighwater *uint64                                      `protobuf:"varint,3,opt,name=auditid_highwater,json=auditidHighwater" json:"auditid_highwater,omitempty"`
}

func (x *CLoyaltyRewards_GetSummary_Response) Reset() {
	*x = CLoyaltyRewards_GetSummary_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetSummary_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetSummary_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_GetSummary_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetSummary_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetSummary_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{25}
}

func (x *CLoyaltyRewards_GetSummary_Response) GetSummary() *CLoyaltyRewards_GetSummary_Response_Summary {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *CLoyaltyRewards_GetSummary_Response) GetTimestampUpdated() uint32 {
	if x != nil && x.TimestampUpdated != nil {
		return *x.TimestampUpdated
	}
	return 0
}

func (x *CLoyaltyRewards_GetSummary_Response) GetAuditidHighwater() uint64 {
	if x != nil && x.AuditidHighwater != nil {
		return *x.AuditidHighwater
	}
	return 0
}

type CLoyaltyRewards_GetSummary_Response_Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Points       *int64 `protobuf:"varint,1,opt,name=points" json:"points,omitempty"`
	PointsEarned *int64 `protobuf:"varint,2,opt,name=points_earned,json=pointsEarned" json:"points_earned,omitempty"`
	PointsSpent  *int64 `protobuf:"varint,3,opt,name=points_spent,json=pointsSpent" json:"points_spent,omitempty"`
}

func (x *CLoyaltyRewards_GetSummary_Response_Summary) Reset() {
	*x = CLoyaltyRewards_GetSummary_Response_Summary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_GetSummary_Response_Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_GetSummary_Response_Summary) ProtoMessage() {}

func (x *CLoyaltyRewards_GetSummary_Response_Summary) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_GetSummary_Response_Summary.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_GetSummary_Response_Summary) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{26}
}

func (x *CLoyaltyRewards_GetSummary_Response_Summary) GetPoints() int64 {
	if x != nil && x.Points != nil {
		return *x.Points
	}
	return 0
}

func (x *CLoyaltyRewards_GetSummary_Response_Summary) GetPointsEarned() int64 {
	if x != nil && x.PointsEarned != nil {
		return *x.PointsEarned
	}
	return 0
}

func (x *CLoyaltyRewards_GetSummary_Response_Summary) GetPointsSpent() int64 {
	if x != nil && x.PointsSpent != nil {
		return *x.PointsSpent
	}
	return 0
}

type CLoyaltyRewards_QueryRewardItems_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appids                        []uint32 `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	TimeAvailable                 *uint32  `protobuf:"varint,2,opt,name=time_available,json=timeAvailable" json:"time_available,omitempty"`
	CommunityItemClasses          []int32  `protobuf:"varint,3,rep,name=community_item_classes,json=communityItemClasses" json:"community_item_classes,omitempty"`
	Language                      *string  `protobuf:"bytes,4,opt,name=language" json:"language,omitempty"`
	Count                         *int32   `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	Cursor                        *string  `protobuf:"bytes,6,opt,name=cursor" json:"cursor,omitempty"`
	Sort                          *int32   `protobuf:"varint,7,opt,name=sort,def=1" json:"sort,omitempty"`
	SortDescending                *bool    `protobuf:"varint,8,opt,name=sort_descending,json=sortDescending,def=1" json:"sort_descending,omitempty"`
	RewardTypes                   []int32  `protobuf:"varint,9,rep,name=reward_types,json=rewardTypes" json:"reward_types,omitempty"`
	ExcludedCommunityItemClasses  []int32  `protobuf:"varint,10,rep,name=excluded_community_item_classes,json=excludedCommunityItemClasses" json:"excluded_community_item_classes,omitempty"`
	Definitionids                 []uint32 `protobuf:"varint,11,rep,name=definitionids" json:"definitionids,omitempty"`
	Filters                       []int32  `protobuf:"varint,12,rep,name=filters" json:"filters,omitempty"`
	FilterMatchAllCategoryTags    []string `protobuf:"bytes,13,rep,name=filter_match_all_category_tags,json=filterMatchAllCategoryTags" json:"filter_match_all_category_tags,omitempty"`
	FilterMatchAnyCategoryTags    []string `protobuf:"bytes,14,rep,name=filter_match_any_category_tags,json=filterMatchAnyCategoryTags" json:"filter_match_any_category_tags,omitempty"`
	ContainsDefinitionids         []uint32 `protobuf:"varint,15,rep,name=contains_definitionids,json=containsDefinitionids" json:"contains_definitionids,omitempty"`
	IncludeDirectPurchaseDisabled *bool    `protobuf:"varint,16,opt,name=include_direct_purchase_disabled,json=includeDirectPurchaseDisabled" json:"include_direct_purchase_disabled,omitempty"`
	ExcludedContentDescriptors    []uint32 `protobuf:"varint,17,rep,name=excluded_content_descriptors,json=excludedContentDescriptors" json:"excluded_content_descriptors,omitempty"`
	ExcludedAppids                []uint32 `protobuf:"varint,18,rep,name=excluded_appids,json=excludedAppids" json:"excluded_appids,omitempty"`
	ExcludedStoreTagids           []uint32 `protobuf:"varint,19,rep,name=excluded_store_tagids,json=excludedStoreTagids" json:"excluded_store_tagids,omitempty"`
	StoreTagids                   []uint32 `protobuf:"varint,20,rep,name=store_tagids,json=storeTagids" json:"store_tagids,omitempty"`
	SearchTerm                    *string  `protobuf:"bytes,21,opt,name=search_term,json=searchTerm" json:"search_term,omitempty"`
}

// Default values for CLoyaltyRewards_QueryRewardItems_Request fields.
const (
	Default_CLoyaltyRewards_QueryRewardItems_Request_Sort           = int32(1)
	Default_CLoyaltyRewards_QueryRewardItems_Request_SortDescending = bool(true)
)

func (x *CLoyaltyRewards_QueryRewardItems_Request) Reset() {
	*x = CLoyaltyRewards_QueryRewardItems_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_QueryRewardItems_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_QueryRewardItems_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_QueryRewardItems_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_QueryRewardItems_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{27}
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetTimeAvailable() uint32 {
	if x != nil && x.TimeAvailable != nil {
		return *x.TimeAvailable
	}
	return 0
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetCommunityItemClasses() []int32 {
	if x != nil {
		return x.CommunityItemClasses
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetCursor() string {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return ""
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetSort() int32 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return Default_CLoyaltyRewards_QueryRewardItems_Request_Sort
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetSortDescending() bool {
	if x != nil && x.SortDescending != nil {
		return *x.SortDescending
	}
	return Default_CLoyaltyRewards_QueryRewardItems_Request_SortDescending
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetRewardTypes() []int32 {
	if x != nil {
		return x.RewardTypes
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetExcludedCommunityItemClasses() []int32 {
	if x != nil {
		return x.ExcludedCommunityItemClasses
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetDefinitionids() []uint32 {
	if x != nil {
		return x.Definitionids
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetFilters() []int32 {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetFilterMatchAllCategoryTags() []string {
	if x != nil {
		return x.FilterMatchAllCategoryTags
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetFilterMatchAnyCategoryTags() []string {
	if x != nil {
		return x.FilterMatchAnyCategoryTags
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetContainsDefinitionids() []uint32 {
	if x != nil {
		return x.ContainsDefinitionids
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetIncludeDirectPurchaseDisabled() bool {
	if x != nil && x.IncludeDirectPurchaseDisabled != nil {
		return *x.IncludeDirectPurchaseDisabled
	}
	return false
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetExcludedContentDescriptors() []uint32 {
	if x != nil {
		return x.ExcludedContentDescriptors
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetExcludedAppids() []uint32 {
	if x != nil {
		return x.ExcludedAppids
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetExcludedStoreTagids() []uint32 {
	if x != nil {
		return x.ExcludedStoreTagids
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetStoreTagids() []uint32 {
	if x != nil {
		return x.StoreTagids
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Request) GetSearchTerm() string {
	if x != nil && x.SearchTerm != nil {
		return *x.SearchTerm
	}
	return ""
}

type CLoyaltyRewards_QueryRewardItems_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definitions []*LoyaltyRewardDefinition `protobuf:"bytes,1,rep,name=definitions" json:"definitions,omitempty"`
	TotalCount  *int32                     `protobuf:"varint,2,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	Count       *int32                     `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	NextCursor  *string                    `protobuf:"bytes,4,opt,name=next_cursor,json=nextCursor" json:"next_cursor,omitempty"`
}

func (x *CLoyaltyRewards_QueryRewardItems_Response) Reset() {
	*x = CLoyaltyRewards_QueryRewardItems_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_QueryRewardItems_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_QueryRewardItems_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_QueryRewardItems_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_QueryRewardItems_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_QueryRewardItems_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{28}
}

func (x *CLoyaltyRewards_QueryRewardItems_Response) GetDefinitions() []*LoyaltyRewardDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *CLoyaltyRewards_QueryRewardItems_Response) GetTotalCount() int32 {
	if x != nil && x.TotalCount != nil {
		return *x.TotalCount
	}
	return 0
}

func (x *CLoyaltyRewards_QueryRewardItems_Response) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CLoyaltyRewards_QueryRewardItems_Response) GetNextCursor() string {
	if x != nil && x.NextCursor != nil {
		return *x.NextCursor
	}
	return ""
}

type CLoyaltyRewards_RedeemPoints_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defid              *uint32 `protobuf:"varint,1,opt,name=defid" json:"defid,omitempty"`
	ExpectedPointsCost *int64  `protobuf:"varint,2,opt,name=expected_points_cost,json=expectedPointsCost" json:"expected_points_cost,omitempty"`
}

func (x *CLoyaltyRewards_RedeemPoints_Request) Reset() {
	*x = CLoyaltyRewards_RedeemPoints_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPoints_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPoints_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPoints_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPoints_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPoints_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{29}
}

func (x *CLoyaltyRewards_RedeemPoints_Request) GetDefid() uint32 {
	if x != nil && x.Defid != nil {
		return *x.Defid
	}
	return 0
}

func (x *CLoyaltyRewards_RedeemPoints_Request) GetExpectedPointsCost() int64 {
	if x != nil && x.ExpectedPointsCost != nil {
		return *x.ExpectedPointsCost
	}
	return 0
}

type CLoyaltyRewards_RedeemPoints_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Communityitemid        *uint64  `protobuf:"varint,1,opt,name=communityitemid" json:"communityitemid,omitempty"`
	BundleCommunityItemIds []uint64 `protobuf:"varint,2,rep,name=bundle_community_item_ids,json=bundleCommunityItemIds" json:"bundle_community_item_ids,omitempty"`
}

func (x *CLoyaltyRewards_RedeemPoints_Response) Reset() {
	*x = CLoyaltyRewards_RedeemPoints_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPoints_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPoints_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPoints_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPoints_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPoints_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{30}
}

func (x *CLoyaltyRewards_RedeemPoints_Response) GetCommunityitemid() uint64 {
	if x != nil && x.Communityitemid != nil {
		return *x.Communityitemid
	}
	return 0
}

func (x *CLoyaltyRewards_RedeemPoints_Response) GetBundleCommunityItemIds() []uint64 {
	if x != nil {
		return x.BundleCommunityItemIds
	}
	return nil
}

type CLoyaltyRewards_RedeemPointsForBadgeLevel_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defid     *uint32 `protobuf:"varint,1,opt,name=defid" json:"defid,omitempty"`
	NumLevels *int32  `protobuf:"varint,2,opt,name=num_levels,json=numLevels,def=1" json:"num_levels,omitempty"`
}

// Default values for CLoyaltyRewards_RedeemPointsForBadgeLevel_Request fields.
const (
	Default_CLoyaltyRewards_RedeemPointsForBadgeLevel_Request_NumLevels = int32(1)
)

func (x *CLoyaltyRewards_RedeemPointsForBadgeLevel_Request) Reset() {
	*x = CLoyaltyRewards_RedeemPointsForBadgeLevel_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPointsForBadgeLevel_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPointsForBadgeLevel_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPointsForBadgeLevel_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPointsForBadgeLevel_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPointsForBadgeLevel_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{31}
}

func (x *CLoyaltyRewards_RedeemPointsForBadgeLevel_Request) GetDefid() uint32 {
	if x != nil && x.Defid != nil {
		return *x.Defid
	}
	return 0
}

func (x *CLoyaltyRewards_RedeemPointsForBadgeLevel_Request) GetNumLevels() int32 {
	if x != nil && x.NumLevels != nil {
		return *x.NumLevels
	}
	return Default_CLoyaltyRewards_RedeemPointsForBadgeLevel_Request_NumLevels
}

type CLoyaltyRewards_RedeemPointsForProfileCustomization_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomizationType *int32 `protobuf:"varint,1,opt,name=customization_type,json=customizationType" json:"customization_type,omitempty"`
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Request) Reset() {
	*x = CLoyaltyRewards_RedeemPointsForProfileCustomization_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPointsForProfileCustomization_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPointsForProfileCustomization_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPointsForProfileCustomization_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{32}
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Request) GetCustomizationType() int32 {
	if x != nil && x.CustomizationType != nil {
		return *x.CustomizationType
	}
	return 0
}

type CLoyaltyRewards_RedeemPointsForProfileCustomization_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Purchaseid *uint64 `protobuf:"varint,1,opt,name=purchaseid" json:"purchaseid,omitempty"`
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Response) Reset() {
	*x = CLoyaltyRewards_RedeemPointsForProfileCustomization_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPointsForProfileCustomization_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPointsForProfileCustomization_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPointsForProfileCustomization_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{33}
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomization_Response) GetPurchaseid() uint64 {
	if x != nil && x.Purchaseid != nil {
		return *x.Purchaseid
	}
	return 0
}

type CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomizationType *int32  `protobuf:"varint,1,opt,name=customization_type,json=customizationType" json:"customization_type,omitempty"`
	NewLevel          *uint32 `protobuf:"varint,2,opt,name=new_level,json=newLevel" json:"new_level,omitempty"`
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request) Reset() {
	*x = CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{34}
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request) GetCustomizationType() int32 {
	if x != nil && x.CustomizationType != nil {
		return *x.CustomizationType
	}
	return 0
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request) GetNewLevel() uint32 {
	if x != nil && x.NewLevel != nil {
		return *x.NewLevel
	}
	return 0
}

type CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response) Reset() {
	*x = CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{35}
}

type CLoyaltyRewards_RedeemPointsToUpgradeItem_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defid           *uint32 `protobuf:"varint,1,opt,name=defid" json:"defid,omitempty"`
	Communityitemid *uint64 `protobuf:"varint,2,opt,name=communityitemid" json:"communityitemid,omitempty"`
}

func (x *CLoyaltyRewards_RedeemPointsToUpgradeItem_Request) Reset() {
	*x = CLoyaltyRewards_RedeemPointsToUpgradeItem_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RedeemPointsToUpgradeItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RedeemPointsToUpgradeItem_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_RedeemPointsToUpgradeItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RedeemPointsToUpgradeItem_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RedeemPointsToUpgradeItem_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{36}
}

func (x *CLoyaltyRewards_RedeemPointsToUpgradeItem_Request) GetDefid() uint32 {
	if x != nil && x.Defid != nil {
		return *x.Defid
	}
	return 0
}

func (x *CLoyaltyRewards_RedeemPointsToUpgradeItem_Request) GetCommunityitemid() uint64 {
	if x != nil && x.Communityitemid != nil {
		return *x.Communityitemid
	}
	return 0
}

type CLoyaltyRewards_RegisterForSteamDeckRewards_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber   *string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	ControllerCode *string `protobuf:"bytes,2,opt,name=controller_code,json=controllerCode" json:"controller_code,omitempty"`
}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Request) Reset() {
	*x = CLoyaltyRewards_RegisterForSteamDeckRewards_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RegisterForSteamDeckRewards_Request) ProtoMessage() {}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RegisterForSteamDeckRewards_Request.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RegisterForSteamDeckRewards_Request) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{37}
}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Request) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Request) GetControllerCode() string {
	if x != nil && x.ControllerCode != nil {
		return *x.ControllerCode
	}
	return ""
}

type CLoyaltyRewards_RegisterForSteamDeckRewards_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrantedProfileModifier *bool `protobuf:"varint,1,opt,name=granted_profile_modifier,json=grantedProfileModifier" json:"granted_profile_modifier,omitempty"`
}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Response) Reset() {
	*x = CLoyaltyRewards_RegisterForSteamDeckRewards_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLoyaltyRewards_RegisterForSteamDeckRewards_Response) ProtoMessage() {}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLoyaltyRewards_RegisterForSteamDeckRewards_Response.ProtoReflect.Descriptor instead.
func (*CLoyaltyRewards_RegisterForSteamDeckRewards_Response) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{38}
}

func (x *CLoyaltyRewards_RegisterForSteamDeckRewards_Response) GetGrantedProfileModifier() bool {
	if x != nil && x.GrantedProfileModifier != nil {
		return *x.GrantedProfileModifier
	}
	return false
}

type LoyaltyRewardPurchaseBonus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bonusid             *uint64 `protobuf:"varint,1,opt,name=bonusid" json:"bonusid,omitempty"`
	Appid               *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Active              *bool   `protobuf:"varint,3,opt,name=active" json:"active,omitempty"`
	Points              *int32  `protobuf:"varint,4,opt,name=points" json:"points,omitempty"`
	TimestampStart      *uint32 `protobuf:"varint,5,opt,name=timestamp_start,json=timestampStart" json:"timestamp_start,omitempty"`
	TimestampEnd        *uint32 `protobuf:"varint,6,opt,name=timestamp_end,json=timestampEnd" json:"timestamp_end,omitempty"`
	InternalDescription *string `protobuf:"bytes,7,opt,name=internal_description,json=internalDescription" json:"internal_description,omitempty"`
}

func (x *LoyaltyRewardPurchaseBonus) Reset() {
	*x = LoyaltyRewardPurchaseBonus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_loyaltyrewards_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoyaltyRewardPurchaseBonus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoyaltyRewardPurchaseBonus) ProtoMessage() {}

func (x *LoyaltyRewardPurchaseBonus) ProtoReflect() protoreflect.Message {
	mi := &file_service_loyaltyrewards_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoyaltyRewardPurchaseBonus.ProtoReflect.Descriptor instead.
func (*LoyaltyRewardPurchaseBonus) Descriptor() ([]byte, []int) {
	return file_service_loyaltyrewards_proto_rawDescGZIP(), []int{39}
}

func (x *LoyaltyRewardPurchaseBonus) GetBonusid() uint64 {
	if x != nil && x.Bonusid != nil {
		return *x.Bonusid
	}
	return 0
}

func (x *LoyaltyRewardPurchaseBonus) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *LoyaltyRewardPurchaseBonus) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *LoyaltyRewardPurchaseBonus) GetPoints() int32 {
	if x != nil && x.Points != nil {
		return *x.Points
	}
	return 0
}

func (x *LoyaltyRewardPurchaseBonus) GetTimestampStart() uint32 {
	if x != nil && x.TimestampStart != nil {
		return *x.TimestampStart
	}
	return 0
}

func (x *LoyaltyRewardPurchaseBonus) GetTimestampEnd() uint32 {
	if x != nil && x.TimestampEnd != nil {
		return *x.TimestampEnd
	}
	return 0
}

func (x *LoyaltyRewardPurchaseBonus) GetInternalDescription() string {
	if x != nil && x.InternalDescription != nil {
		return *x.InternalDescription
	}
	return ""
}

var File_service_loyaltyrewards_proto protoreflect.FileDescriptor

var file_service_loyaltyrewards_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8c, 0x01, 0x0a, 0x23, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0x26,
	0x0a, 0x24, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x2f, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x22, 0x8c, 0x01, 0x0a, 0x30, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22,
	0x9d, 0x01, 0x0a, 0x39, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x43, 0x4c, 0x6f, 0x79,
	0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x32, 0x0a, 0x30, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x31, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4c, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x22,
	0x29, 0x0a, 0x27, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x70,
	0x70, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x28, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70, 0x70,
	0x73, 0x22, 0xf1, 0x01, 0x0a, 0x34, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c,
	0x65, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x45,
	0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x40, 0x0a, 0x1d, 0x68, 0x61, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x61, 0x6e,
	0x79, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x68, 0x61, 0x73, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x41, 0x6e, 0x79, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x12,
	0x2e, 0x0a, 0x13, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x63, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x65,
	0x72, 0x6f, 0x43, 0x61, 0x72, 0x6f, 0x75, 0x73, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x64, 0x22, 0x67, 0x0a, 0x2f, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x91,
	0x02, 0x0a, 0x30, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x14,
	0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x79,
	0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x11, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x61, 0x0a, 0x29, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46,
	0x6f, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x44, 0x0a, 0x2a, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x38, 0x0a, 0x36, 0x43,
	0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8b, 0x03, 0x0a, 0x37, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x50, 0x0a, 0x1f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18,
	0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x1d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x1e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x1c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x6d, 0x61, 0x78, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x50, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x6d, 0x61, 0x78, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x2b, 0x0a, 0x29, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x86, 0x01, 0x0a, 0x2a, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x95, 0x02, 0x0a, 0x39, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18,
	0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65,
	0x64, 0x12, 0x36, 0x0a, 0x12, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x42, 0x08, 0x82,
	0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x75, 0x67, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x67, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x6d, 0x0a, 0x24, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x64,
	0x22, 0x49, 0x0a, 0x25, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x32, 0x43,
	0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0xbd, 0x06, 0x0a, 0x33,
	0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f,
	0x77, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x61, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x50, 0x0a, 0x03,
	0x75, 0x67, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x43, 0x4c, 0x6f, 0x79,
	0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x03, 0x75, 0x67, 0x63, 0x12, 0x58,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x75,
	0x6d, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x0b,
	0x66, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x5a, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x47, 0x69, 0x76, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x1b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x5f,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x39, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x47, 0x69, 0x76, 0x65, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x39, 0x12, 0x43, 0x0a, 0x1f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x31, 0x30, 0x22, 0xe7, 0x01, 0x0a, 0x3d,
	0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x28, 0x0a,
	0x0a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x69, 0x76, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x5f, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x22, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x69, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x23, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x5f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x75, 0x64, 0x69, 0x74, 0x69, 0x64, 0x5f, 0x68, 0x69,
	0x67, 0x68, 0x77, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x69, 0x64, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x74, 0x65, 0x72, 0x22,
	0x8d, 0x01, 0x0a, 0x2b, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x22,
	0xe2, 0x07, 0x0a, 0x28, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69,
	0x6d, 0x65, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x14, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x42, 0x08, 0x82, 0xb5,
	0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2d, 0x0a, 0x0f,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0e, 0x73, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x0c, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x1f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x1c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x69, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x1e, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x1a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x6c,
	0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x61, 0x67, 0x73, 0x12, 0x42, 0x0a,
	0x1e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x6e,
	0x79, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x6e, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x35, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x73, 0x12, 0x47, 0x0a, 0x20, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x40, 0x0a, 0x1c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x1a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x41, 0x70, 0x70, 0x69, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x15,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x69, 0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x67, 0x69, 0x64, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x69, 0x64, 0x73,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x67,
	0x69, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x65, 0x72, 0x6d, 0x22, 0xbf, 0x01, 0x0a, 0x29, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x6e, 0x0a, 0x24, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64,
	0x65, 0x66, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x25, 0x43, 0x4c, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x16, 0x62,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x6b, 0x0a, 0x31, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x66, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x73, 0x22, 0x76, 0x0a, 0x3b, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82,
	0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x3c, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65,
	0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x42, 0x43,
	0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08, 0x82,
	0xb5, 0x18, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65,
	0x77, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e,
	0x65, 0x77, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x45, 0x0a, 0x43, 0x43, 0x4c, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73,
	0x0a, 0x31, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54, 0x6f,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x66, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x69, 0x74, 0x65,
	0x6d, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x33, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a, 0x34, 0x43, 0x4c, 0x6f,
	0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x18, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xfd, 0x01, 0x0a, 0x1a,
	0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x45, 0x6e, 0x64, 0x12, 0x31, 0x0a, 0x14, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xb4, 0x11, 0x0a, 0x0e,
	0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x5a,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e,
	0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x17, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x30, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x12, 0x31, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x43, 0x4c, 0x6f,
	0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x73, 0x12, 0x28, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41,
	0x70, 0x70, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x70, 0x70, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x30, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x45, 0x71, 0x75, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c,
	0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2a, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61,
	0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x57, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x23, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x10, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x29,
	0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x5f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x43, 0x4c, 0x6f, 0x79,
	0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0c, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x43,
	0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52,
	0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x19, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x32, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x46, 0x6f, 0x72, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xa2, 0x01,
	0x0a, 0x23, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xb7, 0x01, 0x0a, 0x2a, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x12, 0x43, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74,
	0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x19,
	0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x2e, 0x43, 0x4c, 0x6f, 0x79,
	0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x64, 0x65,
	0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f,
	0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x34, 0x2e, 0x43, 0x4c, 0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x43, 0x4c,
	0x6f, 0x79, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x44, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65,
}

var (
	file_service_loyaltyrewards_proto_rawDescOnce sync.Once
	file_service_loyaltyrewards_proto_rawDescData = file_service_loyaltyrewards_proto_rawDesc
)

func file_service_loyaltyrewards_proto_rawDescGZIP() []byte {
	file_service_loyaltyrewards_proto_rawDescOnce.Do(func() {
		file_service_loyaltyrewards_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_loyaltyrewards_proto_rawDescData)
	})
	return file_service_loyaltyrewards_proto_rawDescData
}

var file_service_loyaltyrewards_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_service_loyaltyrewards_proto_goTypes = []any{
	(*CLoyaltyRewards_AddReaction_Request)(nil),                                 // 0: CLoyaltyRewards_AddReaction_Request
	(*CLoyaltyRewards_AddReaction_Response)(nil),                                // 1: CLoyaltyRewards_AddReaction_Response
	(*CLoyaltyRewards_BatchedQueryRewardItems_Request)(nil),                     // 2: CLoyaltyRewards_BatchedQueryRewardItems_Request
	(*CLoyaltyRewards_BatchedQueryRewardItems_Response)(nil),                    // 3: CLoyaltyRewards_BatchedQueryRewardItems_Response
	(*CLoyaltyRewards_BatchedQueryRewardItems_Response_Response)(nil),           // 4: CLoyaltyRewards_BatchedQueryRewardItems_Response_Response
	(*CLoyaltyRewards_GetActivePurchaseBonuses_Request)(nil),                    // 5: CLoyaltyRewards_GetActivePurchaseBonuses_Request
	(*CLoyaltyRewards_GetActivePurchaseBonuses_Response)(nil),                   // 6: CLoyaltyRewards_GetActivePurchaseBonuses_Response
	(*CLoyaltyRewards_GetEligibleApps_Request)(nil),                             // 7: CLoyaltyRewards_GetEligibleApps_Request
	(*CLoyaltyRewards_GetEligibleApps_Response)(nil),                            // 8: CLoyaltyRewards_GetEligibleApps_Response
	(*CLoyaltyRewards_GetEligibleApps_Response_EligibleApp)(nil),                // 9: CLoyaltyRewards_GetEligibleApps_Response_EligibleApp
	(*CLoyaltyRewards_GetEquippedProfileItems_Request)(nil),                     // 10: CLoyaltyRewards_GetEquippedProfileItems_Request
	(*CLoyaltyRewards_GetEquippedProfileItems_Response)(nil),                    // 11: CLoyaltyRewards_GetEquippedProfileItems_Response
	(*CLoyaltyRewards_GetPointsForSpend_Request)(nil),                           // 12: CLoyaltyRewards_GetPointsForSpend_Request
	(*CLoyaltyRewards_GetPointsForSpend_Response)(nil),                          // 13: CLoyaltyRewards_GetPointsForSpend_Response
	(*CLoyaltyRewards_GetProfileCustomizationsConfig_Request)(nil),              // 14: CLoyaltyRewards_GetProfileCustomizationsConfig_Request
	(*CLoyaltyRewards_GetProfileCustomizationsConfig_Response)(nil),             // 15: CLoyaltyRewards_GetProfileCustomizationsConfig_Response
	(*CLoyaltyRewards_GetReactionConfig_Request)(nil),                           // 16: CLoyaltyRewards_GetReactionConfig_Request
	(*CLoyaltyRewards_GetReactionConfig_Response)(nil),                          // 17: CLoyaltyRewards_GetReactionConfig_Response
	(*CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig)(nil),           // 18: CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig
	(*CLoyaltyRewards_GetReactions_Request)(nil),                                // 19: CLoyaltyRewards_GetReactions_Request
	(*CLoyaltyRewards_GetReactions_Response)(nil),                               // 20: CLoyaltyRewards_GetReactions_Response
	(*CLoyaltyRewards_GetReactionsSummaryForUser_Request)(nil),                  // 21: CLoyaltyRewards_GetReactionsSummaryForUser_Request
	(*CLoyaltyRewards_GetReactionsSummaryForUser_Response)(nil),                 // 22: CLoyaltyRewards_GetReactionsSummaryForUser_Response
	(*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown)(nil),       // 23: CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown
	(*CLoyaltyRewards_GetSummary_Request)(nil),                                  // 24: CLoyaltyRewards_GetSummary_Request
	(*CLoyaltyRewards_GetSummary_Response)(nil),                                 // 25: CLoyaltyRewards_GetSummary_Response
	(*CLoyaltyRewards_GetSummary_Response_Summary)(nil),                         // 26: CLoyaltyRewards_GetSummary_Response_Summary
	(*CLoyaltyRewards_QueryRewardItems_Request)(nil),                            // 27: CLoyaltyRewards_QueryRewardItems_Request
	(*CLoyaltyRewards_QueryRewardItems_Response)(nil),                           // 28: CLoyaltyRewards_QueryRewardItems_Response
	(*CLoyaltyRewards_RedeemPoints_Request)(nil),                                // 29: CLoyaltyRewards_RedeemPoints_Request
	(*CLoyaltyRewards_RedeemPoints_Response)(nil),                               // 30: CLoyaltyRewards_RedeemPoints_Response
	(*CLoyaltyRewards_RedeemPointsForBadgeLevel_Request)(nil),                   // 31: CLoyaltyRewards_RedeemPointsForBadgeLevel_Request
	(*CLoyaltyRewards_RedeemPointsForProfileCustomization_Request)(nil),         // 32: CLoyaltyRewards_RedeemPointsForProfileCustomization_Request
	(*CLoyaltyRewards_RedeemPointsForProfileCustomization_Response)(nil),        // 33: CLoyaltyRewards_RedeemPointsForProfileCustomization_Response
	(*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request)(nil),  // 34: CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request
	(*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response)(nil), // 35: CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response
	(*CLoyaltyRewards_RedeemPointsToUpgradeItem_Request)(nil),                   // 36: CLoyaltyRewards_RedeemPointsToUpgradeItem_Request
	(*CLoyaltyRewards_RegisterForSteamDeckRewards_Request)(nil),                 // 37: CLoyaltyRewards_RegisterForSteamDeckRewards_Request
	(*CLoyaltyRewards_RegisterForSteamDeckRewards_Response)(nil),                // 38: CLoyaltyRewards_RegisterForSteamDeckRewards_Response
	(*LoyaltyRewardPurchaseBonus)(nil),                                          // 39: LoyaltyRewardPurchaseBonus
	(*LoyaltyRewardDefinition)(nil),                                             // 40: LoyaltyRewardDefinition
}
var file_service_loyaltyrewards_proto_depIdxs = []int32{
	27, // 0: CLoyaltyRewards_BatchedQueryRewardItems_Request.requests:type_name -> CLoyaltyRewards_QueryRewardItems_Request
	4,  // 1: CLoyaltyRewards_BatchedQueryRewardItems_Response.responses:type_name -> CLoyaltyRewards_BatchedQueryRewardItems_Response_Response
	28, // 2: CLoyaltyRewards_BatchedQueryRewardItems_Response_Response.response:type_name -> CLoyaltyRewards_QueryRewardItems_Response
	39, // 3: CLoyaltyRewards_GetActivePurchaseBonuses_Response.bonuses:type_name -> LoyaltyRewardPurchaseBonus
	9,  // 4: CLoyaltyRewards_GetEligibleApps_Response.apps:type_name -> CLoyaltyRewards_GetEligibleApps_Response_EligibleApp
	40, // 5: CLoyaltyRewards_GetEquippedProfileItems_Response.active_definitions:type_name -> LoyaltyRewardDefinition
	40, // 6: CLoyaltyRewards_GetEquippedProfileItems_Response.inactive_definitions:type_name -> LoyaltyRewardDefinition
	40, // 7: CLoyaltyRewards_GetEquippedProfileItems_Response.bundle_definitions:type_name -> LoyaltyRewardDefinition
	18, // 8: CLoyaltyRewards_GetReactionConfig_Response.reactions:type_name -> CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig
	23, // 9: CLoyaltyRewards_GetReactionsSummaryForUser_Response.total:type_name -> CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown
	23, // 10: CLoyaltyRewards_GetReactionsSummaryForUser_Response.user_reviews:type_name -> CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown
	23, // 11: CLoyaltyRewards_GetReactionsSummaryForUser_Response.ugc:type_name -> CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown
	23, // 12: CLoyaltyRewards_GetReactionsSummaryForUser_Response.profile:type_name -> CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown
	23, // 13: CLoyaltyRewards_GetReactionsSummaryForUser_Response.forum_topics:type_name -> CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown
	23, // 14: CLoyaltyRewards_GetReactionsSummaryForUser_Response.comments:type_name -> CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown
	26, // 15: CLoyaltyRewards_GetSummary_Response.summary:type_name -> CLoyaltyRewards_GetSummary_Response_Summary
	40, // 16: CLoyaltyRewards_QueryRewardItems_Response.definitions:type_name -> LoyaltyRewardDefinition
	0,  // 17: LoyaltyRewards.AddReaction:input_type -> CLoyaltyRewards_AddReaction_Request
	2,  // 18: LoyaltyRewards.BatchedQueryRewardItems:input_type -> CLoyaltyRewards_BatchedQueryRewardItems_Request
	5,  // 19: LoyaltyRewards.GetActivePurchaseBonuses:input_type -> CLoyaltyRewards_GetActivePurchaseBonuses_Request
	7,  // 20: LoyaltyRewards.GetEligibleApps:input_type -> CLoyaltyRewards_GetEligibleApps_Request
	10, // 21: LoyaltyRewards.GetEquippedProfileItems:input_type -> CLoyaltyRewards_GetEquippedProfileItems_Request
	12, // 22: LoyaltyRewards.GetPointsForSpend:input_type -> CLoyaltyRewards_GetPointsForSpend_Request
	14, // 23: LoyaltyRewards.GetProfileCustomizationsConfig:input_type -> CLoyaltyRewards_GetProfileCustomizationsConfig_Request
	16, // 24: LoyaltyRewards.GetReactionConfig:input_type -> CLoyaltyRewards_GetReactionConfig_Request
	19, // 25: LoyaltyRewards.GetReactions:input_type -> CLoyaltyRewards_GetReactions_Request
	21, // 26: LoyaltyRewards.GetReactionsSummaryForUser:input_type -> CLoyaltyRewards_GetReactionsSummaryForUser_Request
	24, // 27: LoyaltyRewards.GetSummary:input_type -> CLoyaltyRewards_GetSummary_Request
	27, // 28: LoyaltyRewards.QueryRewardItems:input_type -> CLoyaltyRewards_QueryRewardItems_Request
	29, // 29: LoyaltyRewards.RedeemPoints:input_type -> CLoyaltyRewards_RedeemPoints_Request
	31, // 30: LoyaltyRewards.RedeemPointsForBadgeLevel:input_type -> CLoyaltyRewards_RedeemPointsForBadgeLevel_Request
	32, // 31: LoyaltyRewards.RedeemPointsForProfileCustomization:input_type -> CLoyaltyRewards_RedeemPointsForProfileCustomization_Request
	34, // 32: LoyaltyRewards.RedeemPointsForProfileCustomizationUpgrade:input_type -> CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request
	36, // 33: LoyaltyRewards.RedeemPointsToUpgradeItem:input_type -> CLoyaltyRewards_RedeemPointsToUpgradeItem_Request
	37, // 34: LoyaltyRewards.RegisterForSteamDeckRewards:input_type -> CLoyaltyRewards_RegisterForSteamDeckRewards_Request
	1,  // 35: LoyaltyRewards.AddReaction:output_type -> CLoyaltyRewards_AddReaction_Response
	3,  // 36: LoyaltyRewards.BatchedQueryRewardItems:output_type -> CLoyaltyRewards_BatchedQueryRewardItems_Response
	6,  // 37: LoyaltyRewards.GetActivePurchaseBonuses:output_type -> CLoyaltyRewards_GetActivePurchaseBonuses_Response
	8,  // 38: LoyaltyRewards.GetEligibleApps:output_type -> CLoyaltyRewards_GetEligibleApps_Response
	11, // 39: LoyaltyRewards.GetEquippedProfileItems:output_type -> CLoyaltyRewards_GetEquippedProfileItems_Response
	13, // 40: LoyaltyRewards.GetPointsForSpend:output_type -> CLoyaltyRewards_GetPointsForSpend_Response
	15, // 41: LoyaltyRewards.GetProfileCustomizationsConfig:output_type -> CLoyaltyRewards_GetProfileCustomizationsConfig_Response
	17, // 42: LoyaltyRewards.GetReactionConfig:output_type -> CLoyaltyRewards_GetReactionConfig_Response
	20, // 43: LoyaltyRewards.GetReactions:output_type -> CLoyaltyRewards_GetReactions_Response
	22, // 44: LoyaltyRewards.GetReactionsSummaryForUser:output_type -> CLoyaltyRewards_GetReactionsSummaryForUser_Response
	25, // 45: LoyaltyRewards.GetSummary:output_type -> CLoyaltyRewards_GetSummary_Response
	28, // 46: LoyaltyRewards.QueryRewardItems:output_type -> CLoyaltyRewards_QueryRewardItems_Response
	30, // 47: LoyaltyRewards.RedeemPoints:output_type -> CLoyaltyRewards_RedeemPoints_Response
	30, // 48: LoyaltyRewards.RedeemPointsForBadgeLevel:output_type -> CLoyaltyRewards_RedeemPoints_Response
	33, // 49: LoyaltyRewards.RedeemPointsForProfileCustomization:output_type -> CLoyaltyRewards_RedeemPointsForProfileCustomization_Response
	35, // 50: LoyaltyRewards.RedeemPointsForProfileCustomizationUpgrade:output_type -> CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response
	30, // 51: LoyaltyRewards.RedeemPointsToUpgradeItem:output_type -> CLoyaltyRewards_RedeemPoints_Response
	38, // 52: LoyaltyRewards.RegisterForSteamDeckRewards:output_type -> CLoyaltyRewards_RegisterForSteamDeckRewards_Response
	35, // [35:53] is the sub-list for method output_type
	17, // [17:35] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_service_loyaltyrewards_proto_init() }
func file_service_loyaltyrewards_proto_init() {
	if File_service_loyaltyrewards_proto != nil {
		return
	}
	file_common_base_proto_init()
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_loyaltyrewards_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_AddReaction_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_AddReaction_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_BatchedQueryRewardItems_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_BatchedQueryRewardItems_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_BatchedQueryRewardItems_Response_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetActivePurchaseBonuses_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetActivePurchaseBonuses_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetEligibleApps_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetEligibleApps_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetEligibleApps_Response_EligibleApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetEquippedProfileItems_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetEquippedProfileItems_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetPointsForSpend_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetPointsForSpend_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetProfileCustomizationsConfig_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetProfileCustomizationsConfig_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactionConfig_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactionConfig_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactionConfig_Response_ReactionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactions_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactions_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactionsSummaryForUser_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactionsSummaryForUser_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetReactionsSummaryForUser_Response_Breakdown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetSummary_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetSummary_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_GetSummary_Response_Summary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_QueryRewardItems_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_QueryRewardItems_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPoints_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPoints_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPointsForBadgeLevel_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPointsForProfileCustomization_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPointsForProfileCustomization_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPointsForProfileCustomizationUpgrade_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RedeemPointsToUpgradeItem_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RegisterForSteamDeckRewards_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*CLoyaltyRewards_RegisterForSteamDeckRewards_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_loyaltyrewards_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*LoyaltyRewardPurchaseBonus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_loyaltyrewards_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_loyaltyrewards_proto_goTypes,
		DependencyIndexes: file_service_loyaltyrewards_proto_depIdxs,
		MessageInfos:      file_service_loyaltyrewards_proto_msgTypes,
	}.Build()
	File_service_loyaltyrewards_proto = out.File
	file_service_loyaltyrewards_proto_rawDesc = nil
	file_service_loyaltyrewards_proto_goTypes = nil
	file_service_loyaltyrewards_proto_depIdxs = nil
}
